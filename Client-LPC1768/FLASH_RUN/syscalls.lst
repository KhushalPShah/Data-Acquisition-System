   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._sbrk,"ax",%progbits
  20              		.align	2
  21              		.global	_sbrk
  22              		.thumb
  23              		.thumb_func
  25              	_sbrk:
  26              	.LFB0:
  27              		.file 1 "syscalls.c"
   1:syscalls.c    **** /* based on a example-code from Keil for CS G++ */
   2:syscalls.c    **** 
   3:syscalls.c    **** /* for caddr_t (typedef char * caddr_t;) */
   4:syscalls.c    **** #include <sys/types.h>
   5:syscalls.c    **** 
   6:syscalls.c    **** extern int  __cs3_heap_start;
   7:syscalls.c    **** 
   8:syscalls.c    **** caddr_t _sbrk ( int incr )
   9:syscalls.c    **** {
  28              		.loc 1 9 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  10:syscalls.c    ****      static unsigned char *heap = NULL;
  11:syscalls.c    ****      unsigned char *prev_heap;
  12:syscalls.c    **** 
  13:syscalls.c    ****      if (heap == NULL) {
  41              		.loc 1 13 0
  42 0008 0A4B     		ldr	r3, .L4
  43 000a 1B68     		ldr	r3, [r3]
  44 000c 002B     		cmp	r3, #0
  45 000e 02D1     		bne	.L2
  14:syscalls.c    **** 	  heap = (unsigned char *)&__cs3_heap_start;
  46              		.loc 1 14 0
  47 0010 084B     		ldr	r3, .L4
  48 0012 094A     		ldr	r2, .L4+4
  49 0014 1A60     		str	r2, [r3]
  50              	.L2:
  15:syscalls.c    ****      }
  16:syscalls.c    ****      prev_heap = heap;
  51              		.loc 1 16 0
  52 0016 074B     		ldr	r3, .L4
  53 0018 1B68     		ldr	r3, [r3]
  54 001a FB60     		str	r3, [r7, #12]
  17:syscalls.c    ****      /* check removed to show basic approach */
  18:syscalls.c    **** 
  19:syscalls.c    ****      heap += incr;
  55              		.loc 1 19 0
  56 001c 054B     		ldr	r3, .L4
  57 001e 1A68     		ldr	r2, [r3]
  58 0020 7B68     		ldr	r3, [r7, #4]
  59 0022 1344     		add	r3, r3, r2
  60 0024 034A     		ldr	r2, .L4
  61 0026 1360     		str	r3, [r2]
  20:syscalls.c    **** 
  21:syscalls.c    ****      return (caddr_t) prev_heap;
  62              		.loc 1 21 0
  63 0028 FB68     		ldr	r3, [r7, #12]
  22:syscalls.c    **** }
  64              		.loc 1 22 0
  65 002a 1846     		mov	r0, r3
  66 002c 1437     		adds	r7, r7, #20
  67              		.cfi_def_cfa_offset 4
  68 002e BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0030 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 0032 7047     		bx	lr
  75              	.L5:
  76              		.align	2
  77              	.L4:
  78 0034 00000000 		.word	heap.4306
  79 0038 00000000 		.word	__cs3_heap_start
  80              		.cfi_endproc
  81              	.LFE0:
  83              		.section	.bss.heap.4306,"aw",%nobits
  84              		.align	2
  87              	heap.4306:
  88 0000 00000000 		.space	4
  89              		.text
  90              	.Letext0:
  91              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
C:\Users\KHUSHA~1\AppData\Local\Temp\cce5MdEj.s:20     .text._sbrk:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cce5MdEj.s:25     .text._sbrk:00000000 _sbrk
C:\Users\KHUSHA~1\AppData\Local\Temp\cce5MdEj.s:78     .text._sbrk:00000034 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cce5MdEj.s:87     .bss.heap.4306:00000000 heap.4306
C:\Users\KHUSHA~1\AppData\Local\Temp\cce5MdEj.s:84     .bss.heap.4306:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__cs3_heap_start
