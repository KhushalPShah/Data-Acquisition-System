   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"tcp_out.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.tcp_output_alloc_header,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	tcp_output_alloc_header:
  25              	.LFB17:
  26              		.file 1 "Libraries/lwip-1.4.0/core/tcp_out.c"
   1:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
   2:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @file
   3:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Transmission Control Protocol, outgoing traffic
   4:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
   5:Libraries/lwip-1.4.0/core/tcp_out.c ****  * The output functions of TCP.
   6:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
   7:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
   8:Libraries/lwip-1.4.0/core/tcp_out.c **** 
   9:Libraries/lwip-1.4.0/core/tcp_out.c **** /*
  10:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  11:Libraries/lwip-1.4.0/core/tcp_out.c ****  * All rights reserved.
  12:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  13:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Redistribution and use in source and binary forms, with or without modification,
  14:Libraries/lwip-1.4.0/core/tcp_out.c ****  * are permitted provided that the following conditions are met:
  15:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  16:Libraries/lwip-1.4.0/core/tcp_out.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:Libraries/lwip-1.4.0/core/tcp_out.c ****  *    this list of conditions and the following disclaimer.
  18:Libraries/lwip-1.4.0/core/tcp_out.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:Libraries/lwip-1.4.0/core/tcp_out.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:Libraries/lwip-1.4.0/core/tcp_out.c ****  *    and/or other materials provided with the distribution.
  21:Libraries/lwip-1.4.0/core/tcp_out.c ****  * 3. The name of the author may not be used to endorse or promote products
  22:Libraries/lwip-1.4.0/core/tcp_out.c ****  *    derived from this software without specific prior written permission.
  23:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  24:Libraries/lwip-1.4.0/core/tcp_out.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  25:Libraries/lwip-1.4.0/core/tcp_out.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  26:Libraries/lwip-1.4.0/core/tcp_out.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  27:Libraries/lwip-1.4.0/core/tcp_out.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  28:Libraries/lwip-1.4.0/core/tcp_out.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  29:Libraries/lwip-1.4.0/core/tcp_out.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:Libraries/lwip-1.4.0/core/tcp_out.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:Libraries/lwip-1.4.0/core/tcp_out.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  32:Libraries/lwip-1.4.0/core/tcp_out.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  33:Libraries/lwip-1.4.0/core/tcp_out.c ****  * OF SUCH DAMAGE.
  34:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  35:Libraries/lwip-1.4.0/core/tcp_out.c ****  * This file is part of the lwIP TCP/IP stack.
  36:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  37:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Author: Adam Dunkels <adam@sics.se>
  38:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  39:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
  40:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  41:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/opt.h"
  42:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  43:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP /* don't build if not configured for use in lwipopts.h */
  44:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  45:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/tcp_impl.h"
  46:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/def.h"
  47:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/mem.h"
  48:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/memp.h"
  49:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/sys.h"
  50:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/ip_addr.h"
  51:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/netif.h"
  52:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/inet_chksum.h"
  53:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/stats.h"
  54:Libraries/lwip-1.4.0/core/tcp_out.c **** #include "lwip/snmp.h"
  55:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  56:Libraries/lwip-1.4.0/core/tcp_out.c **** #include <string.h>
  57:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  58:Libraries/lwip-1.4.0/core/tcp_out.c **** /* Define some copy-macros for checksum-on-copy so that the code looks
  59:Libraries/lwip-1.4.0/core/tcp_out.c ****    nicer by preventing too many ifdef's. */
  60:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
  61:Libraries/lwip-1.4.0/core/tcp_out.c **** #define TCP_DATA_COPY(dst, src, len, seg) do { \
  62:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcp_seg_add_chksum(LWIP_CHKSUM_COPY(dst, src, len), \
  63:Libraries/lwip-1.4.0/core/tcp_out.c ****                      len, &seg->chksum, &seg->chksum_swapped); \
  64:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->flags |= TF_SEG_DATA_CHECKSUMMED; } while(0)
  65:Libraries/lwip-1.4.0/core/tcp_out.c **** #define TCP_DATA_COPY2(dst, src, len, chksum, chksum_swapped)  \
  66:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcp_seg_add_chksum(LWIP_CHKSUM_COPY(dst, src, len), len, chksum, chksum_swapped);
  67:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* TCP_CHECKSUM_ON_COPY*/
  68:Libraries/lwip-1.4.0/core/tcp_out.c **** #define TCP_DATA_COPY(dst, src, len, seg)                     MEMCPY(dst, src, len)
  69:Libraries/lwip-1.4.0/core/tcp_out.c **** #define TCP_DATA_COPY2(dst, src, len, chksum, chksum_swapped) MEMCPY(dst, src, len)
  70:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY*/
  71:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  72:Libraries/lwip-1.4.0/core/tcp_out.c **** /** Define this to 1 for an extra check that the output checksum is valid
  73:Libraries/lwip-1.4.0/core/tcp_out.c ****  * (usefule when the checksum is generated by the application, not the stack) */
  74:Libraries/lwip-1.4.0/core/tcp_out.c **** #ifndef TCP_CHECKSUM_ON_COPY_SANITY_CHECK
  75:Libraries/lwip-1.4.0/core/tcp_out.c **** #define TCP_CHECKSUM_ON_COPY_SANITY_CHECK   0
  76:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
  77:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  78:Libraries/lwip-1.4.0/core/tcp_out.c **** /* Forward declarations.*/
  79:Libraries/lwip-1.4.0/core/tcp_out.c **** static void tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb);
  80:Libraries/lwip-1.4.0/core/tcp_out.c **** 
  81:Libraries/lwip-1.4.0/core/tcp_out.c **** /** Allocate a pbuf and create a tcphdr at p->payload, used for output
  82:Libraries/lwip-1.4.0/core/tcp_out.c ****  * functions other than the default tcp_output -> tcp_output_segment
  83:Libraries/lwip-1.4.0/core/tcp_out.c ****  * (e.g. tcp_send_empty_ack, etc.)
  84:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
  85:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb tcp pcb for which to send a packet (used to initialize tcp_hdr)
  86:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param optlen length of header-options
  87:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param datalen length of tcp data to reserve in pbuf
  88:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param seqno_be seqno in network byte order (big-endian)
  89:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return pbuf with p->payload being the tcp_hdr
  90:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
  91:Libraries/lwip-1.4.0/core/tcp_out.c **** static struct pbuf *
  92:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_output_alloc_header(struct tcp_pcb *pcb, u16_t optlen, u16_t datalen,
  93:Libraries/lwip-1.4.0/core/tcp_out.c ****                       u32_t seqno_be /* already in network byte order */)
  94:Libraries/lwip-1.4.0/core/tcp_out.c **** {
  27              		.loc 1 94 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 86B0     		sub	sp, sp, #24
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 7B60     		str	r3, [r7, #4]
  41 000a 0B46     		mov	r3, r1	@ movhi
  42 000c 7B81     		strh	r3, [r7, #10]	@ movhi
  43 000e 1346     		mov	r3, r2	@ movhi
  44 0010 3B81     		strh	r3, [r7, #8]	@ movhi
  95:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
  96:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
  45              		.loc 1 96 0
  46 0012 7A89     		ldrh	r2, [r7, #10]	@ movhi
  47 0014 3B89     		ldrh	r3, [r7, #8]	@ movhi
  48 0016 1344     		add	r3, r3, r2
  49 0018 9BB2     		uxth	r3, r3
  50 001a 1433     		adds	r3, r3, #20
  51 001c 9BB2     		uxth	r3, r3
  52 001e 0022     		movs	r2, #0
  53 0020 1946     		mov	r1, r3
  54 0022 0120     		movs	r0, #1
  55 0024 FFF7FEFF 		bl	pbuf_alloc
  56 0028 7861     		str	r0, [r7, #20]
  97:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (p != NULL) {
  57              		.loc 1 97 0
  58 002a 7B69     		ldr	r3, [r7, #20]
  59 002c 002B     		cmp	r3, #0
  60 002e 4AD0     		beq	.L2
  98:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
  99:Libraries/lwip-1.4.0/core/tcp_out.c ****                  (p->len >= TCP_HLEN + optlen));
 100:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr = (struct tcp_hdr *)p->payload;
  61              		.loc 1 100 0
  62 0030 7B69     		ldr	r3, [r7, #20]
  63 0032 5B68     		ldr	r3, [r3, #4]
  64 0034 3B61     		str	r3, [r7, #16]
 101:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->src = htons(pcb->local_port);
  65              		.loc 1 101 0
  66 0036 FB68     		ldr	r3, [r7, #12]
  67 0038 9B8B     		ldrh	r3, [r3, #28]
  68 003a 1846     		mov	r0, r3
  69 003c FFF7FEFF 		bl	lwip_htons
  70 0040 0346     		mov	r3, r0
  71 0042 1A46     		mov	r2, r3
  72 0044 3B69     		ldr	r3, [r7, #16]
  73 0046 1A80     		strh	r2, [r3]	@ unaligned
 102:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->dest = htons(pcb->remote_port);
  74              		.loc 1 102 0
  75 0048 FB68     		ldr	r3, [r7, #12]
  76 004a DB8B     		ldrh	r3, [r3, #30]
  77 004c 1846     		mov	r0, r3
  78 004e FFF7FEFF 		bl	lwip_htons
  79 0052 0346     		mov	r3, r0
  80 0054 1A46     		mov	r2, r3
  81 0056 3B69     		ldr	r3, [r7, #16]
  82 0058 5A80     		strh	r2, [r3, #2]	@ unaligned
 103:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
  83              		.loc 1 103 0
  84 005a 3B69     		ldr	r3, [r7, #16]
  85 005c 7A68     		ldr	r2, [r7, #4]
  86 005e 5A60     		str	r2, [r3, #4]	@ unaligned
 104:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->ackno = htonl(pcb->rcv_nxt);
  87              		.loc 1 104 0
  88 0060 FB68     		ldr	r3, [r7, #12]
  89 0062 5B6A     		ldr	r3, [r3, #36]
  90 0064 1846     		mov	r0, r3
  91 0066 FFF7FEFF 		bl	lwip_htonl
  92 006a 0246     		mov	r2, r0
  93 006c 3B69     		ldr	r3, [r7, #16]
  94 006e 9A60     		str	r2, [r3, #8]	@ unaligned
 105:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), TCP_ACK);
  95              		.loc 1 105 0
  96 0070 7B89     		ldrh	r3, [r7, #10]
  97 0072 9B08     		lsrs	r3, r3, #2
  98 0074 9BB2     		uxth	r3, r3
  99 0076 0533     		adds	r3, r3, #5
 100 0078 9BB2     		uxth	r3, r3
 101 007a 1B03     		lsls	r3, r3, #12
 102 007c 9BB2     		uxth	r3, r3
 103 007e 43F01003 		orr	r3, r3, #16
 104 0082 9BB2     		uxth	r3, r3
 105 0084 1846     		mov	r0, r3
 106 0086 FFF7FEFF 		bl	lwip_htons
 107 008a 0346     		mov	r3, r0
 108 008c 1A46     		mov	r2, r3
 109 008e 3B69     		ldr	r3, [r7, #16]
 110 0090 9A81     		strh	r2, [r3, #12]	@ unaligned
 106:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->wnd = htons(pcb->rcv_ann_wnd);
 111              		.loc 1 106 0
 112 0092 FB68     		ldr	r3, [r7, #12]
 113 0094 5B8D     		ldrh	r3, [r3, #42]
 114 0096 1846     		mov	r0, r3
 115 0098 FFF7FEFF 		bl	lwip_htons
 116 009c 0346     		mov	r3, r0
 117 009e 1A46     		mov	r2, r3
 118 00a0 3B69     		ldr	r3, [r7, #16]
 119 00a2 DA81     		strh	r2, [r3, #14]	@ unaligned
 107:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->chksum = 0;
 120              		.loc 1 107 0
 121 00a4 3B69     		ldr	r3, [r7, #16]
 122 00a6 0022     		movs	r2, #0
 123 00a8 1A74     		strb	r2, [r3, #16]
 124 00aa 0022     		movs	r2, #0
 125 00ac 5A74     		strb	r2, [r3, #17]
 108:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcphdr->urgp = 0;
 126              		.loc 1 108 0
 127 00ae 3B69     		ldr	r3, [r7, #16]
 128 00b0 0022     		movs	r2, #0
 129 00b2 9A74     		strb	r2, [r3, #18]
 130 00b4 0022     		movs	r2, #0
 131 00b6 DA74     		strb	r2, [r3, #19]
 109:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 110:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
 111:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
 132              		.loc 1 111 0
 133 00b8 FB68     		ldr	r3, [r7, #12]
 134 00ba 5B6A     		ldr	r3, [r3, #36]
 135 00bc FA68     		ldr	r2, [r7, #12]
 136 00be 528D     		ldrh	r2, [r2, #42]
 137 00c0 1A44     		add	r2, r2, r3
 138 00c2 FB68     		ldr	r3, [r7, #12]
 139 00c4 DA62     		str	r2, [r3, #44]
 140              	.L2:
 112:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 113:Libraries/lwip-1.4.0/core/tcp_out.c ****   return p;
 141              		.loc 1 113 0
 142 00c6 7B69     		ldr	r3, [r7, #20]
 114:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 143              		.loc 1 114 0
 144 00c8 1846     		mov	r0, r3
 145 00ca 1837     		adds	r7, r7, #24
 146              		.cfi_def_cfa_offset 8
 147 00cc BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 00ce 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE17:
 154              		.section	.text.tcp_send_fin,"ax",%progbits
 155              		.align	2
 156              		.global	tcp_send_fin
 157              		.thumb
 158              		.thumb_func
 160              	tcp_send_fin:
 161              	.LFB18:
 115:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 116:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 117:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_close() to send a segment including FIN flag but not data.
 118:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 119:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb over which to send a segment
 120:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return ERR_OK if sent, another err_t otherwise
 121:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 122:Libraries/lwip-1.4.0/core/tcp_out.c **** err_t
 123:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_send_fin(struct tcp_pcb *pcb)
 124:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 162              		.loc 1 124 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 16
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 B0B5     		push	{r4, r5, r7, lr}
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 84B0     		sub	sp, sp, #16
 173              		.cfi_def_cfa_offset 32
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 176 0006 7860     		str	r0, [r7, #4]
 125:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* first, try to add the fin to the last unsent segment */
 126:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unsent != NULL) {
 177              		.loc 1 126 0
 178 0008 7B68     		ldr	r3, [r7, #4]
 179 000a 5B6F     		ldr	r3, [r3, #116]
 180 000c 002B     		cmp	r3, #0
 181 000e 25D0     		beq	.L5
 182              	.LBB2:
 127:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct tcp_seg *last_unsent;
 128:Libraries/lwip-1.4.0/core/tcp_out.c ****     for (last_unsent = pcb->unsent; last_unsent->next != NULL;
 183              		.loc 1 128 0
 184 0010 7B68     		ldr	r3, [r7, #4]
 185 0012 5B6F     		ldr	r3, [r3, #116]
 186 0014 FB60     		str	r3, [r7, #12]
 187 0016 02E0     		b	.L6
 188              	.L7:
 129:Libraries/lwip-1.4.0/core/tcp_out.c ****          last_unsent = last_unsent->next);
 189              		.loc 1 129 0
 190 0018 FB68     		ldr	r3, [r7, #12]
 191 001a 1B68     		ldr	r3, [r3]
 192 001c FB60     		str	r3, [r7, #12]
 193              	.L6:
 128:Libraries/lwip-1.4.0/core/tcp_out.c ****          last_unsent = last_unsent->next);
 194              		.loc 1 128 0 discriminator 1
 195 001e FB68     		ldr	r3, [r7, #12]
 196 0020 1B68     		ldr	r3, [r3]
 197 0022 002B     		cmp	r3, #0
 198 0024 F8D1     		bne	.L7
 130:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 131:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((TCPH_FLAGS(last_unsent->tcphdr) & (TCP_SYN | TCP_FIN | TCP_RST)) == 0) {
 199              		.loc 1 131 0
 200 0026 FB68     		ldr	r3, [r7, #12]
 201 0028 DB68     		ldr	r3, [r3, #12]
 202 002a 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 203 002c 9BB2     		uxth	r3, r3
 204 002e 1846     		mov	r0, r3
 205 0030 FFF7FEFF 		bl	lwip_ntohs
 206 0034 0346     		mov	r3, r0
 207 0036 03F00703 		and	r3, r3, #7
 208 003a 002B     		cmp	r3, #0
 209 003c 0ED1     		bne	.L5
 132:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 133:Libraries/lwip-1.4.0/core/tcp_out.c ****       TCPH_SET_FLAG(last_unsent->tcphdr, TCP_FIN);
 210              		.loc 1 133 0
 211 003e FB68     		ldr	r3, [r7, #12]
 212 0040 DC68     		ldr	r4, [r3, #12]
 213 0042 FB68     		ldr	r3, [r7, #12]
 214 0044 DB68     		ldr	r3, [r3, #12]
 215 0046 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 216 0048 9DB2     		uxth	r5, r3
 217 004a 0120     		movs	r0, #1
 218 004c FFF7FEFF 		bl	lwip_htons
 219 0050 0346     		mov	r3, r0
 220 0052 2B43     		orrs	r3, r3, r5
 221 0054 9BB2     		uxth	r3, r3
 222 0056 A381     		strh	r3, [r4, #12]	@ unaligned
 134:Libraries/lwip-1.4.0/core/tcp_out.c ****       return ERR_OK;
 223              		.loc 1 134 0
 224 0058 0023     		movs	r3, #0
 225 005a 04E0     		b	.L8
 226              	.L5:
 227              	.LBE2:
 135:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 136:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 137:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* no data, no length, flags, copy=1, no optdata */
 138:Libraries/lwip-1.4.0/core/tcp_out.c ****   return tcp_enqueue_flags(pcb, TCP_FIN);
 228              		.loc 1 138 0
 229 005c 0121     		movs	r1, #1
 230 005e 7868     		ldr	r0, [r7, #4]
 231 0060 FFF7FEFF 		bl	tcp_enqueue_flags
 232 0064 0346     		mov	r3, r0
 233              	.L8:
 139:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 234              		.loc 1 139 0
 235 0066 1846     		mov	r0, r3
 236 0068 1037     		adds	r7, r7, #16
 237              		.cfi_def_cfa_offset 16
 238 006a BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 006c B0BD     		pop	{r4, r5, r7, pc}
 242              		.cfi_endproc
 243              	.LFE18:
 245 006e 00BF     		.section	.text.tcp_create_segment,"ax",%progbits
 246              		.align	2
 247              		.thumb
 248              		.thumb_func
 250              	tcp_create_segment:
 251              	.LFB19:
 140:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 141:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 142:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Create a TCP segment with prefilled header.
 143:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 144:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_write and tcp_enqueue_flags.
 145:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 146:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection.
 147:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param p pbuf that is used to hold the TCP header.
 148:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param flags TCP flags for header.
 149:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param seqno TCP sequence number of this packet
 150:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param optflags options to include in TCP header
 151:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return a new tcp_seg pointing to p, or NULL.
 152:Libraries/lwip-1.4.0/core/tcp_out.c ****  * The TCP header is filled in except ackno and wnd.
 153:Libraries/lwip-1.4.0/core/tcp_out.c ****  * p is freed on failure.
 154:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 155:Libraries/lwip-1.4.0/core/tcp_out.c **** static struct tcp_seg *
 156:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_create_segment(struct tcp_pcb *pcb, struct pbuf *p, u8_t flags, u32_t seqno, u8_t optflags)
 157:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 252              		.loc 1 157 0
 253              		.cfi_startproc
 254              		@ args = 4, pretend = 0, frame = 24
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 90B5     		push	{r4, r7, lr}
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 87B0     		sub	sp, sp, #28
 262              		.cfi_def_cfa_offset 40
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 F860     		str	r0, [r7, #12]
 266 0008 B960     		str	r1, [r7, #8]
 267 000a 3B60     		str	r3, [r7]
 268 000c 1346     		mov	r3, r2
 269 000e FB71     		strb	r3, [r7, #7]
 158:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg;
 159:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optlen = LWIP_TCP_OPT_LENGTH(optflags);
 270              		.loc 1 159 0
 271 0010 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 272 0014 03F00103 		and	r3, r3, #1
 273 0018 002B     		cmp	r3, #0
 274 001a 01D0     		beq	.L10
 275              		.loc 1 159 0 is_stmt 0 discriminator 1
 276 001c 0422     		movs	r2, #4
 277 001e 00E0     		b	.L11
 278              	.L10:
 279              		.loc 1 159 0 discriminator 2
 280 0020 0022     		movs	r2, #0
 281              	.L11:
 282              		.loc 1 159 0 discriminator 4
 283 0022 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 284 0026 03F00203 		and	r3, r3, #2
 285 002a 002B     		cmp	r3, #0
 286 002c 01D0     		beq	.L12
 287              		.loc 1 159 0 discriminator 5
 288 002e 0C23     		movs	r3, #12
 289 0030 00E0     		b	.L13
 290              	.L12:
 291              		.loc 1 159 0 discriminator 6
 292 0032 0023     		movs	r3, #0
 293              	.L13:
 294              		.loc 1 159 0 discriminator 8
 295 0034 1344     		add	r3, r3, r2
 296 0036 FB75     		strb	r3, [r7, #23]
 160:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 161:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((seg = (struct tcp_seg *)memp_malloc(MEMP_TCP_SEG)) == NULL) {
 297              		.loc 1 161 0 is_stmt 1 discriminator 8
 298 0038 0420     		movs	r0, #4
 299 003a FFF7FEFF 		bl	memp_malloc
 300 003e 3861     		str	r0, [r7, #16]
 301 0040 3B69     		ldr	r3, [r7, #16]
 302 0042 002B     		cmp	r3, #0
 303 0044 04D1     		bne	.L14
 162:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_create_segment: no memory.\n"));
 163:Libraries/lwip-1.4.0/core/tcp_out.c ****     pbuf_free(p);
 304              		.loc 1 163 0
 305 0046 B868     		ldr	r0, [r7, #8]
 306 0048 FFF7FEFF 		bl	pbuf_free
 164:Libraries/lwip-1.4.0/core/tcp_out.c ****     return NULL;
 307              		.loc 1 164 0
 308 004c 0023     		movs	r3, #0
 309 004e 5CE0     		b	.L15
 310              	.L14:
 165:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 166:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->flags = optflags;
 311              		.loc 1 166 0
 312 0050 3B69     		ldr	r3, [r7, #16]
 313 0052 97F82820 		ldrb	r2, [r7, #40]
 314 0056 9A72     		strb	r2, [r3, #10]
 167:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->next = NULL;
 315              		.loc 1 167 0
 316 0058 3B69     		ldr	r3, [r7, #16]
 317 005a 0022     		movs	r2, #0
 318 005c 1A60     		str	r2, [r3]
 168:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->p = p;
 319              		.loc 1 168 0
 320 005e 3B69     		ldr	r3, [r7, #16]
 321 0060 BA68     		ldr	r2, [r7, #8]
 322 0062 5A60     		str	r2, [r3, #4]
 169:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 323              		.loc 1 169 0
 324 0064 BB68     		ldr	r3, [r7, #8]
 325 0066 1A89     		ldrh	r2, [r3, #8]
 326 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 327 006a 9BB2     		uxth	r3, r3
 328 006c D31A     		subs	r3, r2, r3
 329 006e 9AB2     		uxth	r2, r3
 330 0070 3B69     		ldr	r3, [r7, #16]
 331 0072 1A81     		strh	r2, [r3, #8]	@ movhi
 170:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 171:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->oversize_left = 0;
 172:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 173:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 174:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->chksum = 0;
 175:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->chksum_swapped = 0;
 176:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* check optflags */
 177:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("invalid optflags passed: TF_SEG_DATA_CHECKSUMMED",
 178:Libraries/lwip-1.4.0/core/tcp_out.c ****               (optflags & TF_SEG_DATA_CHECKSUMMED) == 0);
 179:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 180:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 181:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* build TCP header */
 182:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pbuf_header(p, TCP_HLEN)) {
 332              		.loc 1 182 0
 333 0074 1421     		movs	r1, #20
 334 0076 B868     		ldr	r0, [r7, #8]
 335 0078 FFF7FEFF 		bl	pbuf_header
 336 007c 0346     		mov	r3, r0
 337 007e 002B     		cmp	r3, #0
 338 0080 0CD0     		beq	.L16
 183:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_create_segment: no room for TCP header in pbuf.\n"));
 184:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.err);
 339              		.loc 1 184 0
 340 0082 244B     		ldr	r3, .L17
 341 0084 B3F8A430 		ldrh	r3, [r3, #164]
 342 0088 0133     		adds	r3, r3, #1
 343 008a 9AB2     		uxth	r2, r3
 344 008c 214B     		ldr	r3, .L17
 345 008e A3F8A420 		strh	r2, [r3, #164]	@ movhi
 185:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_seg_free(seg);
 346              		.loc 1 185 0
 347 0092 3869     		ldr	r0, [r7, #16]
 348 0094 FFF7FEFF 		bl	tcp_seg_free
 186:Libraries/lwip-1.4.0/core/tcp_out.c ****     return NULL;
 349              		.loc 1 186 0
 350 0098 0023     		movs	r3, #0
 351 009a 36E0     		b	.L15
 352              	.L16:
 187:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 188:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr = (struct tcp_hdr *)seg->p->payload;
 353              		.loc 1 188 0
 354 009c 3B69     		ldr	r3, [r7, #16]
 355 009e 5B68     		ldr	r3, [r3, #4]
 356 00a0 5A68     		ldr	r2, [r3, #4]
 357 00a2 3B69     		ldr	r3, [r7, #16]
 358 00a4 DA60     		str	r2, [r3, #12]
 189:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->src = htons(pcb->local_port);
 359              		.loc 1 189 0
 360 00a6 3B69     		ldr	r3, [r7, #16]
 361 00a8 DC68     		ldr	r4, [r3, #12]
 362 00aa FB68     		ldr	r3, [r7, #12]
 363 00ac 9B8B     		ldrh	r3, [r3, #28]
 364 00ae 1846     		mov	r0, r3
 365 00b0 FFF7FEFF 		bl	lwip_htons
 366 00b4 0346     		mov	r3, r0
 367 00b6 2380     		strh	r3, [r4]	@ unaligned
 190:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->dest = htons(pcb->remote_port);
 368              		.loc 1 190 0
 369 00b8 3B69     		ldr	r3, [r7, #16]
 370 00ba DC68     		ldr	r4, [r3, #12]
 371 00bc FB68     		ldr	r3, [r7, #12]
 372 00be DB8B     		ldrh	r3, [r3, #30]
 373 00c0 1846     		mov	r0, r3
 374 00c2 FFF7FEFF 		bl	lwip_htons
 375 00c6 0346     		mov	r3, r0
 376 00c8 6380     		strh	r3, [r4, #2]	@ unaligned
 191:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->seqno = htonl(seqno);
 377              		.loc 1 191 0
 378 00ca 3B69     		ldr	r3, [r7, #16]
 379 00cc DC68     		ldr	r4, [r3, #12]
 380 00ce 3868     		ldr	r0, [r7]
 381 00d0 FFF7FEFF 		bl	lwip_htonl
 382 00d4 0346     		mov	r3, r0
 383 00d6 6360     		str	r3, [r4, #4]	@ unaligned
 192:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* ackno is set in tcp_output */
 193:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), flags);
 384              		.loc 1 193 0
 385 00d8 3B69     		ldr	r3, [r7, #16]
 386 00da DC68     		ldr	r4, [r3, #12]
 387 00dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 388 00de 9B08     		lsrs	r3, r3, #2
 389 00e0 DBB2     		uxtb	r3, r3
 390 00e2 0533     		adds	r3, r3, #5
 391 00e4 1B03     		lsls	r3, r3, #12
 392 00e6 1AB2     		sxth	r2, r3
 393 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 394 00ea 1BB2     		sxth	r3, r3
 395 00ec 1343     		orrs	r3, r3, r2
 396 00ee 1BB2     		sxth	r3, r3
 397 00f0 9BB2     		uxth	r3, r3
 398 00f2 1846     		mov	r0, r3
 399 00f4 FFF7FEFF 		bl	lwip_htons
 400 00f8 0346     		mov	r3, r0
 401 00fa A381     		strh	r3, [r4, #12]	@ unaligned
 194:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 195:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->urgp = 0;
 402              		.loc 1 195 0
 403 00fc 3B69     		ldr	r3, [r7, #16]
 404 00fe DB68     		ldr	r3, [r3, #12]
 405 0100 0022     		movs	r2, #0
 406 0102 9A74     		strb	r2, [r3, #18]
 407 0104 0022     		movs	r2, #0
 408 0106 DA74     		strb	r2, [r3, #19]
 196:Libraries/lwip-1.4.0/core/tcp_out.c ****   return seg;
 409              		.loc 1 196 0
 410 0108 3B69     		ldr	r3, [r7, #16]
 411              	.L15:
 197:Libraries/lwip-1.4.0/core/tcp_out.c **** } 
 412              		.loc 1 197 0
 413 010a 1846     		mov	r0, r3
 414 010c 1C37     		adds	r7, r7, #28
 415              		.cfi_def_cfa_offset 12
 416 010e BD46     		mov	sp, r7
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 0110 90BD     		pop	{r4, r7, pc}
 420              	.L18:
 421 0112 00BF     		.align	2
 422              	.L17:
 423 0114 00000000 		.word	lwip_stats
 424              		.cfi_endproc
 425              	.LFE19:
 427              		.section	.text.tcp_pbuf_prealloc,"ax",%progbits
 428              		.align	2
 429              		.thumb
 430              		.thumb_func
 432              	tcp_pbuf_prealloc:
 433              	.LFB20:
 198:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 199:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 200:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Allocate a PBUF_RAM pbuf, perhaps with extra space at the end.
 201:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 202:Libraries/lwip-1.4.0/core/tcp_out.c ****  * This function is like pbuf_alloc(layer, length, PBUF_RAM) except
 203:Libraries/lwip-1.4.0/core/tcp_out.c ****  * there may be extra bytes available at the end.
 204:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 205:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param layer flag to define header size.
 206:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param length size of the pbuf's payload.
 207:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param max_length maximum usable size of payload+oversize.
 208:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param oversize pointer to a u16_t that will receive the number of usable tail bytes.
 209:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb The TCP connection that willo enqueue the pbuf.
 210:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param apiflags API flags given to tcp_write.
 211:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param first_seg true when this pbuf will be used in the first enqueued segment.
 212:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param 
 213:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 214:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 215:Libraries/lwip-1.4.0/core/tcp_out.c **** static struct pbuf *
 216:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_pbuf_prealloc(pbuf_layer layer, u16_t length, u16_t max_length,
 217:Libraries/lwip-1.4.0/core/tcp_out.c ****                   u16_t *oversize, struct tcp_pcb *pcb, u8_t apiflags,
 218:Libraries/lwip-1.4.0/core/tcp_out.c ****                   u8_t first_seg)
 219:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 434              		.loc 1 219 0
 435              		.cfi_startproc
 436              		@ args = 12, pretend = 0, frame = 24
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438 0000 80B5     		push	{r7, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 442 0002 86B0     		sub	sp, sp, #24
 443              		.cfi_def_cfa_offset 32
 444 0004 00AF     		add	r7, sp, #0
 445              		.cfi_def_cfa_register 7
 446 0006 7B60     		str	r3, [r7, #4]
 447 0008 0346     		mov	r3, r0
 448 000a FB73     		strb	r3, [r7, #15]
 449 000c 0B46     		mov	r3, r1	@ movhi
 450 000e BB81     		strh	r3, [r7, #12]	@ movhi
 451 0010 1346     		mov	r3, r2	@ movhi
 452 0012 7B81     		strh	r3, [r7, #10]	@ movhi
 220:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
 221:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t alloc = length;
 453              		.loc 1 221 0
 454 0014 BB89     		ldrh	r3, [r7, #12]	@ movhi
 455 0016 FB82     		strh	r3, [r7, #22]	@ movhi
 222:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 223:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_TX_SINGLE_PBUF
 224:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_UNUSED_ARG(max_length);
 225:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_UNUSED_ARG(pcb);
 226:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_UNUSED_ARG(apiflags);
 227:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_UNUSED_ARG(first_seg);
 228:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* always create MSS-sized pbufs */
 229:Libraries/lwip-1.4.0/core/tcp_out.c ****   alloc = TCP_MSS;
 230:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* LWIP_NETIF_TX_SINGLE_PBUF */
 231:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (length < max_length) {
 456              		.loc 1 231 0
 457 0018 BA89     		ldrh	r2, [r7, #12]
 458 001a 7B89     		ldrh	r3, [r7, #10]
 459 001c 9A42     		cmp	r2, r3
 460 001e 22D2     		bcs	.L20
 232:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Should we allocate an oversized pbuf, or just the minimum
 233:Libraries/lwip-1.4.0/core/tcp_out.c ****      * length required? If tcp_write is going to be called again
 234:Libraries/lwip-1.4.0/core/tcp_out.c ****      * before this segment is transmitted, we want the oversized
 235:Libraries/lwip-1.4.0/core/tcp_out.c ****      * buffer. If the segment will be transmitted immediately, we can
 236:Libraries/lwip-1.4.0/core/tcp_out.c ****      * save memory by allocating only length. We use a simple
 237:Libraries/lwip-1.4.0/core/tcp_out.c ****      * heuristic based on the following information:
 238:Libraries/lwip-1.4.0/core/tcp_out.c ****      *
 239:Libraries/lwip-1.4.0/core/tcp_out.c ****      * Did the user set TCP_WRITE_FLAG_MORE?
 240:Libraries/lwip-1.4.0/core/tcp_out.c ****      *
 241:Libraries/lwip-1.4.0/core/tcp_out.c ****      * Will the Nagle algorithm defer transmission of this segment?
 242:Libraries/lwip-1.4.0/core/tcp_out.c ****      */
 243:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((apiflags & TCP_WRITE_FLAG_MORE) ||
 461              		.loc 1 243 0
 462 0020 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 463 0024 03F00203 		and	r3, r3, #2
 464 0028 002B     		cmp	r3, #0
 465 002a 12D1     		bne	.L21
 244:Libraries/lwip-1.4.0/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 466              		.loc 1 244 0 discriminator 1
 467 002c 3B6A     		ldr	r3, [r7, #32]
 468 002e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 469 0032 03F04003 		and	r3, r3, #64
 243:Libraries/lwip-1.4.0/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 470              		.loc 1 243 0 discriminator 1
 471 0036 002B     		cmp	r3, #0
 472 0038 15D1     		bne	.L20
 473              		.loc 1 244 0
 474 003a 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 475 003e 002B     		cmp	r3, #0
 476 0040 07D0     		beq	.L21
 245:Libraries/lwip-1.4.0/core/tcp_out.c ****          (!first_seg ||
 246:Libraries/lwip-1.4.0/core/tcp_out.c ****           pcb->unsent != NULL ||
 477              		.loc 1 246 0
 478 0042 3B6A     		ldr	r3, [r7, #32]
 479 0044 5B6F     		ldr	r3, [r3, #116]
 245:Libraries/lwip-1.4.0/core/tcp_out.c ****          (!first_seg ||
 480              		.loc 1 245 0
 481 0046 002B     		cmp	r3, #0
 482 0048 03D1     		bne	.L21
 247:Libraries/lwip-1.4.0/core/tcp_out.c ****           pcb->unacked != NULL))) {
 483              		.loc 1 247 0
 484 004a 3B6A     		ldr	r3, [r7, #32]
 485 004c 9B6F     		ldr	r3, [r3, #120]
 246:Libraries/lwip-1.4.0/core/tcp_out.c ****           pcb->unacked != NULL))) {
 486              		.loc 1 246 0
 487 004e 002B     		cmp	r3, #0
 488 0050 09D0     		beq	.L20
 489              	.L21:
 248:Libraries/lwip-1.4.0/core/tcp_out.c ****       alloc = LWIP_MIN(max_length, LWIP_MEM_ALIGN_SIZE(length + TCP_OVERSIZE));
 490              		.loc 1 248 0
 491 0052 BB89     		ldrh	r3, [r7, #12]
 492 0054 03F21B23 		addw	r3, r3, #539
 493 0058 23F00302 		bic	r2, r3, #3
 494 005c 7B89     		ldrh	r3, [r7, #10]
 495 005e 9342     		cmp	r3, r2
 496 0060 A8BF     		it	ge
 497 0062 1346     		movge	r3, r2
 498 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 499              	.L20:
 249:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 250:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 251:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_TX_SINGLE_PBUF */
 252:Libraries/lwip-1.4.0/core/tcp_out.c ****   p = pbuf_alloc(layer, alloc, PBUF_RAM);
 500              		.loc 1 252 0
 501 0066 F98A     		ldrh	r1, [r7, #22]
 502 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 503 006a 0022     		movs	r2, #0
 504 006c 1846     		mov	r0, r3
 505 006e FFF7FEFF 		bl	pbuf_alloc
 506 0072 3861     		str	r0, [r7, #16]
 253:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (p == NULL) {
 507              		.loc 1 253 0
 508 0074 3B69     		ldr	r3, [r7, #16]
 509 0076 002B     		cmp	r3, #0
 510 0078 01D1     		bne	.L22
 254:Libraries/lwip-1.4.0/core/tcp_out.c ****     return NULL;
 511              		.loc 1 254 0
 512 007a 0023     		movs	r3, #0
 513 007c 0EE0     		b	.L23
 514              	.L22:
 255:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 256:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("need unchained pbuf", p->next == NULL);
 257:Libraries/lwip-1.4.0/core/tcp_out.c ****   *oversize = p->len - length;
 515              		.loc 1 257 0
 516 007e 3B69     		ldr	r3, [r7, #16]
 517 0080 5A89     		ldrh	r2, [r3, #10]
 518 0082 BB89     		ldrh	r3, [r7, #12]	@ movhi
 519 0084 D31A     		subs	r3, r2, r3
 520 0086 9AB2     		uxth	r2, r3
 521 0088 7B68     		ldr	r3, [r7, #4]
 522 008a 1A80     		strh	r2, [r3]	@ movhi
 258:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* trim p->len to the currently used size */
 259:Libraries/lwip-1.4.0/core/tcp_out.c ****   p->len = p->tot_len = length;
 523              		.loc 1 259 0
 524 008c 3B69     		ldr	r3, [r7, #16]
 525 008e BA89     		ldrh	r2, [r7, #12]	@ movhi
 526 0090 1A81     		strh	r2, [r3, #8]	@ movhi
 527 0092 3B69     		ldr	r3, [r7, #16]
 528 0094 1A89     		ldrh	r2, [r3, #8]
 529 0096 3B69     		ldr	r3, [r7, #16]
 530 0098 5A81     		strh	r2, [r3, #10]	@ movhi
 260:Libraries/lwip-1.4.0/core/tcp_out.c ****   return p;
 531              		.loc 1 260 0
 532 009a 3B69     		ldr	r3, [r7, #16]
 533              	.L23:
 261:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 534              		.loc 1 261 0
 535 009c 1846     		mov	r0, r3
 536 009e 1837     		adds	r7, r7, #24
 537              		.cfi_def_cfa_offset 8
 538 00a0 BD46     		mov	sp, r7
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 00a2 80BD     		pop	{r7, pc}
 542              		.cfi_endproc
 543              	.LFE20:
 545              		.section	.text.tcp_write_checks,"ax",%progbits
 546              		.align	2
 547              		.thumb
 548              		.thumb_func
 550              	tcp_write_checks:
 551              	.LFB21:
 262:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* TCP_OVERSIZE */
 263:Libraries/lwip-1.4.0/core/tcp_out.c **** #define tcp_pbuf_prealloc(layer, length, mx, os, pcb, api, fst) pbuf_alloc((layer), (length), PBUF_
 264:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 265:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 266:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 267:Libraries/lwip-1.4.0/core/tcp_out.c **** /** Add a checksum of newly added data to the segment */
 268:Libraries/lwip-1.4.0/core/tcp_out.c **** static void
 269:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_seg_add_chksum(u16_t chksum, u16_t len, u16_t *seg_chksum,
 270:Libraries/lwip-1.4.0/core/tcp_out.c ****                    u8_t *seg_chksum_swapped)
 271:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 272:Libraries/lwip-1.4.0/core/tcp_out.c ****   u32_t helper;
 273:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* add chksum to old chksum and fold to u16_t */
 274:Libraries/lwip-1.4.0/core/tcp_out.c ****   helper = chksum + *seg_chksum;
 275:Libraries/lwip-1.4.0/core/tcp_out.c ****   chksum = FOLD_U32T(helper);
 276:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((len & 1) != 0) {
 277:Libraries/lwip-1.4.0/core/tcp_out.c ****     *seg_chksum_swapped = 1 - *seg_chksum_swapped;
 278:Libraries/lwip-1.4.0/core/tcp_out.c ****     chksum = SWAP_BYTES_IN_WORD(chksum);
 279:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 280:Libraries/lwip-1.4.0/core/tcp_out.c ****   *seg_chksum = chksum;
 281:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 282:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 283:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 284:Libraries/lwip-1.4.0/core/tcp_out.c **** /** Checks if tcp_write is allowed or not (checks state, snd_buf and snd_queuelen).
 285:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 286:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp pcb to check for
 287:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param len length of data to send (checked agains snd_buf)
 288:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return ERR_OK if tcp_write is allowed to proceed, another err_t otherwise
 289:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 290:Libraries/lwip-1.4.0/core/tcp_out.c **** static err_t
 291:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_write_checks(struct tcp_pcb *pcb, u16_t len)
 292:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 552              		.loc 1 292 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557 0000 80B4     		push	{r7}
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0002 83B0     		sub	sp, sp, #12
 561              		.cfi_def_cfa_offset 16
 562 0004 00AF     		add	r7, sp, #0
 563              		.cfi_def_cfa_register 7
 564 0006 7860     		str	r0, [r7, #4]
 565 0008 0B46     		mov	r3, r1
 566 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 293:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* connection is in invalid state for data transmission? */
 294:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((pcb->state != ESTABLISHED) &&
 567              		.loc 1 294 0
 568 000c 7B68     		ldr	r3, [r7, #4]
 569 000e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 570 0010 042B     		cmp	r3, #4
 571 0012 0ED0     		beq	.L25
 295:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 572              		.loc 1 295 0 discriminator 1
 573 0014 7B68     		ldr	r3, [r7, #4]
 574 0016 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 294:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 575              		.loc 1 294 0 discriminator 1
 576 0018 072B     		cmp	r3, #7
 577 001a 0AD0     		beq	.L25
 296:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != SYN_SENT) &&
 578              		.loc 1 296 0
 579 001c 7B68     		ldr	r3, [r7, #4]
 580 001e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 295:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 581              		.loc 1 295 0
 582 0020 022B     		cmp	r3, #2
 583 0022 06D0     		beq	.L25
 297:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != SYN_RCVD)) {
 584              		.loc 1 297 0
 585 0024 7B68     		ldr	r3, [r7, #4]
 586 0026 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 296:Libraries/lwip-1.4.0/core/tcp_out.c ****       (pcb->state != SYN_SENT) &&
 587              		.loc 1 296 0
 588 0028 032B     		cmp	r3, #3
 589 002a 02D0     		beq	.L25
 298:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_STATE | LWIP_DBG_LEVEL_SEVERE, ("tcp_write() called in 
 299:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_CONN;
 590              		.loc 1 299 0
 591 002c 6FF00C03 		mvn	r3, #12
 592 0030 43E0     		b	.L26
 593              	.L25:
 300:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else if (len == 0) {
 594              		.loc 1 300 0
 595 0032 7B88     		ldrh	r3, [r7, #2]
 596 0034 002B     		cmp	r3, #0
 597 0036 01D1     		bne	.L27
 301:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_OK;
 598              		.loc 1 301 0
 599 0038 0023     		movs	r3, #0
 600 003a 3EE0     		b	.L26
 601              	.L27:
 302:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 303:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 304:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* fail on too much data */
 305:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (len > pcb->snd_buf) {
 602              		.loc 1 305 0
 603 003c 7B68     		ldr	r3, [r7, #4]
 604 003e B3F86E30 		ldrh	r3, [r3, #110]
 605 0042 7A88     		ldrh	r2, [r7, #2]
 606 0044 9A42     		cmp	r2, r3
 607 0046 0BD9     		bls	.L28
 306:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 3, ("tcp_write: too much data (len=%"U16_F" > snd_buf=%"U16_F")\
 307:Libraries/lwip-1.4.0/core/tcp_out.c ****       len, pcb->snd_buf));
 308:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 608              		.loc 1 308 0
 609 0048 7B68     		ldr	r3, [r7, #4]
 610 004a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 611 004e 63F07F03 		orn	r3, r3, #127
 612 0052 DAB2     		uxtb	r2, r3
 613 0054 7B68     		ldr	r3, [r7, #4]
 614 0056 83F82020 		strb	r2, [r3, #32]
 309:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 615              		.loc 1 309 0
 616 005a 4FF0FF33 		mov	r3, #-1
 617 005e 2CE0     		b	.L26
 618              	.L28:
 310:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 311:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 312:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_write: queuelen: %"U16_F"\n", (u16_t)pcb->snd_queuelen));
 313:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 314:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* If total number of pbufs on the unsent/unacked queues exceeds the
 315:Libraries/lwip-1.4.0/core/tcp_out.c ****    * configured maximum, return an error */
 316:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* check for configured max queuelen and possible overflow */
 317:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((pcb->snd_queuelen >= TCP_SND_QUEUELEN) || (pcb->snd_queuelen > TCP_SNDQUEUELEN_OVERFLOW)) {
 619              		.loc 1 317 0
 620 0060 7B68     		ldr	r3, [r7, #4]
 621 0062 B3F87030 		ldrh	r3, [r3, #112]
 622 0066 032B     		cmp	r3, #3
 623 0068 06D8     		bhi	.L29
 624              		.loc 1 317 0 is_stmt 0 discriminator 1
 625 006a 7B68     		ldr	r3, [r7, #4]
 626 006c B3F87030 		ldrh	r3, [r3, #112]
 627 0070 4FF6FC72 		movw	r2, #65532
 628 0074 9342     		cmp	r3, r2
 629 0076 13D9     		bls	.L30
 630              	.L29:
 318:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 3, ("tcp_write: too long queue %"U16_F" (max %"U16_F")\n",
 319:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->snd_queuelen, TCP_SND_QUEUELEN));
 320:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 631              		.loc 1 320 0 is_stmt 1
 632 0078 124B     		ldr	r3, .L33
 633 007a B3F89C30 		ldrh	r3, [r3, #156]
 634 007e 0133     		adds	r3, r3, #1
 635 0080 9AB2     		uxth	r2, r3
 636 0082 104B     		ldr	r3, .L33
 637 0084 A3F89C20 		strh	r2, [r3, #156]	@ movhi
 321:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 638              		.loc 1 321 0
 639 0088 7B68     		ldr	r3, [r7, #4]
 640 008a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 641 008e 63F07F03 		orn	r3, r3, #127
 642 0092 DAB2     		uxtb	r2, r3
 643 0094 7B68     		ldr	r3, [r7, #4]
 644 0096 83F82020 		strb	r2, [r3, #32]
 322:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 645              		.loc 1 322 0
 646 009a 4FF0FF33 		mov	r3, #-1
 647 009e 0CE0     		b	.L26
 648              	.L30:
 323:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 324:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 649              		.loc 1 324 0
 650 00a0 7B68     		ldr	r3, [r7, #4]
 651 00a2 B3F87030 		ldrh	r3, [r3, #112]
 652 00a6 002B     		cmp	r3, #0
 653 00a8 03D0     		beq	.L31
 325:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: pbufs on queue => at least one queue non-empty",
 654              		.loc 1 325 0
 655 00aa 7B68     		ldr	r3, [r7, #4]
 656 00ac 9B6F     		ldr	r3, [r3, #120]
 657 00ae 002B     		cmp	r3, #0
 658 00b0 02E0     		b	.L32
 659              	.L31:
 326:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->unacked != NULL || pcb->unsent != NULL);
 327:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
 328:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: no pbufs on queue => both queues empty",
 660              		.loc 1 328 0
 661 00b2 7B68     		ldr	r3, [r7, #4]
 662 00b4 9B6F     		ldr	r3, [r3, #120]
 663 00b6 002B     		cmp	r3, #0
 664              	.L32:
 329:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->unacked == NULL && pcb->unsent == NULL);
 330:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 331:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_OK;
 665              		.loc 1 331 0
 666 00b8 0023     		movs	r3, #0
 667              	.L26:
 332:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 668              		.loc 1 332 0
 669 00ba 1846     		mov	r0, r3
 670 00bc 0C37     		adds	r7, r7, #12
 671              		.cfi_def_cfa_offset 4
 672 00be BD46     		mov	sp, r7
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 00c0 80BC     		pop	{r7}
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 00c2 7047     		bx	lr
 679              	.L34:
 680              		.align	2
 681              	.L33:
 682 00c4 00000000 		.word	lwip_stats
 683              		.cfi_endproc
 684              	.LFE21:
 686              		.section	.text.tcp_write,"ax",%progbits
 687              		.align	2
 688              		.global	tcp_write
 689              		.thumb
 690              		.thumb_func
 692              	tcp_write:
 693              	.LFB22:
 333:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 334:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 335:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Write data for sending (but does not send it immediately).
 336:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 337:Libraries/lwip-1.4.0/core/tcp_out.c ****  * It waits in the expectation of more data being sent soon (as
 338:Libraries/lwip-1.4.0/core/tcp_out.c ****  * it can send them more efficiently by combining them together).
 339:Libraries/lwip-1.4.0/core/tcp_out.c ****  * To prompt the system to send data now, call tcp_output() after
 340:Libraries/lwip-1.4.0/core/tcp_out.c ****  * calling tcp_write().
 341:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 342:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to enqueue data for.
 343:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param arg Pointer to the data to be enqueued for sending.
 344:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param len Data length in bytes
 345:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param apiflags combination of following flags :
 346:Libraries/lwip-1.4.0/core/tcp_out.c ****  * - TCP_WRITE_FLAG_COPY (0x01) data will be copied into memory belonging to the stack
 347:Libraries/lwip-1.4.0/core/tcp_out.c ****  * - TCP_WRITE_FLAG_MORE (0x02) for TCP connection, PSH flag will be set on last segment sent,
 348:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return ERR_OK if enqueued, another err_t on error
 349:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 350:Libraries/lwip-1.4.0/core/tcp_out.c **** err_t
 351:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_write(struct tcp_pcb *pcb, const void *arg, u16_t len, u8_t apiflags)
 352:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 694              		.loc 1 352 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 80
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 B0B5     		push	{r4, r5, r7, lr}
 699              		.cfi_def_cfa_offset 16
 700              		.cfi_offset 4, -16
 701              		.cfi_offset 5, -12
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 98B0     		sub	sp, sp, #96
 705              		.cfi_def_cfa_offset 112
 706 0004 04AF     		add	r7, sp, #16
 707              		.cfi_def_cfa 7, 96
 708 0006 F860     		str	r0, [r7, #12]
 709 0008 B960     		str	r1, [r7, #8]
 710 000a 1146     		mov	r1, r2
 711 000c 1A46     		mov	r2, r3
 712 000e 0B46     		mov	r3, r1	@ movhi
 713 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 714 0012 1346     		mov	r3, r2
 715 0014 7B71     		strb	r3, [r7, #5]
 353:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 716              		.loc 1 353 0
 717 0016 0023     		movs	r3, #0
 718 0018 FB64     		str	r3, [r7, #76]
 354:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 719              		.loc 1 354 0
 720 001a 0023     		movs	r3, #0
 721 001c BB64     		str	r3, [r7, #72]
 722 001e 0023     		movs	r3, #0
 723 0020 7B64     		str	r3, [r7, #68]
 724 0022 0023     		movs	r3, #0
 725 0024 3B64     		str	r3, [r7, #64]
 726 0026 0023     		movs	r3, #0
 727 0028 FB63     		str	r3, [r7, #60]
 355:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 728              		.loc 1 355 0
 729 002a 0023     		movs	r3, #0
 730 002c 7B87     		strh	r3, [r7, #58]	@ movhi
 356:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t queuelen;
 357:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optlen = 0;
 731              		.loc 1 357 0
 732 002e 0023     		movs	r3, #0
 733 0030 87F82B30 		strb	r3, [r7, #43]
 358:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optflags = 0;
 734              		.loc 1 358 0
 735 0034 0023     		movs	r3, #0
 736 0036 87F82A30 		strb	r3, [r7, #42]
 359:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 360:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t oversize = 0;
 737              		.loc 1 360 0
 738 003a 0023     		movs	r3, #0
 739 003c 7B82     		strh	r3, [r7, #18]	@ movhi
 361:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t oversize_used = 0;
 740              		.loc 1 361 0
 741 003e 0023     		movs	r3, #0
 742 0040 FB86     		strh	r3, [r7, #54]	@ movhi
 362:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 363:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 364:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t concat_chksum = 0;
 365:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t concat_chksum_swapped = 0;
 366:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t concat_chksummed = 0;
 367:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 368:Libraries/lwip-1.4.0/core/tcp_out.c ****   err_t err;
 369:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 370:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_TX_SINGLE_PBUF
 371:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Always copy to try to create single pbufs for TX */
 372:Libraries/lwip-1.4.0/core/tcp_out.c ****   apiflags |= TCP_WRITE_FLAG_COPY;
 373:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_TX_SINGLE_PBUF */
 374:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 375:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_write(pcb=%p, data=%p, len=%"U16_F", apiflags=%"U16_F")\n",
 376:Libraries/lwip-1.4.0/core/tcp_out.c ****     (void *)pcb, arg, len, (u16_t)apiflags));
 377:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)", 
 743              		.loc 1 377 0
 744 0042 BB68     		ldr	r3, [r7, #8]
 745 0044 002B     		cmp	r3, #0
 746 0046 02D1     		bne	.L36
 747              		.loc 1 377 0 is_stmt 0 discriminator 1
 748 0048 6FF00D03 		mvn	r3, #13
 749 004c 02E2     		b	.L78
 750              	.L36:
 378:Libraries/lwip-1.4.0/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 379:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 380:Libraries/lwip-1.4.0/core/tcp_out.c ****   err = tcp_write_checks(pcb, len);
 751              		.loc 1 380 0 is_stmt 1
 752 004e FB88     		ldrh	r3, [r7, #6]
 753 0050 1946     		mov	r1, r3
 754 0052 F868     		ldr	r0, [r7, #12]
 755 0054 FFF7FEFF 		bl	tcp_write_checks
 756 0058 7862     		str	r0, [r7, #36]
 381:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (err != ERR_OK) {
 757              		.loc 1 381 0
 758 005a 7B6A     		ldr	r3, [r7, #36]
 759 005c 002B     		cmp	r3, #0
 760 005e 01D0     		beq	.L38
 382:Libraries/lwip-1.4.0/core/tcp_out.c ****     return err;
 761              		.loc 1 382 0
 762 0060 7B6A     		ldr	r3, [r7, #36]
 763 0062 F7E1     		b	.L78
 764              	.L38:
 383:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 384:Libraries/lwip-1.4.0/core/tcp_out.c ****   queuelen = pcb->snd_queuelen;
 765              		.loc 1 384 0
 766 0064 FB68     		ldr	r3, [r7, #12]
 767 0066 B3F87030 		ldrh	r3, [r3, #112]	@ movhi
 768 006a 3B87     		strh	r3, [r7, #56]	@ movhi
 385:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 386:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 387:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((pcb->flags & TF_TIMESTAMP)) {
 388:Libraries/lwip-1.4.0/core/tcp_out.c ****     optflags = TF_SEG_OPTS_TS;
 389:Libraries/lwip-1.4.0/core/tcp_out.c ****     optlen = LWIP_TCP_OPT_LENGTH(TF_SEG_OPTS_TS);
 390:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 391:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_TCP_TIMESTAMPS */
 392:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 393:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 394:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 395:Libraries/lwip-1.4.0/core/tcp_out.c ****    * TCP segmentation is done in three phases with increasing complexity:
 396:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 397:Libraries/lwip-1.4.0/core/tcp_out.c ****    * 1. Copy data directly into an oversized pbuf.
 398:Libraries/lwip-1.4.0/core/tcp_out.c ****    * 2. Chain a new pbuf to the end of pcb->unsent.
 399:Libraries/lwip-1.4.0/core/tcp_out.c ****    * 3. Create new segments.
 400:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 401:Libraries/lwip-1.4.0/core/tcp_out.c ****    * We may run out of memory at any point. In that case we must
 402:Libraries/lwip-1.4.0/core/tcp_out.c ****    * return ERR_MEM and not change anything in pcb. Therefore, all
 403:Libraries/lwip-1.4.0/core/tcp_out.c ****    * changes are recorded in local variables and committed at the end
 404:Libraries/lwip-1.4.0/core/tcp_out.c ****    * of the function. Some pcb fields are maintained in local copies:
 405:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 406:Libraries/lwip-1.4.0/core/tcp_out.c ****    * queuelen = pcb->snd_queuelen
 407:Libraries/lwip-1.4.0/core/tcp_out.c ****    * oversize = pcb->unsent_oversize
 408:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 409:Libraries/lwip-1.4.0/core/tcp_out.c ****    * These variables are set consistently by the phases:
 410:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 411:Libraries/lwip-1.4.0/core/tcp_out.c ****    * seg points to the last segment tampered with.
 412:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 413:Libraries/lwip-1.4.0/core/tcp_out.c ****    * pos records progress as data is segmented.
 414:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 415:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 416:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Find the tail of the unsent queue. */
 417:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unsent != NULL) {
 769              		.loc 1 417 0
 770 006c FB68     		ldr	r3, [r7, #12]
 771 006e 5B6F     		ldr	r3, [r3, #116]
 772 0070 002B     		cmp	r3, #0
 773 0072 00F03581 		beq	.L54
 774              	.LBB3:
 418:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t space;
 419:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t unsent_optlen;
 420:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 421:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* @todo: this could be sped up by keeping last_unsent in the pcb */
 422:Libraries/lwip-1.4.0/core/tcp_out.c ****     for (last_unsent = pcb->unsent; last_unsent->next != NULL;
 775              		.loc 1 422 0
 776 0076 FB68     		ldr	r3, [r7, #12]
 777 0078 5B6F     		ldr	r3, [r3, #116]
 778 007a BB64     		str	r3, [r7, #72]
 779 007c 02E0     		b	.L40
 780              	.L41:
 423:Libraries/lwip-1.4.0/core/tcp_out.c ****          last_unsent = last_unsent->next);
 781              		.loc 1 423 0
 782 007e BB6C     		ldr	r3, [r7, #72]
 783 0080 1B68     		ldr	r3, [r3]
 784 0082 BB64     		str	r3, [r7, #72]
 785              	.L40:
 422:Libraries/lwip-1.4.0/core/tcp_out.c ****          last_unsent = last_unsent->next);
 786              		.loc 1 422 0 discriminator 1
 787 0084 BB6C     		ldr	r3, [r7, #72]
 788 0086 1B68     		ldr	r3, [r3]
 789 0088 002B     		cmp	r3, #0
 790 008a F8D1     		bne	.L41
 424:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 425:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Usable space at the end of the last unsent segment */
 426:Libraries/lwip-1.4.0/core/tcp_out.c ****     unsent_optlen = LWIP_TCP_OPT_LENGTH(last_unsent->flags);
 791              		.loc 1 426 0
 792 008c BB6C     		ldr	r3, [r7, #72]
 793 008e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 794 0090 03F00103 		and	r3, r3, #1
 795 0094 002B     		cmp	r3, #0
 796 0096 01D0     		beq	.L42
 797              		.loc 1 426 0 is_stmt 0 discriminator 1
 798 0098 0422     		movs	r2, #4
 799 009a 00E0     		b	.L43
 800              	.L42:
 801              		.loc 1 426 0 discriminator 2
 802 009c 0022     		movs	r2, #0
 803              	.L43:
 804              		.loc 1 426 0 discriminator 4
 805 009e BB6C     		ldr	r3, [r7, #72]
 806 00a0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 807 00a2 03F00203 		and	r3, r3, #2
 808 00a6 002B     		cmp	r3, #0
 809 00a8 01D0     		beq	.L44
 810              		.loc 1 426 0 discriminator 5
 811 00aa 0C23     		movs	r3, #12
 812 00ac 00E0     		b	.L45
 813              	.L44:
 814              		.loc 1 426 0 discriminator 6
 815 00ae 0023     		movs	r3, #0
 816              	.L45:
 817              		.loc 1 426 0 discriminator 8
 818 00b0 1344     		add	r3, r3, r2
 819 00b2 7B84     		strh	r3, [r7, #34]	@ movhi
 427:Libraries/lwip-1.4.0/core/tcp_out.c ****     space = pcb->mss - (last_unsent->len + unsent_optlen);
 820              		.loc 1 427 0 is_stmt 1 discriminator 8
 821 00b4 FB68     		ldr	r3, [r7, #12]
 822 00b6 1A8F     		ldrh	r2, [r3, #56]
 823 00b8 BB6C     		ldr	r3, [r7, #72]
 824 00ba 1989     		ldrh	r1, [r3, #8]
 825 00bc 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 826 00be 0B44     		add	r3, r3, r1
 827 00c0 9BB2     		uxth	r3, r3
 828 00c2 D31A     		subs	r3, r2, r3
 829 00c4 BB86     		strh	r3, [r7, #52]	@ movhi
 428:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 429:Libraries/lwip-1.4.0/core/tcp_out.c ****     /*
 430:Libraries/lwip-1.4.0/core/tcp_out.c ****      * Phase 1: Copy data directly into an oversized pbuf.
 431:Libraries/lwip-1.4.0/core/tcp_out.c ****      *
 432:Libraries/lwip-1.4.0/core/tcp_out.c ****      * The number of bytes copied is recorded in the oversize_used
 433:Libraries/lwip-1.4.0/core/tcp_out.c ****      * variable. The actual copying is done at the bottom of the
 434:Libraries/lwip-1.4.0/core/tcp_out.c ****      * function.
 435:Libraries/lwip-1.4.0/core/tcp_out.c ****      */
 436:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 437:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 438:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* check that pcb->unsent_oversize matches last_unsent->unsent_oversize */
 439:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("unsent_oversize mismatch (pcb vs. last_unsent)",
 440:Libraries/lwip-1.4.0/core/tcp_out.c ****                 pcb->unsent_oversize == last_unsent->oversize_left);
 441:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 442:Libraries/lwip-1.4.0/core/tcp_out.c ****     oversize = pcb->unsent_oversize;
 830              		.loc 1 442 0 discriminator 8
 831 00c6 FB68     		ldr	r3, [r7, #12]
 832 00c8 B3F87230 		ldrh	r3, [r3, #114]
 833 00cc 7B82     		strh	r3, [r7, #18]	@ movhi
 443:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (oversize > 0) {
 834              		.loc 1 443 0 discriminator 8
 835 00ce 7B8A     		ldrh	r3, [r7, #18]
 836 00d0 002B     		cmp	r3, #0
 837 00d2 14D0     		beq	.L46
 444:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_ASSERT("inconsistent oversize vs. space", oversize_used <= space);
 445:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg = last_unsent;
 838              		.loc 1 445 0
 839 00d4 BB6C     		ldr	r3, [r7, #72]
 840 00d6 7B64     		str	r3, [r7, #68]
 446:Libraries/lwip-1.4.0/core/tcp_out.c ****       oversize_used = oversize < len ? oversize : len;
 841              		.loc 1 446 0
 842 00d8 7B8A     		ldrh	r3, [r7, #18]
 843 00da FA88     		ldrh	r2, [r7, #6]
 844 00dc 9342     		cmp	r3, r2
 845 00de 28BF     		it	cs
 846 00e0 1346     		movcs	r3, r2
 847 00e2 FB86     		strh	r3, [r7, #54]	@ movhi
 447:Libraries/lwip-1.4.0/core/tcp_out.c ****       pos += oversize_used;
 848              		.loc 1 447 0
 849 00e4 7A8F     		ldrh	r2, [r7, #58]	@ movhi
 850 00e6 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 851 00e8 1344     		add	r3, r3, r2
 852 00ea 7B87     		strh	r3, [r7, #58]	@ movhi
 448:Libraries/lwip-1.4.0/core/tcp_out.c ****       oversize -= oversize_used;
 853              		.loc 1 448 0
 854 00ec 7A8A     		ldrh	r2, [r7, #18]
 855 00ee FB8E     		ldrh	r3, [r7, #54]	@ movhi
 856 00f0 D31A     		subs	r3, r2, r3
 857 00f2 9BB2     		uxth	r3, r3
 858 00f4 7B82     		strh	r3, [r7, #18]	@ movhi
 449:Libraries/lwip-1.4.0/core/tcp_out.c ****       space -= oversize_used;
 859              		.loc 1 449 0
 860 00f6 BA8E     		ldrh	r2, [r7, #52]	@ movhi
 861 00f8 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 862 00fa D31A     		subs	r3, r2, r3
 863 00fc BB86     		strh	r3, [r7, #52]	@ movhi
 864              	.L46:
 450:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 451:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* now we are either finished or oversize is zero */
 452:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("inconsistend oversize vs. len", (oversize == 0) || (pos == len));
 453:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 454:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 455:Libraries/lwip-1.4.0/core/tcp_out.c ****     /*
 456:Libraries/lwip-1.4.0/core/tcp_out.c ****      * Phase 2: Chain a new pbuf to the end of pcb->unsent.
 457:Libraries/lwip-1.4.0/core/tcp_out.c ****      *
 458:Libraries/lwip-1.4.0/core/tcp_out.c ****      * We don't extend segments containing SYN/FIN flags or options
 459:Libraries/lwip-1.4.0/core/tcp_out.c ****      * (len==0). The new pbuf is kept in concat_p and pbuf_cat'ed at
 460:Libraries/lwip-1.4.0/core/tcp_out.c ****      * the end.
 461:Libraries/lwip-1.4.0/core/tcp_out.c ****      */
 462:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((pos < len) && (space > 0) && (last_unsent->len > 0)) {
 865              		.loc 1 462 0
 866 00fe 7A8F     		ldrh	r2, [r7, #58]
 867 0100 FB88     		ldrh	r3, [r7, #6]
 868 0102 9A42     		cmp	r2, r3
 869 0104 80F0EC80 		bcs	.L54
 870              		.loc 1 462 0 is_stmt 0 discriminator 1
 871 0108 BB8E     		ldrh	r3, [r7, #52]
 872 010a 002B     		cmp	r3, #0
 873 010c 00F0E880 		beq	.L54
 874              		.loc 1 462 0 discriminator 2
 875 0110 BB6C     		ldr	r3, [r7, #72]
 876 0112 1B89     		ldrh	r3, [r3, #8]
 877 0114 002B     		cmp	r3, #0
 878 0116 00F0E380 		beq	.L54
 879              	.LBB4:
 463:Libraries/lwip-1.4.0/core/tcp_out.c ****       u16_t seglen = space < len - pos ? space : len - pos;
 880              		.loc 1 463 0 is_stmt 1
 881 011a FA88     		ldrh	r2, [r7, #6]
 882 011c 7B8F     		ldrh	r3, [r7, #58]
 883 011e D21A     		subs	r2, r2, r3
 884 0120 BB8E     		ldrh	r3, [r7, #52]
 885 0122 9342     		cmp	r3, r2
 886 0124 A8BF     		it	ge
 887 0126 1346     		movge	r3, r2
 888 0128 3B84     		strh	r3, [r7, #32]	@ movhi
 464:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg = last_unsent;
 889              		.loc 1 464 0
 890 012a BB6C     		ldr	r3, [r7, #72]
 891 012c 7B64     		str	r3, [r7, #68]
 465:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 466:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* Create a pbuf with a copy or reference to seglen bytes. We
 467:Libraries/lwip-1.4.0/core/tcp_out.c ****        * can use PBUF_RAW here since the data appears in the middle of
 468:Libraries/lwip-1.4.0/core/tcp_out.c ****        * a segment. A header will never be prepended. */
 469:Libraries/lwip-1.4.0/core/tcp_out.c ****       if (apiflags & TCP_WRITE_FLAG_COPY) {
 892              		.loc 1 469 0
 893 012e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 894 0130 03F00103 		and	r3, r3, #1
 895 0134 002B     		cmp	r3, #0
 896 0136 1CD0     		beq	.L48
 470:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* Data is copied */
 471:Libraries/lwip-1.4.0/core/tcp_out.c ****         if ((concat_p = tcp_pbuf_prealloc(PBUF_RAW, seglen, space, &oversize, pcb, apiflags, 1)) ==
 897              		.loc 1 471 0
 898 0138 07F11200 		add	r0, r7, #18
 899 013c BA8E     		ldrh	r2, [r7, #52]
 900 013e 398C     		ldrh	r1, [r7, #32]
 901 0140 0123     		movs	r3, #1
 902 0142 0293     		str	r3, [sp, #8]
 903 0144 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 904 0146 0193     		str	r3, [sp, #4]
 905 0148 FB68     		ldr	r3, [r7, #12]
 906 014a 0093     		str	r3, [sp]
 907 014c 0346     		mov	r3, r0
 908 014e 0320     		movs	r0, #3
 909 0150 FFF7FEFF 		bl	tcp_pbuf_prealloc
 910 0154 F864     		str	r0, [r7, #76]
 911 0156 FB6C     		ldr	r3, [r7, #76]
 912 0158 002B     		cmp	r3, #0
 913 015a 00F04B81 		beq	.L79
 472:Libraries/lwip-1.4.0/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2,
 473:Libraries/lwip-1.4.0/core/tcp_out.c ****                       ("tcp_write : could not allocate memory for pbuf copy size %"U16_F"\n",
 474:Libraries/lwip-1.4.0/core/tcp_out.c ****                        seglen));
 475:Libraries/lwip-1.4.0/core/tcp_out.c ****           goto memerr;
 476:Libraries/lwip-1.4.0/core/tcp_out.c ****         }
 477:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 478:Libraries/lwip-1.4.0/core/tcp_out.c ****         last_unsent->oversize_left = oversize;
 479:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 480:Libraries/lwip-1.4.0/core/tcp_out.c ****         TCP_DATA_COPY2(concat_p->payload, (u8_t*)arg + pos, seglen, &concat_chksum, &concat_chksum_
 914              		.loc 1 480 0
 915 015e FB6C     		ldr	r3, [r7, #76]
 916 0160 5868     		ldr	r0, [r3, #4]
 917 0162 7B8F     		ldrh	r3, [r7, #58]
 918 0164 BA68     		ldr	r2, [r7, #8]
 919 0166 1344     		add	r3, r3, r2
 920 0168 3A8C     		ldrh	r2, [r7, #32]
 921 016a 1946     		mov	r1, r3
 922 016c FFF7FEFF 		bl	memcpy
 923 0170 0FE0     		b	.L51
 924              	.L48:
 481:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 482:Libraries/lwip-1.4.0/core/tcp_out.c ****         concat_chksummed += seglen;
 483:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 484:Libraries/lwip-1.4.0/core/tcp_out.c ****       } else {
 485:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* Data is not copied */
 486:Libraries/lwip-1.4.0/core/tcp_out.c ****         if ((concat_p = pbuf_alloc(PBUF_RAW, seglen, PBUF_ROM)) == NULL) {
 925              		.loc 1 486 0
 926 0172 3B8C     		ldrh	r3, [r7, #32]
 927 0174 0122     		movs	r2, #1
 928 0176 1946     		mov	r1, r3
 929 0178 0320     		movs	r0, #3
 930 017a FFF7FEFF 		bl	pbuf_alloc
 931 017e F864     		str	r0, [r7, #76]
 932 0180 FB6C     		ldr	r3, [r7, #76]
 933 0182 002B     		cmp	r3, #0
 934 0184 00F03881 		beq	.L80
 487:Libraries/lwip-1.4.0/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2,
 488:Libraries/lwip-1.4.0/core/tcp_out.c ****                       ("tcp_write: could not allocate memory for zero-copy pbuf\n"));
 489:Libraries/lwip-1.4.0/core/tcp_out.c ****           goto memerr;
 490:Libraries/lwip-1.4.0/core/tcp_out.c ****         }
 491:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 492:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* calculate the checksum of nocopy-data */
 493:Libraries/lwip-1.4.0/core/tcp_out.c ****         tcp_seg_add_chksum(~inet_chksum((u8_t*)arg + pos, seglen), seglen,
 494:Libraries/lwip-1.4.0/core/tcp_out.c ****           &concat_chksum, &concat_chksum_swapped);
 495:Libraries/lwip-1.4.0/core/tcp_out.c ****         concat_chksummed += seglen;
 496:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 497:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* reference the non-volatile payload data */
 498:Libraries/lwip-1.4.0/core/tcp_out.c ****         concat_p->payload = (u8_t*)arg + pos;
 935              		.loc 1 498 0
 936 0188 7B8F     		ldrh	r3, [r7, #58]
 937 018a BA68     		ldr	r2, [r7, #8]
 938 018c 1A44     		add	r2, r2, r3
 939 018e FB6C     		ldr	r3, [r7, #76]
 940 0190 5A60     		str	r2, [r3, #4]
 941              	.L51:
 499:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 500:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 501:Libraries/lwip-1.4.0/core/tcp_out.c ****       pos += seglen;
 942              		.loc 1 501 0
 943 0192 7A8F     		ldrh	r2, [r7, #58]	@ movhi
 944 0194 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 945 0196 1344     		add	r3, r3, r2
 946 0198 7B87     		strh	r3, [r7, #58]	@ movhi
 502:Libraries/lwip-1.4.0/core/tcp_out.c ****       queuelen += pbuf_clen(concat_p);
 947              		.loc 1 502 0
 948 019a F86C     		ldr	r0, [r7, #76]
 949 019c FFF7FEFF 		bl	pbuf_clen
 950 01a0 0346     		mov	r3, r0
 951 01a2 9AB2     		uxth	r2, r3
 952 01a4 3B8F     		ldrh	r3, [r7, #56]	@ movhi
 953 01a6 1344     		add	r3, r3, r2
 954 01a8 3B87     		strh	r3, [r7, #56]	@ movhi
 955              	.LBE4:
 956              	.LBE3:
 503:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 504:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
 505:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 506:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("unsent_oversize mismatch (pcb->unsent is NULL)",
 507:Libraries/lwip-1.4.0/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 508:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 509:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 510:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 511:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 512:Libraries/lwip-1.4.0/core/tcp_out.c ****    * Phase 3: Create new segments.
 513:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 514:Libraries/lwip-1.4.0/core/tcp_out.c ****    * The new segments are chained together in the local 'queue'
 515:Libraries/lwip-1.4.0/core/tcp_out.c ****    * variable, ready to be appended to pcb->unsent.
 516:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 517:Libraries/lwip-1.4.0/core/tcp_out.c ****   while (pos < len) {
 957              		.loc 1 517 0
 958 01aa 99E0     		b	.L54
 959              	.L65:
 960              	.LBB6:
 518:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct pbuf *p;
 519:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t left = len - pos;
 961              		.loc 1 519 0
 962 01ac FA88     		ldrh	r2, [r7, #6]	@ movhi
 963 01ae 7B8F     		ldrh	r3, [r7, #58]	@ movhi
 964 01b0 D31A     		subs	r3, r2, r3
 965 01b2 FB83     		strh	r3, [r7, #30]	@ movhi
 520:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t max_len = pcb->mss - optlen;
 966              		.loc 1 520 0
 967 01b4 FB68     		ldr	r3, [r7, #12]
 968 01b6 1A8F     		ldrh	r2, [r3, #56]
 969 01b8 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 970 01bc 9BB2     		uxth	r3, r3
 971 01be D31A     		subs	r3, r2, r3
 972 01c0 BB83     		strh	r3, [r7, #28]	@ movhi
 521:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t seglen = left > max_len ? max_len : left;
 973              		.loc 1 521 0
 974 01c2 FA8B     		ldrh	r2, [r7, #30]
 975 01c4 BB8B     		ldrh	r3, [r7, #28]
 976 01c6 9342     		cmp	r3, r2
 977 01c8 28BF     		it	cs
 978 01ca 1346     		movcs	r3, r2
 979 01cc 7B83     		strh	r3, [r7, #26]	@ movhi
 522:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 523:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t chksum = 0;
 524:Libraries/lwip-1.4.0/core/tcp_out.c ****     u8_t chksum_swapped = 0;
 525:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 526:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 527:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (apiflags & TCP_WRITE_FLAG_COPY) {
 980              		.loc 1 527 0
 981 01ce 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 982 01d0 03F00103 		and	r3, r3, #1
 983 01d4 002B     		cmp	r3, #0
 984 01d6 2AD0     		beq	.L55
 528:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* If copy is set, memory should be allocated and data copied
 529:Libraries/lwip-1.4.0/core/tcp_out.c ****        * into pbuf */
 530:Libraries/lwip-1.4.0/core/tcp_out.c ****       if ((p = tcp_pbuf_prealloc(PBUF_TRANSPORT, seglen + optlen, pcb->mss, &oversize, pcb, apiflag
 985              		.loc 1 530 0
 986 01d8 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 987 01dc 9AB2     		uxth	r2, r3
 988 01de 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 989 01e0 1344     		add	r3, r3, r2
 990 01e2 99B2     		uxth	r1, r3
 991 01e4 FB68     		ldr	r3, [r7, #12]
 992 01e6 1A8F     		ldrh	r2, [r3, #56]
 993 01e8 FB6B     		ldr	r3, [r7, #60]
 994 01ea 002B     		cmp	r3, #0
 995 01ec 0CBF     		ite	eq
 996 01ee 0123     		moveq	r3, #1
 997 01f0 0023     		movne	r3, #0
 998 01f2 DBB2     		uxtb	r3, r3
 999 01f4 07F11200 		add	r0, r7, #18
 1000 01f8 0293     		str	r3, [sp, #8]
 1001 01fa 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1002 01fc 0193     		str	r3, [sp, #4]
 1003 01fe FB68     		ldr	r3, [r7, #12]
 1004 0200 0093     		str	r3, [sp]
 1005 0202 0346     		mov	r3, r0
 1006 0204 0020     		movs	r0, #0
 1007 0206 FFF7FEFF 		bl	tcp_pbuf_prealloc
 1008 020a 3863     		str	r0, [r7, #48]
 1009 020c 3B6B     		ldr	r3, [r7, #48]
 1010 020e 002B     		cmp	r3, #0
 1011 0210 00F0F480 		beq	.L81
 531:Libraries/lwip-1.4.0/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_write : could not allocate memory for pbuf copy siz
 532:Libraries/lwip-1.4.0/core/tcp_out.c ****         goto memerr;
 533:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 534:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_ASSERT("tcp_write: check that first pbuf can hold the complete seglen",
 535:Libraries/lwip-1.4.0/core/tcp_out.c ****                   (p->len >= seglen));
 536:Libraries/lwip-1.4.0/core/tcp_out.c ****       TCP_DATA_COPY2((char *)p->payload + optlen, (u8_t*)arg + pos, seglen, &chksum, &chksum_swappe
 1012              		.loc 1 536 0
 1013 0214 3B6B     		ldr	r3, [r7, #48]
 1014 0216 5A68     		ldr	r2, [r3, #4]
 1015 0218 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1016 021c D018     		adds	r0, r2, r3
 1017 021e 7B8F     		ldrh	r3, [r7, #58]
 1018 0220 BA68     		ldr	r2, [r7, #8]
 1019 0222 1344     		add	r3, r3, r2
 1020 0224 7A8B     		ldrh	r2, [r7, #26]
 1021 0226 1946     		mov	r1, r3
 1022 0228 FFF7FEFF 		bl	memcpy
 1023 022c 23E0     		b	.L57
 1024              	.L55:
 1025              	.LBB7:
 537:Libraries/lwip-1.4.0/core/tcp_out.c ****     } else {
 538:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* Copy is not set: First allocate a pbuf for holding the data.
 539:Libraries/lwip-1.4.0/core/tcp_out.c ****        * Since the referenced data is available at least until it is
 540:Libraries/lwip-1.4.0/core/tcp_out.c ****        * sent out on the link (as it has to be ACKed by the remote
 541:Libraries/lwip-1.4.0/core/tcp_out.c ****        * party) we can safely use PBUF_ROM instead of PBUF_REF here.
 542:Libraries/lwip-1.4.0/core/tcp_out.c ****        */
 543:Libraries/lwip-1.4.0/core/tcp_out.c ****       struct pbuf *p2;
 544:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 545:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_ASSERT("oversize == 0", oversize == 0);
 546:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 547:Libraries/lwip-1.4.0/core/tcp_out.c ****       if ((p2 = pbuf_alloc(PBUF_TRANSPORT, seglen, PBUF_ROM)) == NULL) {
 1026              		.loc 1 547 0
 1027 022e 7B8B     		ldrh	r3, [r7, #26]
 1028 0230 0122     		movs	r2, #1
 1029 0232 1946     		mov	r1, r3
 1030 0234 0020     		movs	r0, #0
 1031 0236 FFF7FEFF 		bl	pbuf_alloc
 1032 023a 7861     		str	r0, [r7, #20]
 1033 023c 7B69     		ldr	r3, [r7, #20]
 1034 023e 002B     		cmp	r3, #0
 1035 0240 00F0DE80 		beq	.L82
 548:Libraries/lwip-1.4.0/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_write: could not allocate memory for zero-copy pbuf
 549:Libraries/lwip-1.4.0/core/tcp_out.c ****         goto memerr;
 550:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 551:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 552:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* calculate the checksum of nocopy-data */
 553:Libraries/lwip-1.4.0/core/tcp_out.c ****       chksum = ~inet_chksum((u8_t*)arg + pos, seglen);
 554:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 555:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* reference the non-volatile payload data */
 556:Libraries/lwip-1.4.0/core/tcp_out.c ****       p2->payload = (u8_t*)arg + pos;
 1036              		.loc 1 556 0
 1037 0244 7B8F     		ldrh	r3, [r7, #58]
 1038 0246 BA68     		ldr	r2, [r7, #8]
 1039 0248 1A44     		add	r2, r2, r3
 1040 024a 7B69     		ldr	r3, [r7, #20]
 1041 024c 5A60     		str	r2, [r3, #4]
 557:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 558:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* Second, allocate a pbuf for the headers. */
 559:Libraries/lwip-1.4.0/core/tcp_out.c ****       if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
 1042              		.loc 1 559 0
 1043 024e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1044 0252 9BB2     		uxth	r3, r3
 1045 0254 0022     		movs	r2, #0
 1046 0256 1946     		mov	r1, r3
 1047 0258 0020     		movs	r0, #0
 1048 025a FFF7FEFF 		bl	pbuf_alloc
 1049 025e 3863     		str	r0, [r7, #48]
 1050 0260 3B6B     		ldr	r3, [r7, #48]
 1051 0262 002B     		cmp	r3, #0
 1052 0264 03D1     		bne	.L59
 560:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 561:Libraries/lwip-1.4.0/core/tcp_out.c ****          * well. */
 562:Libraries/lwip-1.4.0/core/tcp_out.c ****         pbuf_free(p2);
 1053              		.loc 1 562 0
 1054 0266 7869     		ldr	r0, [r7, #20]
 1055 0268 FFF7FEFF 		bl	pbuf_free
 563:Libraries/lwip-1.4.0/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_write: could not allocate memory for header pbuf\n"
 564:Libraries/lwip-1.4.0/core/tcp_out.c ****         goto memerr;
 1056              		.loc 1 564 0
 1057 026c CBE0     		b	.L50
 1058              	.L59:
 565:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 566:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* Concatenate the headers and data pbufs together. */
 567:Libraries/lwip-1.4.0/core/tcp_out.c ****       pbuf_cat(p/*header*/, p2/*data*/);
 1059              		.loc 1 567 0
 1060 026e 7969     		ldr	r1, [r7, #20]
 1061 0270 386B     		ldr	r0, [r7, #48]
 1062 0272 FFF7FEFF 		bl	pbuf_cat
 1063              	.L57:
 1064              	.LBE7:
 568:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 569:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 570:Libraries/lwip-1.4.0/core/tcp_out.c ****     queuelen += pbuf_clen(p);
 1065              		.loc 1 570 0
 1066 0276 386B     		ldr	r0, [r7, #48]
 1067 0278 FFF7FEFF 		bl	pbuf_clen
 1068 027c 0346     		mov	r3, r0
 1069 027e 9AB2     		uxth	r2, r3
 1070 0280 3B8F     		ldrh	r3, [r7, #56]	@ movhi
 1071 0282 1344     		add	r3, r3, r2
 1072 0284 3B87     		strh	r3, [r7, #56]	@ movhi
 571:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 572:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Now that there are more segments queued, we check again if the
 573:Libraries/lwip-1.4.0/core/tcp_out.c ****      * length of the queue exceeds the configured maximum or
 574:Libraries/lwip-1.4.0/core/tcp_out.c ****      * overflows. */
 575:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((queuelen > TCP_SND_QUEUELEN) || (queuelen > TCP_SNDQUEUELEN_OVERFLOW)) {
 1073              		.loc 1 575 0
 1074 0286 3B8F     		ldrh	r3, [r7, #56]
 1075 0288 042B     		cmp	r3, #4
 1076 028a 04D8     		bhi	.L60
 1077              		.loc 1 575 0 is_stmt 0 discriminator 1
 1078 028c 3B8F     		ldrh	r3, [r7, #56]
 1079 028e 4FF6FC72 		movw	r2, #65532
 1080 0292 9342     		cmp	r3, r2
 1081 0294 03D9     		bls	.L61
 1082              	.L60:
 576:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_write: queue too long %"U16_F" (%"U16_F")\n", queuele
 577:Libraries/lwip-1.4.0/core/tcp_out.c ****       pbuf_free(p);
 1083              		.loc 1 577 0 is_stmt 1
 1084 0296 386B     		ldr	r0, [r7, #48]
 1085 0298 FFF7FEFF 		bl	pbuf_free
 578:Libraries/lwip-1.4.0/core/tcp_out.c ****       goto memerr;
 1086              		.loc 1 578 0
 1087 029c B3E0     		b	.L50
 1088              	.L61:
 579:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 580:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 581:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((seg = tcp_create_segment(pcb, p, 0, pcb->snd_lbb + pos, optflags)) == NULL) {
 1089              		.loc 1 581 0
 1090 029e FB68     		ldr	r3, [r7, #12]
 1091 02a0 9A6E     		ldr	r2, [r3, #104]
 1092 02a2 7B8F     		ldrh	r3, [r7, #58]
 1093 02a4 1A44     		add	r2, r2, r3
 1094 02a6 97F82A30 		ldrb	r3, [r7, #42]	@ zero_extendqisi2
 1095 02aa 0093     		str	r3, [sp]
 1096 02ac 1346     		mov	r3, r2
 1097 02ae 0022     		movs	r2, #0
 1098 02b0 396B     		ldr	r1, [r7, #48]
 1099 02b2 F868     		ldr	r0, [r7, #12]
 1100 02b4 FFF7FEFF 		bl	tcp_create_segment
 1101 02b8 7864     		str	r0, [r7, #68]
 1102 02ba 7B6C     		ldr	r3, [r7, #68]
 1103 02bc 002B     		cmp	r3, #0
 1104 02be 00F0A180 		beq	.L83
 582:Libraries/lwip-1.4.0/core/tcp_out.c ****       goto memerr;
 583:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 584:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 585:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg->oversize_left = oversize;
 586:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 587:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 588:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg->chksum = chksum;
 589:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg->chksum_swapped = chksum_swapped;
 590:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg->flags |= TF_SEG_DATA_CHECKSUMMED;
 591:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 592:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 593:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* first segment of to-be-queued data? */
 594:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (queue == NULL) {
 1105              		.loc 1 594 0
 1106 02c2 FB6B     		ldr	r3, [r7, #60]
 1107 02c4 002B     		cmp	r3, #0
 1108 02c6 02D1     		bne	.L63
 595:Libraries/lwip-1.4.0/core/tcp_out.c ****       queue = seg;
 1109              		.loc 1 595 0
 1110 02c8 7B6C     		ldr	r3, [r7, #68]
 1111 02ca FB63     		str	r3, [r7, #60]
 1112 02cc 02E0     		b	.L64
 1113              	.L63:
 596:Libraries/lwip-1.4.0/core/tcp_out.c ****     } else {
 597:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* Attach the segment to the end of the queued segments */
 598:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_ASSERT("prev_seg != NULL", prev_seg != NULL);
 599:Libraries/lwip-1.4.0/core/tcp_out.c ****       prev_seg->next = seg;
 1114              		.loc 1 599 0
 1115 02ce 3B6C     		ldr	r3, [r7, #64]
 1116 02d0 7A6C     		ldr	r2, [r7, #68]
 1117 02d2 1A60     		str	r2, [r3]
 1118              	.L64:
 600:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 601:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* remember last segment of to-be-queued data for next iteration */
 602:Libraries/lwip-1.4.0/core/tcp_out.c ****     prev_seg = seg;
 1119              		.loc 1 602 0
 1120 02d4 7B6C     		ldr	r3, [r7, #68]
 1121 02d6 3B64     		str	r3, [r7, #64]
 603:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 604:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE, ("tcp_write: queueing %"U32_F":%"U32_F"\n",
 605:Libraries/lwip-1.4.0/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno),
 606:Libraries/lwip-1.4.0/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg)));
 607:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 608:Libraries/lwip-1.4.0/core/tcp_out.c ****     pos += seglen;
 1122              		.loc 1 608 0
 1123 02d8 7A8F     		ldrh	r2, [r7, #58]	@ movhi
 1124 02da 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1125 02dc 1344     		add	r3, r3, r2
 1126 02de 7B87     		strh	r3, [r7, #58]	@ movhi
 1127              	.L54:
 1128              	.LBE6:
 517:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct pbuf *p;
 1129              		.loc 1 517 0
 1130 02e0 7A8F     		ldrh	r2, [r7, #58]
 1131 02e2 FB88     		ldrh	r3, [r7, #6]
 1132 02e4 9A42     		cmp	r2, r3
 1133 02e6 FFF461AF 		bcc	.L65
 609:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 610:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 611:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 612:Libraries/lwip-1.4.0/core/tcp_out.c ****    * All three segmentation phases were successful. We can commit the
 613:Libraries/lwip-1.4.0/core/tcp_out.c ****    * transaction.
 614:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 615:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 616:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 617:Libraries/lwip-1.4.0/core/tcp_out.c ****    * Phase 1: If data has been added to the preallocated tail of
 618:Libraries/lwip-1.4.0/core/tcp_out.c ****    * last_unsent, we update the length fields of the pbuf chain.
 619:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 620:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 621:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (oversize_used > 0) {
 1134              		.loc 1 621 0
 1135 02ea FB8E     		ldrh	r3, [r7, #54]
 1136 02ec 002B     		cmp	r3, #0
 1137 02ee 2CD0     		beq	.L66
 1138              	.LBB9:
 622:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct pbuf *p;
 623:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Bump tot_len of whole chain, len of tail */
 624:Libraries/lwip-1.4.0/core/tcp_out.c ****     for (p = last_unsent->p; p; p = p->next) {
 1139              		.loc 1 624 0
 1140 02f0 BB6C     		ldr	r3, [r7, #72]
 1141 02f2 5B68     		ldr	r3, [r3, #4]
 1142 02f4 FB62     		str	r3, [r7, #44]
 1143 02f6 1EE0     		b	.L67
 1144              	.L69:
 625:Libraries/lwip-1.4.0/core/tcp_out.c ****       p->tot_len += oversize_used;
 1145              		.loc 1 625 0
 1146 02f8 FB6A     		ldr	r3, [r7, #44]
 1147 02fa 1A89     		ldrh	r2, [r3, #8]
 1148 02fc FB8E     		ldrh	r3, [r7, #54]	@ movhi
 1149 02fe 1344     		add	r3, r3, r2
 1150 0300 9AB2     		uxth	r2, r3
 1151 0302 FB6A     		ldr	r3, [r7, #44]
 1152 0304 1A81     		strh	r2, [r3, #8]	@ movhi
 626:Libraries/lwip-1.4.0/core/tcp_out.c ****       if (p->next == NULL) {
 1153              		.loc 1 626 0
 1154 0306 FB6A     		ldr	r3, [r7, #44]
 1155 0308 1B68     		ldr	r3, [r3]
 1156 030a 002B     		cmp	r3, #0
 1157 030c 10D1     		bne	.L68
 627:Libraries/lwip-1.4.0/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
 1158              		.loc 1 627 0
 1159 030e FB6A     		ldr	r3, [r7, #44]
 1160 0310 5B68     		ldr	r3, [r3, #4]
 1161 0312 FA6A     		ldr	r2, [r7, #44]
 1162 0314 5289     		ldrh	r2, [r2, #10]
 1163 0316 1344     		add	r3, r3, r2
 1164 0318 FA8E     		ldrh	r2, [r7, #54]
 1165 031a B968     		ldr	r1, [r7, #8]
 1166 031c 1846     		mov	r0, r3
 1167 031e FFF7FEFF 		bl	memcpy
 628:Libraries/lwip-1.4.0/core/tcp_out.c ****         p->len += oversize_used;
 1168              		.loc 1 628 0
 1169 0322 FB6A     		ldr	r3, [r7, #44]
 1170 0324 5A89     		ldrh	r2, [r3, #10]
 1171 0326 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 1172 0328 1344     		add	r3, r3, r2
 1173 032a 9AB2     		uxth	r2, r3
 1174 032c FB6A     		ldr	r3, [r7, #44]
 1175 032e 5A81     		strh	r2, [r3, #10]	@ movhi
 1176              	.L68:
 624:Libraries/lwip-1.4.0/core/tcp_out.c ****       p->tot_len += oversize_used;
 1177              		.loc 1 624 0 discriminator 2
 1178 0330 FB6A     		ldr	r3, [r7, #44]
 1179 0332 1B68     		ldr	r3, [r3]
 1180 0334 FB62     		str	r3, [r7, #44]
 1181              	.L67:
 624:Libraries/lwip-1.4.0/core/tcp_out.c ****       p->tot_len += oversize_used;
 1182              		.loc 1 624 0 is_stmt 0 discriminator 1
 1183 0336 FB6A     		ldr	r3, [r7, #44]
 1184 0338 002B     		cmp	r3, #0
 1185 033a DDD1     		bne	.L69
 629:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 630:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 631:Libraries/lwip-1.4.0/core/tcp_out.c ****     last_unsent->len += oversize_used;
 1186              		.loc 1 631 0 is_stmt 1
 1187 033c BB6C     		ldr	r3, [r7, #72]
 1188 033e 1A89     		ldrh	r2, [r3, #8]
 1189 0340 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 1190 0342 1344     		add	r3, r3, r2
 1191 0344 9AB2     		uxth	r2, r3
 1192 0346 BB6C     		ldr	r3, [r7, #72]
 1193 0348 1A81     		strh	r2, [r3, #8]	@ movhi
 1194              	.L66:
 1195              	.LBE9:
 632:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 633:Libraries/lwip-1.4.0/core/tcp_out.c ****     last_unsent->oversize_left -= oversize_used;
 634:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 635:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 636:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->unsent_oversize = oversize;
 1196              		.loc 1 636 0
 1197 034a 7A8A     		ldrh	r2, [r7, #18]
 1198 034c FB68     		ldr	r3, [r7, #12]
 1199 034e A3F87220 		strh	r2, [r3, #114]	@ movhi
 637:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 638:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 639:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 640:Libraries/lwip-1.4.0/core/tcp_out.c ****    * Phase 2: concat_p can be concatenated onto last_unsent->p
 641:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 642:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (concat_p != NULL) {
 1200              		.loc 1 642 0
 1201 0352 FB6C     		ldr	r3, [r7, #76]
 1202 0354 002B     		cmp	r3, #0
 1203 0356 0DD0     		beq	.L70
 643:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 644:Libraries/lwip-1.4.0/core/tcp_out.c ****       (last_unsent != NULL));
 645:Libraries/lwip-1.4.0/core/tcp_out.c ****     pbuf_cat(last_unsent->p, concat_p);
 1204              		.loc 1 645 0
 1205 0358 BB6C     		ldr	r3, [r7, #72]
 1206 035a 5B68     		ldr	r3, [r3, #4]
 1207 035c F96C     		ldr	r1, [r7, #76]
 1208 035e 1846     		mov	r0, r3
 1209 0360 FFF7FEFF 		bl	pbuf_cat
 646:Libraries/lwip-1.4.0/core/tcp_out.c ****     last_unsent->len += concat_p->tot_len;
 1210              		.loc 1 646 0
 1211 0364 BB6C     		ldr	r3, [r7, #72]
 1212 0366 1A89     		ldrh	r2, [r3, #8]
 1213 0368 FB6C     		ldr	r3, [r7, #76]
 1214 036a 1B89     		ldrh	r3, [r3, #8]
 1215 036c 1344     		add	r3, r3, r2
 1216 036e 9AB2     		uxth	r2, r3
 1217 0370 BB6C     		ldr	r3, [r7, #72]
 1218 0372 1A81     		strh	r2, [r3, #8]	@ movhi
 1219              	.L70:
 647:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 648:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (concat_chksummed) {
 649:Libraries/lwip-1.4.0/core/tcp_out.c ****       tcp_seg_add_chksum(concat_chksum, concat_chksummed, &last_unsent->chksum,
 650:Libraries/lwip-1.4.0/core/tcp_out.c ****         &last_unsent->chksum_swapped);
 651:Libraries/lwip-1.4.0/core/tcp_out.c ****       last_unsent->flags |= TF_SEG_DATA_CHECKSUMMED;
 652:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 653:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 654:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 655:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 656:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 657:Libraries/lwip-1.4.0/core/tcp_out.c ****    * Phase 3: Append queue to pcb->unsent. Queue may be NULL, but that
 658:Libraries/lwip-1.4.0/core/tcp_out.c ****    * is harmless
 659:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 660:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (last_unsent == NULL) {
 1220              		.loc 1 660 0
 1221 0374 BB6C     		ldr	r3, [r7, #72]
 1222 0376 002B     		cmp	r3, #0
 1223 0378 03D1     		bne	.L71
 661:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->unsent = queue;
 1224              		.loc 1 661 0
 1225 037a FB68     		ldr	r3, [r7, #12]
 1226 037c FA6B     		ldr	r2, [r7, #60]
 1227 037e 5A67     		str	r2, [r3, #116]
 1228 0380 02E0     		b	.L72
 1229              	.L71:
 662:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
 663:Libraries/lwip-1.4.0/core/tcp_out.c ****     last_unsent->next = queue;
 1230              		.loc 1 663 0
 1231 0382 BB6C     		ldr	r3, [r7, #72]
 1232 0384 FA6B     		ldr	r2, [r7, #60]
 1233 0386 1A60     		str	r2, [r3]
 1234              	.L72:
 664:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 665:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 666:Libraries/lwip-1.4.0/core/tcp_out.c ****   /*
 667:Libraries/lwip-1.4.0/core/tcp_out.c ****    * Finally update the pcb state.
 668:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 669:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->snd_lbb += len;
 1235              		.loc 1 669 0
 1236 0388 FB68     		ldr	r3, [r7, #12]
 1237 038a 9A6E     		ldr	r2, [r3, #104]
 1238 038c FB88     		ldrh	r3, [r7, #6]
 1239 038e 1A44     		add	r2, r2, r3
 1240 0390 FB68     		ldr	r3, [r7, #12]
 1241 0392 9A66     		str	r2, [r3, #104]
 670:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->snd_buf -= len;
 1242              		.loc 1 670 0
 1243 0394 FB68     		ldr	r3, [r7, #12]
 1244 0396 B3F86E20 		ldrh	r2, [r3, #110]
 1245 039a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1246 039c D31A     		subs	r3, r2, r3
 1247 039e 9AB2     		uxth	r2, r3
 1248 03a0 FB68     		ldr	r3, [r7, #12]
 1249 03a2 A3F86E20 		strh	r2, [r3, #110]	@ movhi
 671:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1250              		.loc 1 671 0
 1251 03a6 FB68     		ldr	r3, [r7, #12]
 1252 03a8 3A8F     		ldrh	r2, [r7, #56]	@ movhi
 1253 03aa A3F87020 		strh	r2, [r3, #112]	@ movhi
 672:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 673:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_write: %"S16_F" (after enqueued)\n",
 674:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->snd_queuelen));
 675:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1254              		.loc 1 675 0
 1255 03ae FB68     		ldr	r3, [r7, #12]
 1256 03b0 B3F87030 		ldrh	r3, [r3, #112]
 1257 03b4 002B     		cmp	r3, #0
 1258 03b6 02D0     		beq	.L73
 676:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length",
 1259              		.loc 1 676 0
 1260 03b8 FB68     		ldr	r3, [r7, #12]
 1261 03ba 9B6F     		ldr	r3, [r3, #120]
 1262 03bc 002B     		cmp	r3, #0
 1263              	.L73:
 677:Libraries/lwip-1.4.0/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 678:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 679:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 680:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Set the PSH flag in the last segment that we enqueued. */
 681:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg != NULL && seg->tcphdr != NULL && ((apiflags & TCP_WRITE_FLAG_MORE)==0)) {
 1264              		.loc 1 681 0
 1265 03be 7B6C     		ldr	r3, [r7, #68]
 1266 03c0 002B     		cmp	r3, #0
 1267 03c2 15D0     		beq	.L74
 1268              		.loc 1 681 0 is_stmt 0 discriminator 1
 1269 03c4 7B6C     		ldr	r3, [r7, #68]
 1270 03c6 DB68     		ldr	r3, [r3, #12]
 1271 03c8 002B     		cmp	r3, #0
 1272 03ca 11D0     		beq	.L74
 1273              		.loc 1 681 0 discriminator 2
 1274 03cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1275 03ce 03F00203 		and	r3, r3, #2
 1276 03d2 002B     		cmp	r3, #0
 1277 03d4 0CD1     		bne	.L74
 682:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1278              		.loc 1 682 0 is_stmt 1
 1279 03d6 7B6C     		ldr	r3, [r7, #68]
 1280 03d8 DC68     		ldr	r4, [r3, #12]
 1281 03da 7B6C     		ldr	r3, [r7, #68]
 1282 03dc DB68     		ldr	r3, [r3, #12]
 1283 03de 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1284 03e0 9DB2     		uxth	r5, r3
 1285 03e2 0820     		movs	r0, #8
 1286 03e4 FFF7FEFF 		bl	lwip_htons
 1287 03e8 0346     		mov	r3, r0
 1288 03ea 2B43     		orrs	r3, r3, r5
 1289 03ec 9BB2     		uxth	r3, r3
 1290 03ee A381     		strh	r3, [r4, #12]	@ unaligned
 1291              	.L74:
 683:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 684:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 685:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_OK;
 1292              		.loc 1 685 0
 1293 03f0 0023     		movs	r3, #0
 1294 03f2 2FE0     		b	.L78
 1295              	.L79:
 1296              	.LBB10:
 1297              	.LBB5:
 475:Libraries/lwip-1.4.0/core/tcp_out.c ****         }
 1298              		.loc 1 475 0
 1299 03f4 00BF     		nop
 1300 03f6 06E0     		b	.L50
 1301              	.L80:
 489:Libraries/lwip-1.4.0/core/tcp_out.c ****         }
 1302              		.loc 1 489 0
 1303 03f8 00BF     		nop
 1304 03fa 04E0     		b	.L50
 1305              	.L81:
 1306              	.LBE5:
 1307              	.LBE10:
 1308              	.LBB11:
 532:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 1309              		.loc 1 532 0
 1310 03fc 00BF     		nop
 1311 03fe 02E0     		b	.L50
 1312              	.L82:
 1313              	.LBB8:
 549:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
 1314              		.loc 1 549 0
 1315 0400 00BF     		nop
 1316 0402 00E0     		b	.L50
 1317              	.L83:
 1318              	.LBE8:
 582:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 1319              		.loc 1 582 0
 1320 0404 00BF     		nop
 1321              	.L50:
 1322              	.LBE11:
 686:Libraries/lwip-1.4.0/core/tcp_out.c **** memerr:
 687:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->flags |= TF_NAGLEMEMERR;
 1323              		.loc 1 687 0
 1324 0406 FB68     		ldr	r3, [r7, #12]
 1325 0408 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1326 040c 63F07F03 		orn	r3, r3, #127
 1327 0410 DAB2     		uxtb	r2, r3
 1328 0412 FB68     		ldr	r3, [r7, #12]
 1329 0414 83F82020 		strb	r2, [r3, #32]
 688:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 1330              		.loc 1 688 0
 1331 0418 104B     		ldr	r3, .L84
 1332 041a B3F89C30 		ldrh	r3, [r3, #156]
 1333 041e 0133     		adds	r3, r3, #1
 1334 0420 9AB2     		uxth	r2, r3
 1335 0422 0E4B     		ldr	r3, .L84
 1336 0424 A3F89C20 		strh	r2, [r3, #156]	@ movhi
 689:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 690:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (concat_p != NULL) {
 1337              		.loc 1 690 0
 1338 0428 FB6C     		ldr	r3, [r7, #76]
 1339 042a 002B     		cmp	r3, #0
 1340 042c 02D0     		beq	.L75
 691:Libraries/lwip-1.4.0/core/tcp_out.c ****     pbuf_free(concat_p);
 1341              		.loc 1 691 0
 1342 042e F86C     		ldr	r0, [r7, #76]
 1343 0430 FFF7FEFF 		bl	pbuf_free
 1344              	.L75:
 692:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 693:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (queue != NULL) {
 1345              		.loc 1 693 0
 1346 0434 FB6B     		ldr	r3, [r7, #60]
 1347 0436 002B     		cmp	r3, #0
 1348 0438 02D0     		beq	.L76
 694:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_segs_free(queue);
 1349              		.loc 1 694 0
 1350 043a F86B     		ldr	r0, [r7, #60]
 1351 043c FFF7FEFF 		bl	tcp_segs_free
 1352              	.L76:
 695:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 696:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1353              		.loc 1 696 0
 1354 0440 FB68     		ldr	r3, [r7, #12]
 1355 0442 B3F87030 		ldrh	r3, [r3, #112]
 1356 0446 002B     		cmp	r3, #0
 1357 0448 02D0     		beq	.L77
 697:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length", pcb->unacked != NULL ||
 1358              		.loc 1 697 0
 1359 044a FB68     		ldr	r3, [r7, #12]
 1360 044c 9B6F     		ldr	r3, [r3, #120]
 1361 044e 002B     		cmp	r3, #0
 1362              	.L77:
 698:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->unsent != NULL);
 699:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 700:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG | LWIP_DBG_STATE, ("tcp_write: %"S16_F" (with mem err)\n", pcb->snd_qu
 701:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_MEM;
 1363              		.loc 1 701 0
 1364 0450 4FF0FF33 		mov	r3, #-1
 1365              	.L78:
 702:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 1366              		.loc 1 702 0 discriminator 2
 1367 0454 1846     		mov	r0, r3
 1368 0456 5037     		adds	r7, r7, #80
 1369              		.cfi_def_cfa_offset 16
 1370 0458 BD46     		mov	sp, r7
 1371              		.cfi_def_cfa_register 13
 1372              		@ sp needed
 1373 045a B0BD     		pop	{r4, r5, r7, pc}
 1374              	.L85:
 1375              		.align	2
 1376              	.L84:
 1377 045c 00000000 		.word	lwip_stats
 1378              		.cfi_endproc
 1379              	.LFE22:
 1381              		.section	.text.tcp_enqueue_flags,"ax",%progbits
 1382              		.align	2
 1383              		.global	tcp_enqueue_flags
 1384              		.thumb
 1385              		.thumb_func
 1387              	tcp_enqueue_flags:
 1388              	.LFB23:
 703:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 704:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 705:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Enqueue TCP options for transmission.
 706:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 707:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_connect(), tcp_listen_input(), and tcp_send_ctrl().
 708:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 709:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection.
 710:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param flags TCP header flags to set in the outgoing segment.
 711:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param optdata pointer to TCP options, or NULL.
 712:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param optlen length of TCP options in bytes.
 713:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 714:Libraries/lwip-1.4.0/core/tcp_out.c **** err_t
 715:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_enqueue_flags(struct tcp_pcb *pcb, u8_t flags)
 716:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 1389              		.loc 1 716 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 32
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393 0000 80B5     		push	{r7, lr}
 1394              		.cfi_def_cfa_offset 8
 1395              		.cfi_offset 7, -8
 1396              		.cfi_offset 14, -4
 1397 0002 8AB0     		sub	sp, sp, #40
 1398              		.cfi_def_cfa_offset 48
 1399 0004 02AF     		add	r7, sp, #8
 1400              		.cfi_def_cfa 7, 40
 1401 0006 7860     		str	r0, [r7, #4]
 1402 0008 0B46     		mov	r3, r1
 1403 000a FB70     		strb	r3, [r7, #3]
 717:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
 718:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg;
 719:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optflags = 0;
 1404              		.loc 1 719 0
 1405 000c 0023     		movs	r3, #0
 1406 000e FB77     		strb	r3, [r7, #31]
 720:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optlen = 0;
 1407              		.loc 1 720 0
 1408 0010 0023     		movs	r3, #0
 1409 0012 FB75     		strb	r3, [r7, #23]
 721:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 722:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: queuelen: %"U16_F"\n", (u16_t)pcb->snd_queuelen)
 723:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 724:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: need either TCP_SYN or TCP_FIN in flags (programmer violates API)
 725:Libraries/lwip-1.4.0/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 726:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 727:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* check for configured max queuelen and possible overflow */
 728:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((pcb->snd_queuelen >= TCP_SND_QUEUELEN) || (pcb->snd_queuelen > TCP_SNDQUEUELEN_OVERFLOW)) {
 1410              		.loc 1 728 0
 1411 0014 7B68     		ldr	r3, [r7, #4]
 1412 0016 B3F87030 		ldrh	r3, [r3, #112]
 1413 001a 032B     		cmp	r3, #3
 1414 001c 06D8     		bhi	.L87
 1415              		.loc 1 728 0 is_stmt 0 discriminator 1
 1416 001e 7B68     		ldr	r3, [r7, #4]
 1417 0020 B3F87030 		ldrh	r3, [r3, #112]
 1418 0024 4FF6FC72 		movw	r2, #65532
 1419 0028 9342     		cmp	r3, r2
 1420 002a 13D9     		bls	.L88
 1421              	.L87:
 729:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 3, ("tcp_enqueue_flags: too long queue %"U16_F" (max %"U16_F")\n
 730:Libraries/lwip-1.4.0/core/tcp_out.c ****                                        pcb->snd_queuelen, TCP_SND_QUEUELEN));
 731:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 1422              		.loc 1 731 0 is_stmt 1
 1423 002c 6C4B     		ldr	r3, .L106
 1424 002e B3F89C30 		ldrh	r3, [r3, #156]
 1425 0032 0133     		adds	r3, r3, #1
 1426 0034 9AB2     		uxth	r2, r3
 1427 0036 6A4B     		ldr	r3, .L106
 1428 0038 A3F89C20 		strh	r2, [r3, #156]	@ movhi
 732:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 1429              		.loc 1 732 0
 1430 003c 7B68     		ldr	r3, [r7, #4]
 1431 003e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1432 0042 63F07F03 		orn	r3, r3, #127
 1433 0046 DAB2     		uxtb	r2, r3
 1434 0048 7B68     		ldr	r3, [r7, #4]
 1435 004a 83F82020 		strb	r2, [r3, #32]
 733:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 1436              		.loc 1 733 0
 1437 004e 4FF0FF33 		mov	r3, #-1
 1438 0052 C1E0     		b	.L89
 1439              	.L88:
 734:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 735:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 736:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (flags & TCP_SYN) {
 1440              		.loc 1 736 0
 1441 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1442 0056 03F00203 		and	r3, r3, #2
 1443 005a 002B     		cmp	r3, #0
 1444 005c 01D0     		beq	.L90
 737:Libraries/lwip-1.4.0/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
 1445              		.loc 1 737 0
 1446 005e 0123     		movs	r3, #1
 1447 0060 FB77     		strb	r3, [r7, #31]
 1448              	.L90:
 738:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 739:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 740:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((pcb->flags & TF_TIMESTAMP)) {
 741:Libraries/lwip-1.4.0/core/tcp_out.c ****     optflags |= TF_SEG_OPTS_TS;
 742:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 743:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_TCP_TIMESTAMPS */
 744:Libraries/lwip-1.4.0/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH(optflags);
 1449              		.loc 1 744 0
 1450 0062 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1451 0064 03F00103 		and	r3, r3, #1
 1452 0068 002B     		cmp	r3, #0
 1453 006a 01D0     		beq	.L91
 1454              		.loc 1 744 0 is_stmt 0 discriminator 1
 1455 006c 0422     		movs	r2, #4
 1456 006e 00E0     		b	.L92
 1457              	.L91:
 1458              		.loc 1 744 0 discriminator 2
 1459 0070 0022     		movs	r2, #0
 1460              	.L92:
 1461              		.loc 1 744 0 discriminator 4
 1462 0072 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1463 0074 03F00203 		and	r3, r3, #2
 1464 0078 002B     		cmp	r3, #0
 1465 007a 01D0     		beq	.L93
 1466              		.loc 1 744 0 discriminator 5
 1467 007c 0C23     		movs	r3, #12
 1468 007e 00E0     		b	.L94
 1469              	.L93:
 1470              		.loc 1 744 0 discriminator 6
 1471 0080 0023     		movs	r3, #0
 1472              	.L94:
 1473              		.loc 1 744 0 discriminator 8
 1474 0082 1344     		add	r3, r3, r2
 1475 0084 FB75     		strb	r3, [r7, #23]
 745:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 746:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* tcp_enqueue_flags is always called with either SYN or FIN in flags.
 747:Libraries/lwip-1.4.0/core/tcp_out.c ****    * We need one available snd_buf byte to do that.
 748:Libraries/lwip-1.4.0/core/tcp_out.c ****    * This means we can't send FIN while snd_buf==0. A better fix would be to
 749:Libraries/lwip-1.4.0/core/tcp_out.c ****    * not include SYN and FIN sequence numbers in the snd_buf count. */
 750:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->snd_buf == 0) {
 1476              		.loc 1 750 0 is_stmt 1 discriminator 8
 1477 0086 7B68     		ldr	r3, [r7, #4]
 1478 0088 B3F86E30 		ldrh	r3, [r3, #110]
 1479 008c 002B     		cmp	r3, #0
 1480 008e 0AD1     		bne	.L95
 751:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 3, ("tcp_enqueue_flags: no send buffer available\n"));
 752:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 1481              		.loc 1 752 0
 1482 0090 534B     		ldr	r3, .L106
 1483 0092 B3F89C30 		ldrh	r3, [r3, #156]
 1484 0096 0133     		adds	r3, r3, #1
 1485 0098 9AB2     		uxth	r2, r3
 1486 009a 514B     		ldr	r3, .L106
 1487 009c A3F89C20 		strh	r2, [r3, #156]	@ movhi
 753:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 1488              		.loc 1 753 0
 1489 00a0 4FF0FF33 		mov	r3, #-1
 1490 00a4 98E0     		b	.L89
 1491              	.L95:
 754:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 755:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 756:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Allocate pbuf with room for TCP header + options */
 757:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
 1492              		.loc 1 757 0
 1493 00a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1494 00a8 9BB2     		uxth	r3, r3
 1495 00aa 0022     		movs	r2, #0
 1496 00ac 1946     		mov	r1, r3
 1497 00ae 0020     		movs	r0, #0
 1498 00b0 FFF7FEFF 		bl	pbuf_alloc
 1499 00b4 3861     		str	r0, [r7, #16]
 1500 00b6 3B69     		ldr	r3, [r7, #16]
 1501 00b8 002B     		cmp	r3, #0
 1502 00ba 13D1     		bne	.L96
 758:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 1503              		.loc 1 758 0
 1504 00bc 7B68     		ldr	r3, [r7, #4]
 1505 00be 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1506 00c2 63F07F03 		orn	r3, r3, #127
 1507 00c6 DAB2     		uxtb	r2, r3
 1508 00c8 7B68     		ldr	r3, [r7, #4]
 1509 00ca 83F82020 		strb	r2, [r3, #32]
 759:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 1510              		.loc 1 759 0
 1511 00ce 444B     		ldr	r3, .L106
 1512 00d0 B3F89C30 		ldrh	r3, [r3, #156]
 1513 00d4 0133     		adds	r3, r3, #1
 1514 00d6 9AB2     		uxth	r2, r3
 1515 00d8 414B     		ldr	r3, .L106
 1516 00da A3F89C20 		strh	r2, [r3, #156]	@ movhi
 760:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 1517              		.loc 1 760 0
 1518 00de 4FF0FF33 		mov	r3, #-1
 1519 00e2 79E0     		b	.L89
 1520              	.L96:
 761:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 762:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: check that first pbuf can hold optlen",
 763:Libraries/lwip-1.4.0/core/tcp_out.c ****               (p->len >= optlen));
 764:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 765:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Allocate memory for tcp_seg, and fill in fields. */
 766:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((seg = tcp_create_segment(pcb, p, flags, pcb->snd_lbb, optflags)) == NULL) {
 1521              		.loc 1 766 0
 1522 00e4 7B68     		ldr	r3, [r7, #4]
 1523 00e6 996E     		ldr	r1, [r3, #104]
 1524 00e8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1525 00ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1526 00ec 0093     		str	r3, [sp]
 1527 00ee 0B46     		mov	r3, r1
 1528 00f0 3969     		ldr	r1, [r7, #16]
 1529 00f2 7868     		ldr	r0, [r7, #4]
 1530 00f4 FFF7FEFF 		bl	tcp_create_segment
 1531 00f8 F860     		str	r0, [r7, #12]
 1532 00fa FB68     		ldr	r3, [r7, #12]
 1533 00fc 002B     		cmp	r3, #0
 1534 00fe 13D1     		bne	.L97
 767:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 1535              		.loc 1 767 0
 1536 0100 7B68     		ldr	r3, [r7, #4]
 1537 0102 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1538 0106 63F07F03 		orn	r3, r3, #127
 1539 010a DAB2     		uxtb	r2, r3
 1540 010c 7B68     		ldr	r3, [r7, #4]
 1541 010e 83F82020 		strb	r2, [r3, #32]
 768:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 1542              		.loc 1 768 0
 1543 0112 334B     		ldr	r3, .L106
 1544 0114 B3F89C30 		ldrh	r3, [r3, #156]
 1545 0118 0133     		adds	r3, r3, #1
 1546 011a 9AB2     		uxth	r2, r3
 1547 011c 304B     		ldr	r3, .L106
 1548 011e A3F89C20 		strh	r2, [r3, #156]	@ movhi
 769:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_MEM;
 1549              		.loc 1 769 0
 1550 0122 4FF0FF33 		mov	r3, #-1
 1551 0126 57E0     		b	.L89
 1552              	.L97:
 770:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 771:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("seg->tcphdr not aligned", ((mem_ptr_t)seg->tcphdr % MEM_ALIGNMENT) == 0);
 772:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 773:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 774:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE,
 775:Libraries/lwip-1.4.0/core/tcp_out.c ****               ("tcp_enqueue_flags: queueing %"U32_F":%"U32_F" (0x%"X16_F")\n",
 776:Libraries/lwip-1.4.0/core/tcp_out.c ****                ntohl(seg->tcphdr->seqno),
 777:Libraries/lwip-1.4.0/core/tcp_out.c ****                ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg),
 778:Libraries/lwip-1.4.0/core/tcp_out.c ****                (u16_t)flags));
 779:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 780:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Now append seg to pcb->unsent queue */
 781:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unsent == NULL) {
 1553              		.loc 1 781 0
 1554 0128 7B68     		ldr	r3, [r7, #4]
 1555 012a 5B6F     		ldr	r3, [r3, #116]
 1556 012c 002B     		cmp	r3, #0
 1557 012e 03D1     		bne	.L98
 782:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->unsent = seg;
 1558              		.loc 1 782 0
 1559 0130 7B68     		ldr	r3, [r7, #4]
 1560 0132 FA68     		ldr	r2, [r7, #12]
 1561 0134 5A67     		str	r2, [r3, #116]
 1562 0136 0DE0     		b	.L99
 1563              	.L98:
 1564              	.LBB12:
 783:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
 784:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct tcp_seg *useg;
 785:Libraries/lwip-1.4.0/core/tcp_out.c ****     for (useg = pcb->unsent; useg->next != NULL; useg = useg->next);
 1565              		.loc 1 785 0
 1566 0138 7B68     		ldr	r3, [r7, #4]
 1567 013a 5B6F     		ldr	r3, [r3, #116]
 1568 013c BB61     		str	r3, [r7, #24]
 1569 013e 02E0     		b	.L100
 1570              	.L101:
 1571              		.loc 1 785 0 is_stmt 0 discriminator 3
 1572 0140 BB69     		ldr	r3, [r7, #24]
 1573 0142 1B68     		ldr	r3, [r3]
 1574 0144 BB61     		str	r3, [r7, #24]
 1575              	.L100:
 1576              		.loc 1 785 0 discriminator 1
 1577 0146 BB69     		ldr	r3, [r7, #24]
 1578 0148 1B68     		ldr	r3, [r3]
 1579 014a 002B     		cmp	r3, #0
 1580 014c F8D1     		bne	.L101
 786:Libraries/lwip-1.4.0/core/tcp_out.c ****     useg->next = seg;
 1581              		.loc 1 786 0 is_stmt 1
 1582 014e BB69     		ldr	r3, [r7, #24]
 1583 0150 FA68     		ldr	r2, [r7, #12]
 1584 0152 1A60     		str	r2, [r3]
 1585              	.L99:
 1586              	.LBE12:
 787:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 788:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
 789:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* The new unsent tail has no space */
 790:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->unsent_oversize = 0;
 1587              		.loc 1 790 0
 1588 0154 7B68     		ldr	r3, [r7, #4]
 1589 0156 0022     		movs	r2, #0
 1590 0158 A3F87220 		strh	r2, [r3, #114]	@ movhi
 791:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 792:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 793:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* SYN and FIN bump the sequence number */
 794:Libraries/lwip-1.4.0/core/tcp_out.c ****   if ((flags & TCP_SYN) || (flags & TCP_FIN)) {
 1591              		.loc 1 794 0
 1592 015c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1593 015e 03F00203 		and	r3, r3, #2
 1594 0162 002B     		cmp	r3, #0
 1595 0164 04D1     		bne	.L102
 1596              		.loc 1 794 0 is_stmt 0 discriminator 1
 1597 0166 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1598 0168 03F00103 		and	r3, r3, #1
 1599 016c 002B     		cmp	r3, #0
 1600 016e 0CD0     		beq	.L103
 1601              	.L102:
 795:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->snd_lbb++;
 1602              		.loc 1 795 0 is_stmt 1
 1603 0170 7B68     		ldr	r3, [r7, #4]
 1604 0172 9B6E     		ldr	r3, [r3, #104]
 1605 0174 5A1C     		adds	r2, r3, #1
 1606 0176 7B68     		ldr	r3, [r7, #4]
 1607 0178 9A66     		str	r2, [r3, #104]
 796:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 797:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->snd_buf--;
 1608              		.loc 1 797 0
 1609 017a 7B68     		ldr	r3, [r7, #4]
 1610 017c B3F86E30 		ldrh	r3, [r3, #110]
 1611 0180 013B     		subs	r3, r3, #1
 1612 0182 9AB2     		uxth	r2, r3
 1613 0184 7B68     		ldr	r3, [r7, #4]
 1614 0186 A3F86E20 		strh	r2, [r3, #110]	@ movhi
 1615              	.L103:
 798:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 799:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (flags & TCP_FIN) {
 1616              		.loc 1 799 0
 1617 018a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1618 018c 03F00103 		and	r3, r3, #1
 1619 0190 002B     		cmp	r3, #0
 1620 0192 08D0     		beq	.L104
 800:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_FIN;
 1621              		.loc 1 800 0
 1622 0194 7B68     		ldr	r3, [r7, #4]
 1623 0196 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1624 019a 43F02003 		orr	r3, r3, #32
 1625 019e DAB2     		uxtb	r2, r3
 1626 01a0 7B68     		ldr	r3, [r7, #4]
 1627 01a2 83F82020 		strb	r2, [r3, #32]
 1628              	.L104:
 801:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 802:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 803:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* update number of segments on the queues */
 804:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->snd_queuelen += pbuf_clen(seg->p);
 1629              		.loc 1 804 0
 1630 01a6 FB68     		ldr	r3, [r7, #12]
 1631 01a8 5B68     		ldr	r3, [r3, #4]
 1632 01aa 1846     		mov	r0, r3
 1633 01ac FFF7FEFF 		bl	pbuf_clen
 1634 01b0 0346     		mov	r3, r0
 1635 01b2 1946     		mov	r1, r3
 1636 01b4 7B68     		ldr	r3, [r7, #4]
 1637 01b6 B3F87020 		ldrh	r2, [r3, #112]
 1638 01ba 8BB2     		uxth	r3, r1
 1639 01bc 1344     		add	r3, r3, r2
 1640 01be 9AB2     		uxth	r2, r3
 1641 01c0 7B68     		ldr	r3, [r7, #4]
 1642 01c2 A3F87020 		strh	r2, [r3, #112]	@ movhi
 805:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 806:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1643              		.loc 1 806 0
 1644 01c6 7B68     		ldr	r3, [r7, #4]
 1645 01c8 B3F87030 		ldrh	r3, [r3, #112]
 1646 01cc 002B     		cmp	r3, #0
 1647 01ce 02D0     		beq	.L105
 807:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
 1648              		.loc 1 807 0
 1649 01d0 7B68     		ldr	r3, [r7, #4]
 1650 01d2 9B6F     		ldr	r3, [r3, #120]
 1651 01d4 002B     		cmp	r3, #0
 1652              	.L105:
 808:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->unacked != NULL || pcb->unsent != NULL);
 809:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 810:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 811:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_OK;
 1653              		.loc 1 811 0
 1654 01d6 0023     		movs	r3, #0
 1655              	.L89:
 812:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 1656              		.loc 1 812 0
 1657 01d8 1846     		mov	r0, r3
 1658 01da 2037     		adds	r7, r7, #32
 1659              		.cfi_def_cfa_offset 8
 1660 01dc BD46     		mov	sp, r7
 1661              		.cfi_def_cfa_register 13
 1662              		@ sp needed
 1663 01de 80BD     		pop	{r7, pc}
 1664              	.L107:
 1665              		.align	2
 1666              	.L106:
 1667 01e0 00000000 		.word	lwip_stats
 1668              		.cfi_endproc
 1669              	.LFE23:
 1671              		.section	.text.tcp_send_empty_ack,"ax",%progbits
 1672              		.align	2
 1673              		.global	tcp_send_empty_ack
 1674              		.thumb
 1675              		.thumb_func
 1677              	tcp_send_empty_ack:
 1678              	.LFB24:
 813:Libraries/lwip-1.4.0/core/tcp_out.c ****  
 814:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 815:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 816:Libraries/lwip-1.4.0/core/tcp_out.c **** /* Build a timestamp option (12 bytes long) at the specified options pointer)
 817:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 818:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb tcp_pcb
 819:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param opts option pointer where to store the timestamp option
 820:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 821:Libraries/lwip-1.4.0/core/tcp_out.c **** static void
 822:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_build_timestamp_option(struct tcp_pcb *pcb, u32_t *opts)
 823:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 824:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Pad with two NOP options to make everything nicely aligned */
 825:Libraries/lwip-1.4.0/core/tcp_out.c ****   opts[0] = PP_HTONL(0x0101080A);
 826:Libraries/lwip-1.4.0/core/tcp_out.c ****   opts[1] = htonl(sys_now());
 827:Libraries/lwip-1.4.0/core/tcp_out.c ****   opts[2] = htonl(pcb->ts_recent);
 828:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 829:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
 830:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 831:Libraries/lwip-1.4.0/core/tcp_out.c **** /** Send an ACK without data.
 832:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 833:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send the ACK
 834:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 835:Libraries/lwip-1.4.0/core/tcp_out.c **** err_t
 836:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_send_empty_ack(struct tcp_pcb *pcb)
 837:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 1679              		.loc 1 837 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 24
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 90B5     		push	{r4, r7, lr}
 1684              		.cfi_def_cfa_offset 12
 1685              		.cfi_offset 4, -12
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 89B0     		sub	sp, sp, #36
 1689              		.cfi_def_cfa_offset 48
 1690 0004 02AF     		add	r7, sp, #8
 1691              		.cfi_def_cfa 7, 40
 1692 0006 7860     		str	r0, [r7, #4]
 838:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
 839:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
 840:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t optlen = 0;
 1693              		.loc 1 840 0
 1694 0008 0023     		movs	r3, #0
 1695 000a FB75     		strb	r3, [r7, #23]
 841:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 842:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 843:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->flags & TF_TIMESTAMP) {
 844:Libraries/lwip-1.4.0/core/tcp_out.c ****     optlen = LWIP_TCP_OPT_LENGTH(TF_SEG_OPTS_TS);
 845:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 846:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
 847:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 848:Libraries/lwip-1.4.0/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, optlen, 0, htonl(pcb->snd_nxt));
 1696              		.loc 1 848 0
 1697 000c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1698 000e 9CB2     		uxth	r4, r3
 1699 0010 7B68     		ldr	r3, [r7, #4]
 1700 0012 9B6D     		ldr	r3, [r3, #88]
 1701 0014 1846     		mov	r0, r3
 1702 0016 FFF7FEFF 		bl	lwip_htonl
 1703 001a 0346     		mov	r3, r0
 1704 001c 0022     		movs	r2, #0
 1705 001e 2146     		mov	r1, r4
 1706 0020 7868     		ldr	r0, [r7, #4]
 1707 0022 FFF7FEFF 		bl	tcp_output_alloc_header
 1708 0026 3861     		str	r0, [r7, #16]
 849:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (p == NULL) {
 1709              		.loc 1 849 0
 1710 0028 3B69     		ldr	r3, [r7, #16]
 1711 002a 002B     		cmp	r3, #0
 1712 002c 02D1     		bne	.L109
 850:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 851:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_BUF;
 1713              		.loc 1 851 0
 1714 002e 6FF00103 		mvn	r3, #1
 1715 0032 2CE0     		b	.L110
 1716              	.L109:
 852:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 853:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 1717              		.loc 1 853 0
 1718 0034 3B69     		ldr	r3, [r7, #16]
 1719 0036 5B68     		ldr	r3, [r3, #4]
 1720 0038 FB60     		str	r3, [r7, #12]
 854:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, 
 855:Libraries/lwip-1.4.0/core/tcp_out.c ****               ("tcp_output: sending ACK for %"U32_F"\n", pcb->rcv_nxt));
 856:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* remove ACK flags from the PCB, as we send an empty ACK now */
 857:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->flags &= ~(TF_ACK_DELAY | TF_ACK_NOW);
 1721              		.loc 1 857 0
 1722 003a 7B68     		ldr	r3, [r7, #4]
 1723 003c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1724 0040 23F00303 		bic	r3, r3, #3
 1725 0044 DAB2     		uxtb	r2, r3
 1726 0046 7B68     		ldr	r3, [r7, #4]
 1727 0048 83F82020 		strb	r2, [r3, #32]
 858:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 859:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* NB. MSS option is only sent on SYNs, so ignore it here */
 860:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 861:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
 862:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 863:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->flags & TF_TIMESTAMP) {
 864:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, (u32_t *)(tcphdr + 1));
 865:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 866:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif 
 867:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 868:Libraries/lwip-1.4.0/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 869:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &(pcb->local_ip), &(pcb->remote_ip),
 1728              		.loc 1 869 0
 1729 004c 7968     		ldr	r1, [r7, #4]
 1730 004e 7B68     		ldr	r3, [r7, #4]
 1731 0050 1A1D     		adds	r2, r3, #4
 1732 0052 3B69     		ldr	r3, [r7, #16]
 1733 0054 1B89     		ldrh	r3, [r3, #8]
 1734 0056 0093     		str	r3, [sp]
 1735 0058 0623     		movs	r3, #6
 1736 005a 3869     		ldr	r0, [r7, #16]
 1737 005c FFF7FEFF 		bl	inet_chksum_pseudo
 1738 0060 0346     		mov	r3, r0
 1739 0062 1A46     		mov	r2, r3
 1740 0064 FB68     		ldr	r3, [r7, #12]
 1741 0066 1A82     		strh	r2, [r3, #16]	@ unaligned
 870:Libraries/lwip-1.4.0/core/tcp_out.c ****         IP_PROTO_TCP, p->tot_len);
 871:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
 872:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
 873:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output_hinted(p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 874:Libraries/lwip-1.4.0/core/tcp_out.c ****       IP_PROTO_TCP, &(pcb->addr_hint));
 875:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
 876:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output(p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 1742              		.loc 1 876 0
 1743 0068 7968     		ldr	r1, [r7, #4]
 1744 006a 7B68     		ldr	r3, [r7, #4]
 1745 006c 181D     		adds	r0, r3, #4
 1746 006e 7B68     		ldr	r3, [r7, #4]
 1747 0070 9C7A     		ldrb	r4, [r3, #10]	@ zero_extendqisi2
 1748 0072 7B68     		ldr	r3, [r7, #4]
 1749 0074 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1750 0076 0622     		movs	r2, #6
 1751 0078 0192     		str	r2, [sp, #4]
 1752 007a 0093     		str	r3, [sp]
 1753 007c 2346     		mov	r3, r4
 1754 007e 0246     		mov	r2, r0
 1755 0080 3869     		ldr	r0, [r7, #16]
 1756 0082 FFF7FEFF 		bl	ip_output
 877:Libraries/lwip-1.4.0/core/tcp_out.c ****       IP_PROTO_TCP);
 878:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
 879:Libraries/lwip-1.4.0/core/tcp_out.c ****   pbuf_free(p);
 1757              		.loc 1 879 0
 1758 0086 3869     		ldr	r0, [r7, #16]
 1759 0088 FFF7FEFF 		bl	pbuf_free
 880:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 881:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_OK;
 1760              		.loc 1 881 0
 1761 008c 0023     		movs	r3, #0
 1762              	.L110:
 882:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 1763              		.loc 1 882 0
 1764 008e 1846     		mov	r0, r3
 1765 0090 1C37     		adds	r7, r7, #28
 1766              		.cfi_def_cfa_offset 12
 1767 0092 BD46     		mov	sp, r7
 1768              		.cfi_def_cfa_register 13
 1769              		@ sp needed
 1770 0094 90BD     		pop	{r4, r7, pc}
 1771              		.cfi_endproc
 1772              	.LFE24:
 1774 0096 00BF     		.section	.text.tcp_output,"ax",%progbits
 1775              		.align	2
 1776              		.global	tcp_output
 1777              		.thumb
 1778              		.thumb_func
 1780              	tcp_output:
 1781              	.LFB25:
 883:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 884:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
 885:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Find out what we can send and send it
 886:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
 887:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send data
 888:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @return ERR_OK if data has been sent or nothing to send
 889:Libraries/lwip-1.4.0/core/tcp_out.c ****  *         another err_t on error
 890:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
 891:Libraries/lwip-1.4.0/core/tcp_out.c **** err_t
 892:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_output(struct tcp_pcb *pcb)
 893:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 1782              		.loc 1 893 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 32
 1785              		@ frame_needed = 1, uses_anonymous_args = 0
 1786 0000 B0B5     		push	{r4, r5, r7, lr}
 1787              		.cfi_def_cfa_offset 16
 1788              		.cfi_offset 4, -16
 1789              		.cfi_offset 5, -12
 1790              		.cfi_offset 7, -8
 1791              		.cfi_offset 14, -4
 1792 0002 88B0     		sub	sp, sp, #32
 1793              		.cfi_def_cfa_offset 48
 1794 0004 00AF     		add	r7, sp, #0
 1795              		.cfi_def_cfa_register 7
 1796 0006 7860     		str	r0, [r7, #4]
 894:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg, *useg;
 895:Libraries/lwip-1.4.0/core/tcp_out.c ****   u32_t wnd, snd_nxt;
 896:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CWND_DEBUG
 897:Libraries/lwip-1.4.0/core/tcp_out.c ****   s16_t i = 0;
 898:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 899:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 900:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* First, check if we are invoked by the TCP input processing
 901:Libraries/lwip-1.4.0/core/tcp_out.c ****      code. If so, we do not output anything. Instead, we rely on the
 902:Libraries/lwip-1.4.0/core/tcp_out.c ****      input processing code to call us when input processing is done
 903:Libraries/lwip-1.4.0/core/tcp_out.c ****      with. */
 904:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (tcp_input_pcb == pcb) {
 1797              		.loc 1 904 0
 1798 0008 994B     		ldr	r3, .L139
 1799 000a 1A68     		ldr	r2, [r3]
 1800 000c 7B68     		ldr	r3, [r7, #4]
 1801 000e 9A42     		cmp	r2, r3
 1802 0010 01D1     		bne	.L112
 905:Libraries/lwip-1.4.0/core/tcp_out.c ****     return ERR_OK;
 1803              		.loc 1 905 0
 1804 0012 0023     		movs	r3, #0
 1805 0014 63E1     		b	.L113
 1806              	.L112:
 906:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 907:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 908:Libraries/lwip-1.4.0/core/tcp_out.c ****   wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
 1807              		.loc 1 908 0
 1808 0016 7B68     		ldr	r3, [r7, #4]
 1809 0018 B3F85220 		ldrh	r2, [r3, #82]
 1810 001c 7B68     		ldr	r3, [r7, #4]
 1811 001e B3F85C30 		ldrh	r3, [r3, #92]
 1812 0022 9342     		cmp	r3, r2
 1813 0024 28BF     		it	cs
 1814 0026 1346     		movcs	r3, r2
 1815 0028 9BB2     		uxth	r3, r3
 1816 002a 3B61     		str	r3, [r7, #16]
 909:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 910:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg = pcb->unsent;
 1817              		.loc 1 910 0
 1818 002c 7B68     		ldr	r3, [r7, #4]
 1819 002e 5B6F     		ldr	r3, [r3, #116]
 1820 0030 FB61     		str	r3, [r7, #28]
 911:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 912:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* If the TF_ACK_NOW flag is set and no data will be sent (either
 913:Libraries/lwip-1.4.0/core/tcp_out.c ****    * because the ->unsent queue is empty or because the window does
 914:Libraries/lwip-1.4.0/core/tcp_out.c ****    * not allow it), construct an empty ACK segment and send it.
 915:Libraries/lwip-1.4.0/core/tcp_out.c ****    *
 916:Libraries/lwip-1.4.0/core/tcp_out.c ****    * If data is to be sent, we will just piggyback the ACK (see below).
 917:Libraries/lwip-1.4.0/core/tcp_out.c ****    */
 918:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->flags & TF_ACK_NOW &&
 1821              		.loc 1 918 0
 1822 0032 7B68     		ldr	r3, [r7, #4]
 1823 0034 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1824 0038 03F00203 		and	r3, r3, #2
 1825 003c 002B     		cmp	r3, #0
 1826 003e 17D0     		beq	.L114
 1827              		.loc 1 918 0 is_stmt 0 discriminator 1
 1828 0040 FB69     		ldr	r3, [r7, #28]
 1829 0042 002B     		cmp	r3, #0
 1830 0044 0FD0     		beq	.L115
 919:Libraries/lwip-1.4.0/core/tcp_out.c ****      (seg == NULL ||
 920:Libraries/lwip-1.4.0/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd)) {
 1831              		.loc 1 920 0 is_stmt 1
 1832 0046 FB69     		ldr	r3, [r7, #28]
 1833 0048 DB68     		ldr	r3, [r3, #12]
 1834 004a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1835 004c 1846     		mov	r0, r3
 1836 004e FFF7FEFF 		bl	lwip_ntohl
 1837 0052 0246     		mov	r2, r0
 1838 0054 7B68     		ldr	r3, [r7, #4]
 1839 0056 DB6C     		ldr	r3, [r3, #76]
 1840 0058 D31A     		subs	r3, r2, r3
 1841 005a FA69     		ldr	r2, [r7, #28]
 1842 005c 1289     		ldrh	r2, [r2, #8]
 1843 005e 1A44     		add	r2, r2, r3
 919:Libraries/lwip-1.4.0/core/tcp_out.c ****      (seg == NULL ||
 1844              		.loc 1 919 0
 1845 0060 3B69     		ldr	r3, [r7, #16]
 1846 0062 9A42     		cmp	r2, r3
 1847 0064 04D9     		bls	.L114
 1848              	.L115:
 921:Libraries/lwip-1.4.0/core/tcp_out.c ****      return tcp_send_empty_ack(pcb);
 1849              		.loc 1 921 0
 1850 0066 7868     		ldr	r0, [r7, #4]
 1851 0068 FFF7FEFF 		bl	tcp_send_empty_ack
 1852 006c 0346     		mov	r3, r0
 1853 006e 36E1     		b	.L113
 1854              	.L114:
 922:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 923:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 924:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* useg should point to last segment on unacked queue */
 925:Libraries/lwip-1.4.0/core/tcp_out.c ****   useg = pcb->unacked;
 1855              		.loc 1 925 0
 1856 0070 7B68     		ldr	r3, [r7, #4]
 1857 0072 9B6F     		ldr	r3, [r3, #120]
 1858 0074 BB61     		str	r3, [r7, #24]
 926:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (useg != NULL) {
 1859              		.loc 1 926 0
 1860 0076 BB69     		ldr	r3, [r7, #24]
 1861 0078 002B     		cmp	r3, #0
 1862 007a 00F0E480 		beq	.L119
 927:Libraries/lwip-1.4.0/core/tcp_out.c ****     for (; useg->next != NULL; useg = useg->next);
 1863              		.loc 1 927 0
 1864 007e 02E0     		b	.L117
 1865              	.L118:
 1866              		.loc 1 927 0 is_stmt 0 discriminator 2
 1867 0080 BB69     		ldr	r3, [r7, #24]
 1868 0082 1B68     		ldr	r3, [r3]
 1869 0084 BB61     		str	r3, [r7, #24]
 1870              	.L117:
 1871              		.loc 1 927 0 discriminator 1
 1872 0086 BB69     		ldr	r3, [r7, #24]
 1873 0088 1B68     		ldr	r3, [r3]
 1874 008a 002B     		cmp	r3, #0
 1875 008c F8D1     		bne	.L118
 928:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 929:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 930:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OUTPUT_DEBUG
 931:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg == NULL) {
 932:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: nothing to send (%p)\n",
 933:Libraries/lwip-1.4.0/core/tcp_out.c ****                                    (void*)pcb->unsent));
 934:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 935:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OUTPUT_DEBUG */
 936:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CWND_DEBUG
 937:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg == NULL) {
 938:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"U16_F
 939:Libraries/lwip-1.4.0/core/tcp_out.c ****                                  ", cwnd %"U16_F", wnd %"U32_F
 940:Libraries/lwip-1.4.0/core/tcp_out.c ****                                  ", seg == NULL, ack %"U32_F"\n",
 941:Libraries/lwip-1.4.0/core/tcp_out.c ****                                  pcb->snd_wnd, pcb->cwnd, wnd, pcb->lastack));
 942:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
 943:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, 
 944:Libraries/lwip-1.4.0/core/tcp_out.c ****                 ("tcp_output: snd_wnd %"U16_F", cwnd %"U16_F", wnd %"U32_F
 945:Libraries/lwip-1.4.0/core/tcp_out.c ****                  ", effwnd %"U32_F", seq %"U32_F", ack %"U32_F"\n",
 946:Libraries/lwip-1.4.0/core/tcp_out.c ****                  pcb->snd_wnd, pcb->cwnd, wnd,
 947:Libraries/lwip-1.4.0/core/tcp_out.c ****                  ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len,
 948:Libraries/lwip-1.4.0/core/tcp_out.c ****                  ntohl(seg->tcphdr->seqno), pcb->lastack));
 949:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 950:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 951:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* data available and window allows it to be sent? */
 952:Libraries/lwip-1.4.0/core/tcp_out.c ****   while (seg != NULL &&
 1876              		.loc 1 952 0 is_stmt 1
 1877 008e DAE0     		b	.L119
 1878              	.L135:
 953:Libraries/lwip-1.4.0/core/tcp_out.c ****          ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 954:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!", 
 1879              		.loc 1 954 0
 1880 0090 FB69     		ldr	r3, [r7, #28]
 1881 0092 DB68     		ldr	r3, [r3, #12]
 1882 0094 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1883 0096 9BB2     		uxth	r3, r3
 1884 0098 1846     		mov	r0, r3
 1885 009a FFF7FEFF 		bl	lwip_ntohs
 955:Libraries/lwip-1.4.0/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 956:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Stop sending if the nagle algorithm would prevent it
 957:Libraries/lwip-1.4.0/core/tcp_out.c ****      * Don't stop:
 958:Libraries/lwip-1.4.0/core/tcp_out.c ****      * - if tcp_write had a memory error before (prevent delayed ACK timeout) or
 959:Libraries/lwip-1.4.0/core/tcp_out.c ****      * - if FIN was already enqueued for this PCB (SYN is always alone in a segment -
 960:Libraries/lwip-1.4.0/core/tcp_out.c ****      *   either seg->next != NULL or pcb->unacked == NULL;
 961:Libraries/lwip-1.4.0/core/tcp_out.c ****      *   RST is no sent using tcp_write/tcp_output.
 962:Libraries/lwip-1.4.0/core/tcp_out.c ****      */
 963:Libraries/lwip-1.4.0/core/tcp_out.c ****     if((tcp_do_output_nagle(pcb) == 0) &&
 1886              		.loc 1 963 0
 1887 009e 7B68     		ldr	r3, [r7, #4]
 1888 00a0 9B6F     		ldr	r3, [r3, #120]
 1889 00a2 002B     		cmp	r3, #0
 1890 00a4 16D0     		beq	.L120
 1891              		.loc 1 963 0 is_stmt 0 discriminator 2
 1892 00a6 7B68     		ldr	r3, [r7, #4]
 1893 00a8 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1894 00ac 03F04403 		and	r3, r3, #68
 1895 00b0 002B     		cmp	r3, #0
 1896 00b2 0FD1     		bne	.L120
 1897              		.loc 1 963 0 discriminator 4
 1898 00b4 7B68     		ldr	r3, [r7, #4]
 1899 00b6 5B6F     		ldr	r3, [r3, #116]
 1900 00b8 002B     		cmp	r3, #0
 1901 00ba 0DD0     		beq	.L121
 1902              		.loc 1 963 0 discriminator 5
 1903 00bc 7B68     		ldr	r3, [r7, #4]
 1904 00be 5B6F     		ldr	r3, [r3, #116]
 1905 00c0 1B68     		ldr	r3, [r3]
 1906 00c2 002B     		cmp	r3, #0
 1907 00c4 06D1     		bne	.L120
 1908              		.loc 1 963 0 discriminator 8
 1909 00c6 7B68     		ldr	r3, [r7, #4]
 1910 00c8 5B6F     		ldr	r3, [r3, #116]
 1911 00ca 1A89     		ldrh	r2, [r3, #8]
 1912 00cc 7B68     		ldr	r3, [r7, #4]
 1913 00ce 1B8F     		ldrh	r3, [r3, #56]
 1914 00d0 9A42     		cmp	r2, r3
 1915 00d2 01D3     		bcc	.L121
 1916              	.L120:
 1917              		.loc 1 963 0 discriminator 9
 1918 00d4 0123     		movs	r3, #1
 1919 00d6 00E0     		b	.L122
 1920              	.L121:
 1921              		.loc 1 963 0 discriminator 10
 1922 00d8 0023     		movs	r3, #0
 1923              	.L122:
 1924              		.loc 1 963 0 discriminator 12
 1925 00da 002B     		cmp	r3, #0
 1926 00dc 07D1     		bne	.L123
 964:Libraries/lwip-1.4.0/core/tcp_out.c ****       ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)){
 1927              		.loc 1 964 0 is_stmt 1 discriminator 13
 1928 00de 7B68     		ldr	r3, [r7, #4]
 1929 00e0 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1930 00e4 03F0A003 		and	r3, r3, #160
 963:Libraries/lwip-1.4.0/core/tcp_out.c ****       ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)){
 1931              		.loc 1 963 0 discriminator 13
 1932 00e8 002B     		cmp	r3, #0
 1933 00ea 00F0C380 		beq	.L138
 1934              	.L123:
 965:Libraries/lwip-1.4.0/core/tcp_out.c ****       break;
 966:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 967:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CWND_DEBUG
 968:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"U16_F", cwnd %"U16_F", wnd %"U32_F", effwnd
 969:Libraries/lwip-1.4.0/core/tcp_out.c ****                             pcb->snd_wnd, pcb->cwnd, wnd,
 970:Libraries/lwip-1.4.0/core/tcp_out.c ****                             ntohl(seg->tcphdr->seqno) + seg->len -
 971:Libraries/lwip-1.4.0/core/tcp_out.c ****                             pcb->lastack,
 972:Libraries/lwip-1.4.0/core/tcp_out.c ****                             ntohl(seg->tcphdr->seqno), pcb->lastack, i));
 973:Libraries/lwip-1.4.0/core/tcp_out.c ****     ++i;
 974:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 975:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 976:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->unsent = seg->next;
 1935              		.loc 1 976 0
 1936 00ee FB69     		ldr	r3, [r7, #28]
 1937 00f0 1A68     		ldr	r2, [r3]
 1938 00f2 7B68     		ldr	r3, [r7, #4]
 1939 00f4 5A67     		str	r2, [r3, #116]
 977:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 978:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 1940              		.loc 1 978 0
 1941 00f6 7B68     		ldr	r3, [r7, #4]
 1942 00f8 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1943 00fa 022B     		cmp	r3, #2
 1944 00fc 15D0     		beq	.L125
 979:Libraries/lwip-1.4.0/core/tcp_out.c ****       TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
 1945              		.loc 1 979 0
 1946 00fe FB69     		ldr	r3, [r7, #28]
 1947 0100 DC68     		ldr	r4, [r3, #12]
 1948 0102 FB69     		ldr	r3, [r7, #28]
 1949 0104 DB68     		ldr	r3, [r3, #12]
 1950 0106 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1951 0108 9DB2     		uxth	r5, r3
 1952 010a 1020     		movs	r0, #16
 1953 010c FFF7FEFF 		bl	lwip_htons
 1954 0110 0346     		mov	r3, r0
 1955 0112 2B43     		orrs	r3, r3, r5
 1956 0114 9BB2     		uxth	r3, r3
 1957 0116 A381     		strh	r3, [r4, #12]	@ unaligned
 980:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->flags &= ~(TF_ACK_DELAY | TF_ACK_NOW);
 1958              		.loc 1 980 0
 1959 0118 7B68     		ldr	r3, [r7, #4]
 1960 011a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1961 011e 23F00303 		bic	r3, r3, #3
 1962 0122 DAB2     		uxtb	r2, r3
 1963 0124 7B68     		ldr	r3, [r7, #4]
 1964 0126 83F82020 		strb	r2, [r3, #32]
 1965              	.L125:
 981:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 982:Libraries/lwip-1.4.0/core/tcp_out.c **** 
 983:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_output_segment(seg, pcb);
 1966              		.loc 1 983 0
 1967 012a 7968     		ldr	r1, [r7, #4]
 1968 012c F869     		ldr	r0, [r7, #28]
 1969 012e FFF7FEFF 		bl	tcp_output_segment
 984:Libraries/lwip-1.4.0/core/tcp_out.c ****     snd_nxt = ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
 1970              		.loc 1 984 0
 1971 0132 FB69     		ldr	r3, [r7, #28]
 1972 0134 DB68     		ldr	r3, [r3, #12]
 1973 0136 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1974 0138 1846     		mov	r0, r3
 1975 013a FFF7FEFF 		bl	lwip_ntohl
 1976 013e 0446     		mov	r4, r0
 1977 0140 FB69     		ldr	r3, [r7, #28]
 1978 0142 1B89     		ldrh	r3, [r3, #8]
 1979 0144 1D46     		mov	r5, r3
 1980 0146 FB69     		ldr	r3, [r7, #28]
 1981 0148 DB68     		ldr	r3, [r3, #12]
 1982 014a 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1983 014c 9BB2     		uxth	r3, r3
 1984 014e 1846     		mov	r0, r3
 1985 0150 FFF7FEFF 		bl	lwip_ntohs
 1986 0154 0346     		mov	r3, r0
 1987 0156 03F00303 		and	r3, r3, #3
 1988 015a 002B     		cmp	r3, #0
 1989 015c 14BF     		ite	ne
 1990 015e 0123     		movne	r3, #1
 1991 0160 0023     		moveq	r3, #0
 1992 0162 DBB2     		uxtb	r3, r3
 1993 0164 2B44     		add	r3, r3, r5
 1994 0166 2344     		add	r3, r3, r4
 1995 0168 FB60     		str	r3, [r7, #12]
 985:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 1996              		.loc 1 985 0
 1997 016a 7B68     		ldr	r3, [r7, #4]
 1998 016c 9A6D     		ldr	r2, [r3, #88]
 1999 016e FB68     		ldr	r3, [r7, #12]
 2000 0170 D31A     		subs	r3, r2, r3
 2001 0172 002B     		cmp	r3, #0
 2002 0174 02DA     		bge	.L126
 986:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 2003              		.loc 1 986 0
 2004 0176 7B68     		ldr	r3, [r7, #4]
 2005 0178 FA68     		ldr	r2, [r7, #12]
 2006 017a 9A65     		str	r2, [r3, #88]
 2007              	.L126:
 987:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 988:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* put segment on unacknowledged list if length > 0 */
 989:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (TCP_TCPLEN(seg) > 0) {
 2008              		.loc 1 989 0
 2009 017c FB69     		ldr	r3, [r7, #28]
 2010 017e 1B89     		ldrh	r3, [r3, #8]
 2011 0180 1C46     		mov	r4, r3
 2012 0182 FB69     		ldr	r3, [r7, #28]
 2013 0184 DB68     		ldr	r3, [r3, #12]
 2014 0186 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2015 0188 9BB2     		uxth	r3, r3
 2016 018a 1846     		mov	r0, r3
 2017 018c FFF7FEFF 		bl	lwip_ntohs
 2018 0190 0346     		mov	r3, r0
 2019 0192 03F00303 		and	r3, r3, #3
 2020 0196 002B     		cmp	r3, #0
 2021 0198 14BF     		ite	ne
 2022 019a 0123     		movne	r3, #1
 2023 019c 0023     		moveq	r3, #0
 2024 019e DBB2     		uxtb	r3, r3
 2025 01a0 2344     		add	r3, r3, r4
 2026 01a2 002B     		cmp	r3, #0
 2027 01a4 49DD     		ble	.L127
 990:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg->next = NULL;
 2028              		.loc 1 990 0
 2029 01a6 FB69     		ldr	r3, [r7, #28]
 2030 01a8 0022     		movs	r2, #0
 2031 01aa 1A60     		str	r2, [r3]
 991:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* unacked list is empty? */
 992:Libraries/lwip-1.4.0/core/tcp_out.c ****       if (pcb->unacked == NULL) {
 2032              		.loc 1 992 0
 2033 01ac 7B68     		ldr	r3, [r7, #4]
 2034 01ae 9B6F     		ldr	r3, [r3, #120]
 2035 01b0 002B     		cmp	r3, #0
 2036 01b2 05D1     		bne	.L128
 993:Libraries/lwip-1.4.0/core/tcp_out.c ****         pcb->unacked = seg;
 2037              		.loc 1 993 0
 2038 01b4 7B68     		ldr	r3, [r7, #4]
 2039 01b6 FA69     		ldr	r2, [r7, #28]
 2040 01b8 9A67     		str	r2, [r3, #120]
 994:Libraries/lwip-1.4.0/core/tcp_out.c ****         useg = seg;
 2041              		.loc 1 994 0
 2042 01ba FB69     		ldr	r3, [r7, #28]
 2043 01bc BB61     		str	r3, [r7, #24]
 2044 01be 3FE0     		b	.L134
 2045              	.L128:
 995:Libraries/lwip-1.4.0/core/tcp_out.c ****       /* unacked list is not empty? */
 996:Libraries/lwip-1.4.0/core/tcp_out.c ****       } else {
 997:Libraries/lwip-1.4.0/core/tcp_out.c ****         /* In the case of fast retransmit, the packet should not go to the tail
 998:Libraries/lwip-1.4.0/core/tcp_out.c ****          * of the unacked queue, but rather somewhere before it. We need to check for
 999:Libraries/lwip-1.4.0/core/tcp_out.c ****          * this case. -STJ Jul 27, 2004 */
1000:Libraries/lwip-1.4.0/core/tcp_out.c ****         if (TCP_SEQ_LT(ntohl(seg->tcphdr->seqno), ntohl(useg->tcphdr->seqno))) {
 2046              		.loc 1 1000 0
 2047 01c0 FB69     		ldr	r3, [r7, #28]
 2048 01c2 DB68     		ldr	r3, [r3, #12]
 2049 01c4 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2050 01c6 1846     		mov	r0, r3
 2051 01c8 FFF7FEFF 		bl	lwip_ntohl
 2052 01cc 0446     		mov	r4, r0
 2053 01ce BB69     		ldr	r3, [r7, #24]
 2054 01d0 DB68     		ldr	r3, [r3, #12]
 2055 01d2 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2056 01d4 1846     		mov	r0, r3
 2057 01d6 FFF7FEFF 		bl	lwip_ntohl
 2058 01da 0346     		mov	r3, r0
 2059 01dc E31A     		subs	r3, r4, r3
 2060 01de 002B     		cmp	r3, #0
 2061 01e0 24DA     		bge	.L130
 2062              	.LBB13:
1001:Libraries/lwip-1.4.0/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
1002:Libraries/lwip-1.4.0/core/tcp_out.c ****           struct tcp_seg **cur_seg = &(pcb->unacked);
 2063              		.loc 1 1002 0
 2064 01e2 7B68     		ldr	r3, [r7, #4]
 2065 01e4 7833     		adds	r3, r3, #120
 2066 01e6 7B61     		str	r3, [r7, #20]
1003:Libraries/lwip-1.4.0/core/tcp_out.c ****           while (*cur_seg &&
 2067              		.loc 1 1003 0
 2068 01e8 02E0     		b	.L131
 2069              	.L133:
1004:Libraries/lwip-1.4.0/core/tcp_out.c ****             TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
1005:Libraries/lwip-1.4.0/core/tcp_out.c ****               cur_seg = &((*cur_seg)->next );
 2070              		.loc 1 1005 0
 2071 01ea 7B69     		ldr	r3, [r7, #20]
 2072 01ec 1B68     		ldr	r3, [r3]
 2073 01ee 7B61     		str	r3, [r7, #20]
 2074              	.L131:
1003:Libraries/lwip-1.4.0/core/tcp_out.c ****           while (*cur_seg &&
 2075              		.loc 1 1003 0
 2076 01f0 7B69     		ldr	r3, [r7, #20]
 2077 01f2 1B68     		ldr	r3, [r3]
 2078 01f4 002B     		cmp	r3, #0
 2079 01f6 11D0     		beq	.L132
1004:Libraries/lwip-1.4.0/core/tcp_out.c ****             TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 2080              		.loc 1 1004 0 discriminator 1
 2081 01f8 7B69     		ldr	r3, [r7, #20]
 2082 01fa 1B68     		ldr	r3, [r3]
 2083 01fc DB68     		ldr	r3, [r3, #12]
 2084 01fe 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2085 0200 1846     		mov	r0, r3
 2086 0202 FFF7FEFF 		bl	lwip_ntohl
 2087 0206 0446     		mov	r4, r0
 2088 0208 FB69     		ldr	r3, [r7, #28]
 2089 020a DB68     		ldr	r3, [r3, #12]
 2090 020c 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2091 020e 1846     		mov	r0, r3
 2092 0210 FFF7FEFF 		bl	lwip_ntohl
 2093 0214 0346     		mov	r3, r0
 2094 0216 E31A     		subs	r3, r4, r3
1003:Libraries/lwip-1.4.0/core/tcp_out.c ****           while (*cur_seg &&
 2095              		.loc 1 1003 0 discriminator 1
 2096 0218 002B     		cmp	r3, #0
 2097 021a E6DB     		blt	.L133
 2098              	.L132:
1006:Libraries/lwip-1.4.0/core/tcp_out.c ****           }
1007:Libraries/lwip-1.4.0/core/tcp_out.c ****           seg->next = (*cur_seg);
 2099              		.loc 1 1007 0
 2100 021c 7B69     		ldr	r3, [r7, #20]
 2101 021e 1A68     		ldr	r2, [r3]
 2102 0220 FB69     		ldr	r3, [r7, #28]
 2103 0222 1A60     		str	r2, [r3]
1008:Libraries/lwip-1.4.0/core/tcp_out.c ****           (*cur_seg) = seg;
 2104              		.loc 1 1008 0
 2105 0224 7B69     		ldr	r3, [r7, #20]
 2106 0226 FA69     		ldr	r2, [r7, #28]
 2107 0228 1A60     		str	r2, [r3]
 2108              	.LBE13:
 2109 022a 09E0     		b	.L134
 2110              	.L130:
1009:Libraries/lwip-1.4.0/core/tcp_out.c ****         } else {
1010:Libraries/lwip-1.4.0/core/tcp_out.c ****           /* add segment to tail of unacked list */
1011:Libraries/lwip-1.4.0/core/tcp_out.c ****           useg->next = seg;
 2111              		.loc 1 1011 0
 2112 022c BB69     		ldr	r3, [r7, #24]
 2113 022e FA69     		ldr	r2, [r7, #28]
 2114 0230 1A60     		str	r2, [r3]
1012:Libraries/lwip-1.4.0/core/tcp_out.c ****           useg = useg->next;
 2115              		.loc 1 1012 0
 2116 0232 BB69     		ldr	r3, [r7, #24]
 2117 0234 1B68     		ldr	r3, [r3]
 2118 0236 BB61     		str	r3, [r7, #24]
 2119 0238 02E0     		b	.L134
 2120              	.L127:
1013:Libraries/lwip-1.4.0/core/tcp_out.c ****         }
1014:Libraries/lwip-1.4.0/core/tcp_out.c ****       }
1015:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* do not queue empty segments on the unacked list */
1016:Libraries/lwip-1.4.0/core/tcp_out.c ****     } else {
1017:Libraries/lwip-1.4.0/core/tcp_out.c ****       tcp_seg_free(seg);
 2121              		.loc 1 1017 0
 2122 023a F869     		ldr	r0, [r7, #28]
 2123 023c FFF7FEFF 		bl	tcp_seg_free
 2124              	.L134:
1018:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1019:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg = pcb->unsent;
 2125              		.loc 1 1019 0
 2126 0240 7B68     		ldr	r3, [r7, #4]
 2127 0242 5B6F     		ldr	r3, [r3, #116]
 2128 0244 FB61     		str	r3, [r7, #28]
 2129              	.L119:
 952:Libraries/lwip-1.4.0/core/tcp_out.c ****          ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 2130              		.loc 1 952 0
 2131 0246 FB69     		ldr	r3, [r7, #28]
 2132 0248 002B     		cmp	r3, #0
 2133 024a 14D0     		beq	.L124
 953:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!", 
 2134              		.loc 1 953 0 discriminator 1
 2135 024c FB69     		ldr	r3, [r7, #28]
 2136 024e DB68     		ldr	r3, [r3, #12]
 2137 0250 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2138 0252 1846     		mov	r0, r3
 2139 0254 FFF7FEFF 		bl	lwip_ntohl
 2140 0258 0246     		mov	r2, r0
 2141 025a 7B68     		ldr	r3, [r7, #4]
 2142 025c DB6C     		ldr	r3, [r3, #76]
 2143 025e D31A     		subs	r3, r2, r3
 2144 0260 FA69     		ldr	r2, [r7, #28]
 2145 0262 1289     		ldrh	r2, [r2, #8]
 2146 0264 1A44     		add	r2, r2, r3
 952:Libraries/lwip-1.4.0/core/tcp_out.c ****          ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 2147              		.loc 1 952 0 discriminator 1
 2148 0266 3B69     		ldr	r3, [r7, #16]
 2149 0268 9A42     		cmp	r2, r3
 2150 026a 7FF611AF 		bls	.L135
 2151 026e 02E0     		b	.L124
 2152              	.L140:
 2153              		.align	2
 2154              	.L139:
 2155 0270 00000000 		.word	tcp_input_pcb
 2156              	.L138:
 965:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 2157              		.loc 1 965 0
 2158 0274 00BF     		nop
 2159              	.L124:
1020:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1021:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_OVERSIZE
1022:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unsent == NULL) {
 2160              		.loc 1 1022 0
 2161 0276 7B68     		ldr	r3, [r7, #4]
 2162 0278 5B6F     		ldr	r3, [r3, #116]
 2163 027a 002B     		cmp	r3, #0
 2164 027c 03D1     		bne	.L136
1023:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
1024:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->unsent_oversize = 0;
 2165              		.loc 1 1024 0
 2166 027e 7B68     		ldr	r3, [r7, #4]
 2167 0280 0022     		movs	r2, #0
 2168 0282 A3F87220 		strh	r2, [r3, #114]	@ movhi
 2169              	.L136:
1025:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1026:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
1027:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1028:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg != NULL && pcb->persist_backoff == 0 && 
 2170              		.loc 1 1028 0
 2171 0286 FB69     		ldr	r3, [r7, #28]
 2172 0288 002B     		cmp	r3, #0
 2173 028a 1ED0     		beq	.L137
 2174              		.loc 1 1028 0 is_stmt 0 discriminator 1
 2175 028c 7B68     		ldr	r3, [r7, #4]
 2176 028e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 2177 0292 002B     		cmp	r3, #0
 2178 0294 19D1     		bne	.L137
1029:Libraries/lwip-1.4.0/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > pcb->snd_wnd) {
 2179              		.loc 1 1029 0 is_stmt 1 discriminator 2
 2180 0296 FB69     		ldr	r3, [r7, #28]
 2181 0298 DB68     		ldr	r3, [r3, #12]
 2182 029a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2183 029c 1846     		mov	r0, r3
 2184 029e FFF7FEFF 		bl	lwip_ntohl
 2185 02a2 0246     		mov	r2, r0
 2186 02a4 7B68     		ldr	r3, [r7, #4]
 2187 02a6 DB6C     		ldr	r3, [r3, #76]
 2188 02a8 D31A     		subs	r3, r2, r3
 2189 02aa FA69     		ldr	r2, [r7, #28]
 2190 02ac 1289     		ldrh	r2, [r2, #8]
 2191 02ae 1344     		add	r3, r3, r2
 2192 02b0 7A68     		ldr	r2, [r7, #4]
 2193 02b2 B2F85C20 		ldrh	r2, [r2, #92]
1028:Libraries/lwip-1.4.0/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > pcb->snd_wnd) {
 2194              		.loc 1 1028 0 discriminator 2
 2195 02b6 9342     		cmp	r3, r2
 2196 02b8 07D9     		bls	.L137
1030:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* prepare for persist timer */
1031:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->persist_cnt = 0;
 2197              		.loc 1 1031 0
 2198 02ba 7B68     		ldr	r3, [r7, #4]
 2199 02bc 0022     		movs	r2, #0
 2200 02be C3F89C20 		str	r2, [r3, #156]
1032:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->persist_backoff = 1;
 2201              		.loc 1 1032 0
 2202 02c2 7B68     		ldr	r3, [r7, #4]
 2203 02c4 0122     		movs	r2, #1
 2204 02c6 83F8A020 		strb	r2, [r3, #160]
 2205              	.L137:
1033:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1034:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1035:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->flags &= ~TF_NAGLEMEMERR;
 2206              		.loc 1 1035 0
 2207 02ca 7B68     		ldr	r3, [r7, #4]
 2208 02cc 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2209 02d0 03F07F03 		and	r3, r3, #127
 2210 02d4 DAB2     		uxtb	r2, r3
 2211 02d6 7B68     		ldr	r3, [r7, #4]
 2212 02d8 83F82020 		strb	r2, [r3, #32]
1036:Libraries/lwip-1.4.0/core/tcp_out.c ****   return ERR_OK;
 2213              		.loc 1 1036 0
 2214 02dc 0023     		movs	r3, #0
 2215              	.L113:
1037:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2216              		.loc 1 1037 0
 2217 02de 1846     		mov	r0, r3
 2218 02e0 2037     		adds	r7, r7, #32
 2219              		.cfi_def_cfa_offset 16
 2220 02e2 BD46     		mov	sp, r7
 2221              		.cfi_def_cfa_register 13
 2222              		@ sp needed
 2223 02e4 B0BD     		pop	{r4, r5, r7, pc}
 2224              		.cfi_endproc
 2225              	.LFE25:
 2227 02e6 00BF     		.section	.text.tcp_output_segment,"ax",%progbits
 2228              		.align	2
 2229              		.thumb
 2230              		.thumb_func
 2232              	tcp_output_segment:
 2233              	.LFB26:
1038:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1039:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1040:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_output() to actually send a TCP segment over IP.
1041:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1042:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param seg the tcp_seg to send
1043:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for the TCP connection used to send the segment
1044:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1045:Libraries/lwip-1.4.0/core/tcp_out.c **** static void
1046:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)
1047:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2234              		.loc 1 1047 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 24
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0000 B0B5     		push	{r4, r5, r7, lr}
 2239              		.cfi_def_cfa_offset 16
 2240              		.cfi_offset 4, -16
 2241              		.cfi_offset 5, -12
 2242              		.cfi_offset 7, -8
 2243              		.cfi_offset 14, -4
 2244 0002 88B0     		sub	sp, sp, #32
 2245              		.cfi_def_cfa_offset 48
 2246 0004 02AF     		add	r7, sp, #8
 2247              		.cfi_def_cfa 7, 40
 2248 0006 7860     		str	r0, [r7, #4]
 2249 0008 3960     		str	r1, [r7]
1048:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t len;
1049:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct netif *netif;
1050:Libraries/lwip-1.4.0/core/tcp_out.c ****   u32_t *opts;
1051:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1052:Libraries/lwip-1.4.0/core/tcp_out.c ****   /** @bug Exclude retransmitted segments from this count. */
1053:Libraries/lwip-1.4.0/core/tcp_out.c ****   snmp_inc_tcpoutsegs();
1054:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1055:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* The TCP header has already been constructed, but the ackno and
1056:Libraries/lwip-1.4.0/core/tcp_out.c ****    wnd fields remain. */
1057:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->ackno = htonl(pcb->rcv_nxt);
 2250              		.loc 1 1057 0
 2251 000a 7B68     		ldr	r3, [r7, #4]
 2252 000c DC68     		ldr	r4, [r3, #12]
 2253 000e 3B68     		ldr	r3, [r7]
 2254 0010 5B6A     		ldr	r3, [r3, #36]
 2255 0012 1846     		mov	r0, r3
 2256 0014 FFF7FEFF 		bl	lwip_htonl
 2257 0018 0346     		mov	r3, r0
 2258 001a A360     		str	r3, [r4, #8]	@ unaligned
1058:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1059:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* advertise our receive window size in this TCP segment */
1060:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->wnd = htons(pcb->rcv_ann_wnd);
 2259              		.loc 1 1060 0
 2260 001c 7B68     		ldr	r3, [r7, #4]
 2261 001e DC68     		ldr	r4, [r3, #12]
 2262 0020 3B68     		ldr	r3, [r7]
 2263 0022 5B8D     		ldrh	r3, [r3, #42]
 2264 0024 1846     		mov	r0, r3
 2265 0026 FFF7FEFF 		bl	lwip_htons
 2266 002a 0346     		mov	r3, r0
 2267 002c E381     		strh	r3, [r4, #14]	@ unaligned
1061:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1062:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
 2268              		.loc 1 1062 0
 2269 002e 3B68     		ldr	r3, [r7]
 2270 0030 5B6A     		ldr	r3, [r3, #36]
 2271 0032 3A68     		ldr	r2, [r7]
 2272 0034 528D     		ldrh	r2, [r2, #42]
 2273 0036 1A44     		add	r2, r2, r3
 2274 0038 3B68     		ldr	r3, [r7]
 2275 003a DA62     		str	r2, [r3, #44]
1063:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1064:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Add any requested options.  NB MSS option is only set on SYN
1065:Libraries/lwip-1.4.0/core/tcp_out.c ****      packets, so ignore it here */
1066:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("seg->tcphdr not aligned", ((mem_ptr_t)seg->tcphdr % MEM_ALIGNMENT) == 0);
1067:Libraries/lwip-1.4.0/core/tcp_out.c ****   opts = (u32_t *)(void *)(seg->tcphdr + 1);
 2276              		.loc 1 1067 0
 2277 003c 7B68     		ldr	r3, [r7, #4]
 2278 003e DB68     		ldr	r3, [r3, #12]
 2279 0040 1433     		adds	r3, r3, #20
 2280 0042 7B61     		str	r3, [r7, #20]
1068:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_MSS) {
 2281              		.loc 1 1068 0
 2282 0044 7B68     		ldr	r3, [r7, #4]
 2283 0046 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2284 0048 03F00103 		and	r3, r3, #1
 2285 004c 002B     		cmp	r3, #0
 2286 004e 05D0     		beq	.L142
1069:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_BUILD_MSS_OPTION(*opts);
 2287              		.loc 1 1069 0
 2288 0050 7B69     		ldr	r3, [r7, #20]
 2289 0052 424A     		ldr	r2, .L150
 2290 0054 1A60     		str	r2, [r3]
1070:Libraries/lwip-1.4.0/core/tcp_out.c ****     opts += 1;
 2291              		.loc 1 1070 0
 2292 0056 7B69     		ldr	r3, [r7, #20]
 2293 0058 0433     		adds	r3, r3, #4
 2294 005a 7B61     		str	r3, [r7, #20]
 2295              	.L142:
1071:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1072:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
1073:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
1074:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1075:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_TS) {
1076:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, opts);
1077:Libraries/lwip-1.4.0/core/tcp_out.c ****     opts += 3;
1078:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1079:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
1080:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1081:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Set retransmission timer running if it is not currently enabled 
1082:Libraries/lwip-1.4.0/core/tcp_out.c ****      This must be set before checking the route. */
1083:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->rtime == -1) {
 2296              		.loc 1 1083 0
 2297 005c 3B68     		ldr	r3, [r7]
 2298 005e B3F93630 		ldrsh	r3, [r3, #54]
 2299 0062 B3F1FF3F 		cmp	r3, #-1
 2300 0066 02D1     		bne	.L143
1084:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->rtime = 0;
 2301              		.loc 1 1084 0
 2302 0068 3B68     		ldr	r3, [r7]
 2303 006a 0022     		movs	r2, #0
 2304 006c DA86     		strh	r2, [r3, #54]	@ movhi
 2305              	.L143:
1085:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1086:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1087:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* If we don't have a local IP address, we get one by
1088:Libraries/lwip-1.4.0/core/tcp_out.c ****      calling ip_route(). */
1089:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (ip_addr_isany(&(pcb->local_ip))) {
 2306              		.loc 1 1089 0
 2307 006e 3B68     		ldr	r3, [r7]
 2308 0070 002B     		cmp	r3, #0
 2309 0072 03D0     		beq	.L144
 2310              		.loc 1 1089 0 is_stmt 0 discriminator 1
 2311 0074 3B68     		ldr	r3, [r7]
 2312 0076 1B68     		ldr	r3, [r3]
 2313 0078 002B     		cmp	r3, #0
 2314 007a 0CD1     		bne	.L145
 2315              	.L144:
1090:Libraries/lwip-1.4.0/core/tcp_out.c ****     netif = ip_route(&(pcb->remote_ip));
 2316              		.loc 1 1090 0 is_stmt 1
 2317 007c 3B68     		ldr	r3, [r7]
 2318 007e 0433     		adds	r3, r3, #4
 2319 0080 1846     		mov	r0, r3
 2320 0082 FFF7FEFF 		bl	ip_route
 2321 0086 3861     		str	r0, [r7, #16]
1091:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (netif == NULL) {
 2322              		.loc 1 1091 0
 2323 0088 3B69     		ldr	r3, [r7, #16]
 2324 008a 002B     		cmp	r3, #0
 2325 008c 62D0     		beq	.L149
1092:Libraries/lwip-1.4.0/core/tcp_out.c ****       return;
1093:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1094:Libraries/lwip-1.4.0/core/tcp_out.c ****     ip_addr_copy(pcb->local_ip, netif->ip_addr);
 2326              		.loc 1 1094 0
 2327 008e 3B69     		ldr	r3, [r7, #16]
 2328 0090 5A68     		ldr	r2, [r3, #4]
 2329 0092 3B68     		ldr	r3, [r7]
 2330 0094 1A60     		str	r2, [r3]
 2331              	.L145:
1095:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1096:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1097:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->rttest == 0) {
 2332              		.loc 1 1097 0
 2333 0096 3B68     		ldr	r3, [r7]
 2334 0098 DB6B     		ldr	r3, [r3, #60]
 2335 009a 002B     		cmp	r3, #0
 2336 009c 0CD1     		bne	.L148
1098:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
 2337              		.loc 1 1098 0
 2338 009e 304B     		ldr	r3, .L150+4
 2339 00a0 1A68     		ldr	r2, [r3]
 2340 00a2 3B68     		ldr	r3, [r7]
 2341 00a4 DA63     		str	r2, [r3, #60]
1099:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->rtseq = ntohl(seg->tcphdr->seqno);
 2342              		.loc 1 1099 0
 2343 00a6 7B68     		ldr	r3, [r7, #4]
 2344 00a8 DB68     		ldr	r3, [r3, #12]
 2345 00aa 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2346 00ac 1846     		mov	r0, r3
 2347 00ae FFF7FEFF 		bl	lwip_ntohl
 2348 00b2 0246     		mov	r2, r0
 2349 00b4 3B68     		ldr	r3, [r7]
 2350 00b6 1A64     		str	r2, [r3, #64]
 2351              	.L148:
1100:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1101:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_output_segment: rtseq %"U32_F"\n", pcb->rtseq));
1102:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1103:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output_segment: %"U32_F":%"U32_F"\n",
1104:Libraries/lwip-1.4.0/core/tcp_out.c ****           htonl(seg->tcphdr->seqno), htonl(seg->tcphdr->seqno) +
1105:Libraries/lwip-1.4.0/core/tcp_out.c ****           seg->len));
1106:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1107:Libraries/lwip-1.4.0/core/tcp_out.c ****   len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
 2352              		.loc 1 1107 0
 2353 00b8 7B68     		ldr	r3, [r7, #4]
 2354 00ba DB68     		ldr	r3, [r3, #12]
 2355 00bc 1A46     		mov	r2, r3
 2356 00be 7B68     		ldr	r3, [r7, #4]
 2357 00c0 5B68     		ldr	r3, [r3, #4]
 2358 00c2 5B68     		ldr	r3, [r3, #4]
 2359 00c4 D31A     		subs	r3, r2, r3
 2360 00c6 FB81     		strh	r3, [r7, #14]	@ movhi
1108:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1109:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->p->len -= len;
 2361              		.loc 1 1109 0
 2362 00c8 7B68     		ldr	r3, [r7, #4]
 2363 00ca 5B68     		ldr	r3, [r3, #4]
 2364 00cc 7A68     		ldr	r2, [r7, #4]
 2365 00ce 5268     		ldr	r2, [r2, #4]
 2366 00d0 5189     		ldrh	r1, [r2, #10]
 2367 00d2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2368 00d4 8A1A     		subs	r2, r1, r2
 2369 00d6 92B2     		uxth	r2, r2
 2370 00d8 5A81     		strh	r2, [r3, #10]	@ movhi
1110:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->p->tot_len -= len;
 2371              		.loc 1 1110 0
 2372 00da 7B68     		ldr	r3, [r7, #4]
 2373 00dc 5B68     		ldr	r3, [r3, #4]
 2374 00de 7A68     		ldr	r2, [r7, #4]
 2375 00e0 5268     		ldr	r2, [r2, #4]
 2376 00e2 1189     		ldrh	r1, [r2, #8]
 2377 00e4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2378 00e6 8A1A     		subs	r2, r1, r2
 2379 00e8 92B2     		uxth	r2, r2
 2380 00ea 1A81     		strh	r2, [r3, #8]	@ movhi
1111:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1112:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->p->payload = seg->tcphdr;
 2381              		.loc 1 1112 0
 2382 00ec 7B68     		ldr	r3, [r7, #4]
 2383 00ee 5B68     		ldr	r3, [r3, #4]
 2384 00f0 7A68     		ldr	r2, [r7, #4]
 2385 00f2 D268     		ldr	r2, [r2, #12]
 2386 00f4 5A60     		str	r2, [r3, #4]
1113:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1114:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->chksum = 0;
 2387              		.loc 1 1114 0
 2388 00f6 7B68     		ldr	r3, [r7, #4]
 2389 00f8 DB68     		ldr	r3, [r3, #12]
 2390 00fa 0022     		movs	r2, #0
 2391 00fc 1A74     		strb	r2, [r3, #16]
 2392 00fe 0022     		movs	r2, #0
 2393 0100 5A74     		strb	r2, [r3, #17]
1115:Libraries/lwip-1.4.0/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1116:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
1117:Libraries/lwip-1.4.0/core/tcp_out.c ****   {
1118:Libraries/lwip-1.4.0/core/tcp_out.c ****     u32_t acc;
1119:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY_SANITY_CHECK
1120:Libraries/lwip-1.4.0/core/tcp_out.c ****     u16_t chksum_slow = inet_chksum_pseudo(seg->p, &(pcb->local_ip),
1121:Libraries/lwip-1.4.0/core/tcp_out.c ****            &(pcb->remote_ip),
1122:Libraries/lwip-1.4.0/core/tcp_out.c ****            IP_PROTO_TCP, seg->p->tot_len);
1123:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY_SANITY_CHECK */
1124:Libraries/lwip-1.4.0/core/tcp_out.c ****     if ((seg->flags & TF_SEG_DATA_CHECKSUMMED) == 0) {
1125:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_ASSERT("data included but not checksummed",
1126:Libraries/lwip-1.4.0/core/tcp_out.c ****         seg->p->tot_len == (TCPH_HDRLEN(seg->tcphdr) * 4));
1127:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1128:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1129:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* rebuild TCP header checksum (TCP header changes for retransmissions!) */
1130:Libraries/lwip-1.4.0/core/tcp_out.c ****     acc = inet_chksum_pseudo_partial(seg->p, &(pcb->local_ip),
1131:Libraries/lwip-1.4.0/core/tcp_out.c ****              &(pcb->remote_ip),
1132:Libraries/lwip-1.4.0/core/tcp_out.c ****              IP_PROTO_TCP, seg->p->tot_len, TCPH_HDRLEN(seg->tcphdr) * 4);
1133:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* add payload checksum */
1134:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (seg->chksum_swapped) {
1135:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg->chksum = SWAP_BYTES_IN_WORD(seg->chksum);
1136:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg->chksum_swapped = 0;
1137:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1138:Libraries/lwip-1.4.0/core/tcp_out.c ****     acc += (u16_t)~(seg->chksum);
1139:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg->tcphdr->chksum = FOLD_U32T(acc);
1140:Libraries/lwip-1.4.0/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY_SANITY_CHECK
1141:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (chksum_slow != seg->tcphdr->chksum) {
1142:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_DEBUGF(TCP_DEBUG | LWIP_DBG_LEVEL_WARNING,
1143:Libraries/lwip-1.4.0/core/tcp_out.c ****                   ("tcp_output_segment: calculated checksum is %"X16_F" instead of %"X16_F"\n",
1144:Libraries/lwip-1.4.0/core/tcp_out.c ****                   seg->tcphdr->chksum, chksum_slow));
1145:Libraries/lwip-1.4.0/core/tcp_out.c ****       seg->tcphdr->chksum = chksum_slow;
1146:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1147:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY_SANITY_CHECK */
1148:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1149:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* TCP_CHECKSUM_ON_COPY */
1150:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->tcphdr->chksum = inet_chksum_pseudo(seg->p, &(pcb->local_ip),
 2394              		.loc 1 1150 0
 2395 0102 7B68     		ldr	r3, [r7, #4]
 2396 0104 DC68     		ldr	r4, [r3, #12]
 2397 0106 7B68     		ldr	r3, [r7, #4]
 2398 0108 5868     		ldr	r0, [r3, #4]
 2399 010a 3968     		ldr	r1, [r7]
 2400 010c 3B68     		ldr	r3, [r7]
 2401 010e 1A1D     		adds	r2, r3, #4
1151:Libraries/lwip-1.4.0/core/tcp_out.c ****          &(pcb->remote_ip),
1152:Libraries/lwip-1.4.0/core/tcp_out.c ****          IP_PROTO_TCP, seg->p->tot_len);
 2402              		.loc 1 1152 0
 2403 0110 7B68     		ldr	r3, [r7, #4]
 2404 0112 5B68     		ldr	r3, [r3, #4]
1150:Libraries/lwip-1.4.0/core/tcp_out.c ****          &(pcb->remote_ip),
 2405              		.loc 1 1150 0
 2406 0114 1B89     		ldrh	r3, [r3, #8]
 2407 0116 0093     		str	r3, [sp]
 2408 0118 0623     		movs	r3, #6
 2409 011a FFF7FEFF 		bl	inet_chksum_pseudo
 2410 011e 0346     		mov	r3, r0
 2411 0120 2382     		strh	r3, [r4, #16]	@ unaligned
1153:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
1154:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* CHECKSUM_GEN_TCP */
1155:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 2412              		.loc 1 1155 0
 2413 0122 104B     		ldr	r3, .L150+8
 2414 0124 B3F89030 		ldrh	r3, [r3, #144]
 2415 0128 0133     		adds	r3, r3, #1
 2416 012a 9AB2     		uxth	r2, r3
 2417 012c 0D4B     		ldr	r3, .L150+8
 2418 012e A3F89020 		strh	r2, [r3, #144]	@ movhi
1156:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1157:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
1158:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output_hinted(seg->p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
1159:Libraries/lwip-1.4.0/core/tcp_out.c ****       IP_PROTO_TCP, &(pcb->addr_hint));
1160:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
1161:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output(seg->p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 2419              		.loc 1 1161 0
 2420 0132 7B68     		ldr	r3, [r7, #4]
 2421 0134 5868     		ldr	r0, [r3, #4]
 2422 0136 3968     		ldr	r1, [r7]
 2423 0138 3B68     		ldr	r3, [r7]
 2424 013a 1C1D     		adds	r4, r3, #4
 2425 013c 3B68     		ldr	r3, [r7]
 2426 013e 9D7A     		ldrb	r5, [r3, #10]	@ zero_extendqisi2
 2427 0140 3B68     		ldr	r3, [r7]
 2428 0142 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2429 0144 0622     		movs	r2, #6
 2430 0146 0192     		str	r2, [sp, #4]
 2431 0148 0093     		str	r3, [sp]
 2432 014a 2B46     		mov	r3, r5
 2433 014c 2246     		mov	r2, r4
 2434 014e FFF7FEFF 		bl	ip_output
 2435 0152 00E0     		b	.L141
 2436              	.L149:
1092:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
 2437              		.loc 1 1092 0
 2438 0154 00BF     		nop
 2439              	.L141:
1162:Libraries/lwip-1.4.0/core/tcp_out.c ****       IP_PROTO_TCP);
1163:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
1164:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2440              		.loc 1 1164 0
 2441 0156 1837     		adds	r7, r7, #24
 2442              		.cfi_def_cfa_offset 16
 2443 0158 BD46     		mov	sp, r7
 2444              		.cfi_def_cfa_register 13
 2445              		@ sp needed
 2446 015a B0BD     		pop	{r4, r5, r7, pc}
 2447              	.L151:
 2448              		.align	2
 2449              	.L150:
 2450 015c 02040218 		.word	402785282
 2451 0160 00000000 		.word	tcp_ticks
 2452 0164 00000000 		.word	lwip_stats
 2453              		.cfi_endproc
 2454              	.LFE26:
 2456              		.section	.text.tcp_rst,"ax",%progbits
 2457              		.align	2
 2458              		.global	tcp_rst
 2459              		.thumb
 2460              		.thumb_func
 2462              	tcp_rst:
 2463              	.LFB27:
1165:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1166:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1167:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Send a TCP RESET packet (empty segment with RST flag set) either to
1168:Libraries/lwip-1.4.0/core/tcp_out.c ****  * abort a connection or to show that there is no matching local connection
1169:Libraries/lwip-1.4.0/core/tcp_out.c ****  * for a received segment.
1170:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1171:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_abort() (to abort a local connection), tcp_input() (if no
1172:Libraries/lwip-1.4.0/core/tcp_out.c ****  * matching local pcb was found), tcp_listen_input() (if incoming segment
1173:Libraries/lwip-1.4.0/core/tcp_out.c ****  * has ACK flag set) and tcp_process() (received segment in the wrong state)
1174:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1175:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Since a RST segment is in most cases not sent for an active connection,
1176:Libraries/lwip-1.4.0/core/tcp_out.c ****  * tcp_rst() has a number of arguments that are taken from a tcp_pcb for
1177:Libraries/lwip-1.4.0/core/tcp_out.c ****  * most other segment output functions.
1178:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1179:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param seqno the sequence number to use for the outgoing segment
1180:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param ackno the acknowledge number to use for the outgoing segment
1181:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param local_ip the local IP address to send the segment from
1182:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param remote_ip the remote IP address to send the segment to
1183:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param local_port the local TCP port to send the segment from
1184:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param remote_port the remote TCP port to send the segment to
1185:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1186:Libraries/lwip-1.4.0/core/tcp_out.c **** void
1187:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_rst(u32_t seqno, u32_t ackno,
1188:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_addr_t *local_ip, ip_addr_t *remote_ip,
1189:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t local_port, u16_t remote_port)
1190:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2464              		.loc 1 1190 0
 2465              		.cfi_startproc
 2466              		@ args = 8, pretend = 0, frame = 24
 2467              		@ frame_needed = 1, uses_anonymous_args = 0
 2468 0000 80B5     		push	{r7, lr}
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 7, -8
 2471              		.cfi_offset 14, -4
 2472 0002 88B0     		sub	sp, sp, #32
 2473              		.cfi_def_cfa_offset 40
 2474 0004 02AF     		add	r7, sp, #8
 2475              		.cfi_def_cfa 7, 32
 2476 0006 F860     		str	r0, [r7, #12]
 2477 0008 B960     		str	r1, [r7, #8]
 2478 000a 7A60     		str	r2, [r7, #4]
 2479 000c 3B60     		str	r3, [r7]
1191:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
1192:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1193:Libraries/lwip-1.4.0/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);
 2480              		.loc 1 1193 0
 2481 000e 0022     		movs	r2, #0
 2482 0010 1421     		movs	r1, #20
 2483 0012 0120     		movs	r0, #1
 2484 0014 FFF7FEFF 		bl	pbuf_alloc
 2485 0018 7861     		str	r0, [r7, #20]
1194:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (p == NULL) {
 2486              		.loc 1 1194 0
 2487 001a 7B69     		ldr	r3, [r7, #20]
 2488 001c 002B     		cmp	r3, #0
 2489 001e 5CD0     		beq	.L155
1195:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_rst: could not allocate memory for pbuf\n"));
1196:Libraries/lwip-1.4.0/core/tcp_out.c ****       return;
1197:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1198:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
1199:Libraries/lwip-1.4.0/core/tcp_out.c ****               (p->len >= sizeof(struct tcp_hdr)));
1200:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1201:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 2490              		.loc 1 1201 0
 2491 0020 7B69     		ldr	r3, [r7, #20]
 2492 0022 5B68     		ldr	r3, [r3, #4]
 2493 0024 3B61     		str	r3, [r7, #16]
1202:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->src = htons(local_port);
 2494              		.loc 1 1202 0
 2495 0026 3B8C     		ldrh	r3, [r7, #32]
 2496 0028 1846     		mov	r0, r3
 2497 002a FFF7FEFF 		bl	lwip_htons
 2498 002e 0346     		mov	r3, r0
 2499 0030 1A46     		mov	r2, r3
 2500 0032 3B69     		ldr	r3, [r7, #16]
 2501 0034 1A80     		strh	r2, [r3]	@ unaligned
1203:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->dest = htons(remote_port);
 2502              		.loc 1 1203 0
 2503 0036 BB8C     		ldrh	r3, [r7, #36]
 2504 0038 1846     		mov	r0, r3
 2505 003a FFF7FEFF 		bl	lwip_htons
 2506 003e 0346     		mov	r3, r0
 2507 0040 1A46     		mov	r2, r3
 2508 0042 3B69     		ldr	r3, [r7, #16]
 2509 0044 5A80     		strh	r2, [r3, #2]	@ unaligned
1204:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->seqno = htonl(seqno);
 2510              		.loc 1 1204 0
 2511 0046 F868     		ldr	r0, [r7, #12]
 2512 0048 FFF7FEFF 		bl	lwip_htonl
 2513 004c 0246     		mov	r2, r0
 2514 004e 3B69     		ldr	r3, [r7, #16]
 2515 0050 5A60     		str	r2, [r3, #4]	@ unaligned
1205:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->ackno = htonl(ackno);
 2516              		.loc 1 1205 0
 2517 0052 B868     		ldr	r0, [r7, #8]
 2518 0054 FFF7FEFF 		bl	lwip_htonl
 2519 0058 0246     		mov	r2, r0
 2520 005a 3B69     		ldr	r3, [r7, #16]
 2521 005c 9A60     		str	r2, [r3, #8]	@ unaligned
1206:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCPH_HDRLEN_FLAGS_SET(tcphdr, TCP_HLEN/4, TCP_RST | TCP_ACK);
 2522              		.loc 1 1206 0
 2523 005e 45F21400 		movw	r0, #20500
 2524 0062 FFF7FEFF 		bl	lwip_htons
 2525 0066 0346     		mov	r3, r0
 2526 0068 1A46     		mov	r2, r3
 2527 006a 3B69     		ldr	r3, [r7, #16]
 2528 006c 9A81     		strh	r2, [r3, #12]	@ unaligned
1207:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->wnd = PP_HTONS(TCP_WND);
 2529              		.loc 1 1207 0
 2530 006e 3B69     		ldr	r3, [r7, #16]
 2531 0070 0022     		movs	r2, #0
 2532 0072 42F00802 		orr	r2, r2, #8
 2533 0076 9A73     		strb	r2, [r3, #14]
 2534 0078 0022     		movs	r2, #0
 2535 007a 42F06002 		orr	r2, r2, #96
 2536 007e DA73     		strb	r2, [r3, #15]
1208:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->chksum = 0;
 2537              		.loc 1 1208 0
 2538 0080 3B69     		ldr	r3, [r7, #16]
 2539 0082 0022     		movs	r2, #0
 2540 0084 1A74     		strb	r2, [r3, #16]
 2541 0086 0022     		movs	r2, #0
 2542 0088 5A74     		strb	r2, [r3, #17]
1209:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->urgp = 0;
 2543              		.loc 1 1209 0
 2544 008a 3B69     		ldr	r3, [r7, #16]
 2545 008c 0022     		movs	r2, #0
 2546 008e 9A74     		strb	r2, [r3, #18]
 2547 0090 0022     		movs	r2, #0
 2548 0092 DA74     		strb	r2, [r3, #19]
1210:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1211:Libraries/lwip-1.4.0/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1212:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, local_ip, remote_ip,
 2549              		.loc 1 1212 0
 2550 0094 7B69     		ldr	r3, [r7, #20]
 2551 0096 1B89     		ldrh	r3, [r3, #8]
 2552 0098 0093     		str	r3, [sp]
 2553 009a 0623     		movs	r3, #6
 2554 009c 3A68     		ldr	r2, [r7]
 2555 009e 7968     		ldr	r1, [r7, #4]
 2556 00a0 7869     		ldr	r0, [r7, #20]
 2557 00a2 FFF7FEFF 		bl	inet_chksum_pseudo
 2558 00a6 0346     		mov	r3, r0
 2559 00a8 1A46     		mov	r2, r3
 2560 00aa 3B69     		ldr	r3, [r7, #16]
 2561 00ac 1A82     		strh	r2, [r3, #16]	@ unaligned
1213:Libraries/lwip-1.4.0/core/tcp_out.c ****               IP_PROTO_TCP, p->tot_len);
1214:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
1215:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 2562              		.loc 1 1215 0
 2563 00ae 0D4B     		ldr	r3, .L156
 2564 00b0 B3F89030 		ldrh	r3, [r3, #144]
 2565 00b4 0133     		adds	r3, r3, #1
 2566 00b6 9AB2     		uxth	r2, r3
 2567 00b8 0A4B     		ldr	r3, .L156
 2568 00ba A3F89020 		strh	r2, [r3, #144]	@ movhi
1216:Libraries/lwip-1.4.0/core/tcp_out.c ****   snmp_inc_tcpoutrsts();
1217:Libraries/lwip-1.4.0/core/tcp_out.c ****    /* Send output with hardcoded TTL since we have no access to the pcb */
1218:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output(p, local_ip, remote_ip, TCP_TTL, 0, IP_PROTO_TCP);
 2569              		.loc 1 1218 0
 2570 00be 0623     		movs	r3, #6
 2571 00c0 0193     		str	r3, [sp, #4]
 2572 00c2 0023     		movs	r3, #0
 2573 00c4 0093     		str	r3, [sp]
 2574 00c6 FF23     		movs	r3, #255
 2575 00c8 3A68     		ldr	r2, [r7]
 2576 00ca 7968     		ldr	r1, [r7, #4]
 2577 00cc 7869     		ldr	r0, [r7, #20]
 2578 00ce FFF7FEFF 		bl	ip_output
1219:Libraries/lwip-1.4.0/core/tcp_out.c ****   pbuf_free(p);
 2579              		.loc 1 1219 0
 2580 00d2 7869     		ldr	r0, [r7, #20]
 2581 00d4 FFF7FEFF 		bl	pbuf_free
 2582 00d8 00E0     		b	.L152
 2583              	.L155:
1196:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 2584              		.loc 1 1196 0
 2585 00da 00BF     		nop
 2586              	.L152:
1220:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_rst: seqno %"U32_F" ackno %"U32_F".\n", seqno, ackno));
1221:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2587              		.loc 1 1221 0
 2588 00dc 1837     		adds	r7, r7, #24
 2589              		.cfi_def_cfa_offset 8
 2590 00de BD46     		mov	sp, r7
 2591              		.cfi_def_cfa_register 13
 2592              		@ sp needed
 2593 00e0 80BD     		pop	{r7, pc}
 2594              	.L157:
 2595 00e2 00BF     		.align	2
 2596              	.L156:
 2597 00e4 00000000 		.word	lwip_stats
 2598              		.cfi_endproc
 2599              	.LFE27:
 2601              		.section	.text.tcp_rexmit_rto,"ax",%progbits
 2602              		.align	2
 2603              		.global	tcp_rexmit_rto
 2604              		.thumb
 2605              		.thumb_func
 2607              	tcp_rexmit_rto:
 2608              	.LFB28:
1222:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1223:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1224:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Requeue all unacked segments for retransmission
1225:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1226:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_slowtmr() for slow retransmission.
1227:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1228:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to re-enqueue all unacked segments
1229:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1230:Libraries/lwip-1.4.0/core/tcp_out.c **** void
1231:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_rexmit_rto(struct tcp_pcb *pcb)
1232:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2609              		.loc 1 1232 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 16
 2612              		@ frame_needed = 1, uses_anonymous_args = 0
 2613 0000 80B5     		push	{r7, lr}
 2614              		.cfi_def_cfa_offset 8
 2615              		.cfi_offset 7, -8
 2616              		.cfi_offset 14, -4
 2617 0002 84B0     		sub	sp, sp, #16
 2618              		.cfi_def_cfa_offset 24
 2619 0004 00AF     		add	r7, sp, #0
 2620              		.cfi_def_cfa_register 7
 2621 0006 7860     		str	r0, [r7, #4]
1233:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg;
1234:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1235:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unacked == NULL) {
 2622              		.loc 1 1235 0
 2623 0008 7B68     		ldr	r3, [r7, #4]
 2624 000a 9B6F     		ldr	r3, [r3, #120]
 2625 000c 002B     		cmp	r3, #0
 2626 000e 24D0     		beq	.L163
1236:Libraries/lwip-1.4.0/core/tcp_out.c ****     return;
1237:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1238:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1239:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Move all unacked segments to the head of the unsent queue */
1240:Libraries/lwip-1.4.0/core/tcp_out.c ****   for (seg = pcb->unacked; seg->next != NULL; seg = seg->next);
 2627              		.loc 1 1240 0
 2628 0010 7B68     		ldr	r3, [r7, #4]
 2629 0012 9B6F     		ldr	r3, [r3, #120]
 2630 0014 FB60     		str	r3, [r7, #12]
 2631 0016 02E0     		b	.L161
 2632              	.L162:
 2633              		.loc 1 1240 0 is_stmt 0 discriminator 3
 2634 0018 FB68     		ldr	r3, [r7, #12]
 2635 001a 1B68     		ldr	r3, [r3]
 2636 001c FB60     		str	r3, [r7, #12]
 2637              	.L161:
 2638              		.loc 1 1240 0 discriminator 1
 2639 001e FB68     		ldr	r3, [r7, #12]
 2640 0020 1B68     		ldr	r3, [r3]
 2641 0022 002B     		cmp	r3, #0
 2642 0024 F8D1     		bne	.L162
1241:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* concatenate unsent queue after unacked queue */
1242:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->next = pcb->unsent;
 2643              		.loc 1 1242 0 is_stmt 1
 2644 0026 7B68     		ldr	r3, [r7, #4]
 2645 0028 5A6F     		ldr	r2, [r3, #116]
 2646 002a FB68     		ldr	r3, [r7, #12]
 2647 002c 1A60     		str	r2, [r3]
1243:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* unsent queue is the concatenated queue (of unacked, unsent) */
1244:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->unsent = pcb->unacked;
 2648              		.loc 1 1244 0
 2649 002e 7B68     		ldr	r3, [r7, #4]
 2650 0030 9A6F     		ldr	r2, [r3, #120]
 2651 0032 7B68     		ldr	r3, [r7, #4]
 2652 0034 5A67     		str	r2, [r3, #116]
1245:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* unacked queue is now empty */
1246:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->unacked = NULL;
 2653              		.loc 1 1246 0
 2654 0036 7B68     		ldr	r3, [r7, #4]
 2655 0038 0022     		movs	r2, #0
 2656 003a 9A67     		str	r2, [r3, #120]
1247:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1248:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* increment number of retransmissions */
1249:Libraries/lwip-1.4.0/core/tcp_out.c ****   ++pcb->nrtx;
 2657              		.loc 1 1249 0
 2658 003c 7B68     		ldr	r3, [r7, #4]
 2659 003e 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 2660 0042 0133     		adds	r3, r3, #1
 2661 0044 DAB2     		uxtb	r2, r3
 2662 0046 7B68     		ldr	r3, [r7, #4]
 2663 0048 83F84A20 		strb	r2, [r3, #74]
1250:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1251:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
1252:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->rttest = 0;
 2664              		.loc 1 1252 0
 2665 004c 7B68     		ldr	r3, [r7, #4]
 2666 004e 0022     		movs	r2, #0
 2667 0050 DA63     		str	r2, [r3, #60]
1253:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1254:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Do the actual retransmission */
1255:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcp_output(pcb);
 2668              		.loc 1 1255 0
 2669 0052 7868     		ldr	r0, [r7, #4]
 2670 0054 FFF7FEFF 		bl	tcp_output
 2671 0058 00E0     		b	.L158
 2672              	.L163:
1236:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 2673              		.loc 1 1236 0
 2674 005a 00BF     		nop
 2675              	.L158:
1256:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2676              		.loc 1 1256 0
 2677 005c 1037     		adds	r7, r7, #16
 2678              		.cfi_def_cfa_offset 8
 2679 005e BD46     		mov	sp, r7
 2680              		.cfi_def_cfa_register 13
 2681              		@ sp needed
 2682 0060 80BD     		pop	{r7, pc}
 2683              		.cfi_endproc
 2684              	.LFE28:
 2686 0062 00BF     		.section	.text.tcp_rexmit,"ax",%progbits
 2687              		.align	2
 2688              		.global	tcp_rexmit
 2689              		.thumb
 2690              		.thumb_func
 2692              	tcp_rexmit:
 2693              	.LFB29:
1257:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1258:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1259:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Requeue the first unacked segment for retransmission
1260:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1261:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_receive() for fast retramsmit.
1262:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1263:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
1264:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1265:Libraries/lwip-1.4.0/core/tcp_out.c **** void
1266:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_rexmit(struct tcp_pcb *pcb)
1267:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2694              		.loc 1 1267 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 16
 2697              		@ frame_needed = 1, uses_anonymous_args = 0
 2698 0000 90B5     		push	{r4, r7, lr}
 2699              		.cfi_def_cfa_offset 12
 2700              		.cfi_offset 4, -12
 2701              		.cfi_offset 7, -8
 2702              		.cfi_offset 14, -4
 2703 0002 85B0     		sub	sp, sp, #20
 2704              		.cfi_def_cfa_offset 32
 2705 0004 00AF     		add	r7, sp, #0
 2706              		.cfi_def_cfa_register 7
 2707 0006 7860     		str	r0, [r7, #4]
1268:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg;
1269:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg **cur_seg;
1270:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1271:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unacked == NULL) {
 2708              		.loc 1 1271 0
 2709 0008 7B68     		ldr	r3, [r7, #4]
 2710 000a 9B6F     		ldr	r3, [r3, #120]
 2711 000c 002B     		cmp	r3, #0
 2712 000e 36D0     		beq	.L170
1272:Libraries/lwip-1.4.0/core/tcp_out.c ****     return;
1273:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1274:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1275:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Move the first unacked segment to the unsent queue */
1276:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Keep the unsent queue sorted. */
1277:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg = pcb->unacked;
 2713              		.loc 1 1277 0
 2714 0010 7B68     		ldr	r3, [r7, #4]
 2715 0012 9B6F     		ldr	r3, [r3, #120]
 2716 0014 BB60     		str	r3, [r7, #8]
1278:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->unacked = seg->next;
 2717              		.loc 1 1278 0
 2718 0016 BB68     		ldr	r3, [r7, #8]
 2719 0018 1A68     		ldr	r2, [r3]
 2720 001a 7B68     		ldr	r3, [r7, #4]
 2721 001c 9A67     		str	r2, [r3, #120]
1279:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1280:Libraries/lwip-1.4.0/core/tcp_out.c ****   cur_seg = &(pcb->unsent);
 2722              		.loc 1 1280 0
 2723 001e 7B68     		ldr	r3, [r7, #4]
 2724 0020 7433     		adds	r3, r3, #116
 2725 0022 FB60     		str	r3, [r7, #12]
1281:Libraries/lwip-1.4.0/core/tcp_out.c ****   while (*cur_seg &&
 2726              		.loc 1 1281 0
 2727 0024 02E0     		b	.L167
 2728              	.L169:
1282:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
1283:Libraries/lwip-1.4.0/core/tcp_out.c ****       cur_seg = &((*cur_seg)->next );
 2729              		.loc 1 1283 0
 2730 0026 FB68     		ldr	r3, [r7, #12]
 2731 0028 1B68     		ldr	r3, [r3]
 2732 002a FB60     		str	r3, [r7, #12]
 2733              	.L167:
1281:Libraries/lwip-1.4.0/core/tcp_out.c ****   while (*cur_seg &&
 2734              		.loc 1 1281 0
 2735 002c FB68     		ldr	r3, [r7, #12]
 2736 002e 1B68     		ldr	r3, [r3]
 2737 0030 002B     		cmp	r3, #0
 2738 0032 11D0     		beq	.L168
1282:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 2739              		.loc 1 1282 0 discriminator 1
 2740 0034 FB68     		ldr	r3, [r7, #12]
 2741 0036 1B68     		ldr	r3, [r3]
 2742 0038 DB68     		ldr	r3, [r3, #12]
 2743 003a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2744 003c 1846     		mov	r0, r3
 2745 003e FFF7FEFF 		bl	lwip_ntohl
 2746 0042 0446     		mov	r4, r0
 2747 0044 BB68     		ldr	r3, [r7, #8]
 2748 0046 DB68     		ldr	r3, [r3, #12]
 2749 0048 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2750 004a 1846     		mov	r0, r3
 2751 004c FFF7FEFF 		bl	lwip_ntohl
 2752 0050 0346     		mov	r3, r0
 2753 0052 E31A     		subs	r3, r4, r3
1281:Libraries/lwip-1.4.0/core/tcp_out.c ****   while (*cur_seg &&
 2754              		.loc 1 1281 0 discriminator 1
 2755 0054 002B     		cmp	r3, #0
 2756 0056 E6DB     		blt	.L169
 2757              	.L168:
1284:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1285:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg->next = *cur_seg;
 2758              		.loc 1 1285 0
 2759 0058 FB68     		ldr	r3, [r7, #12]
 2760 005a 1A68     		ldr	r2, [r3]
 2761 005c BB68     		ldr	r3, [r7, #8]
 2762 005e 1A60     		str	r2, [r3]
1286:Libraries/lwip-1.4.0/core/tcp_out.c ****   *cur_seg = seg;
 2763              		.loc 1 1286 0
 2764 0060 FB68     		ldr	r3, [r7, #12]
 2765 0062 BA68     		ldr	r2, [r7, #8]
 2766 0064 1A60     		str	r2, [r3]
1287:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1288:Libraries/lwip-1.4.0/core/tcp_out.c ****   ++pcb->nrtx;
 2767              		.loc 1 1288 0
 2768 0066 7B68     		ldr	r3, [r7, #4]
 2769 0068 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 2770 006c 0133     		adds	r3, r3, #1
 2771 006e DAB2     		uxtb	r2, r3
 2772 0070 7B68     		ldr	r3, [r7, #4]
 2773 0072 83F84A20 		strb	r2, [r3, #74]
1289:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1290:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Don't take any rtt measurements after retransmitting. */
1291:Libraries/lwip-1.4.0/core/tcp_out.c ****   pcb->rttest = 0;
 2774              		.loc 1 1291 0
 2775 0076 7B68     		ldr	r3, [r7, #4]
 2776 0078 0022     		movs	r2, #0
 2777 007a DA63     		str	r2, [r3, #60]
 2778 007c 00E0     		b	.L164
 2779              	.L170:
1272:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 2780              		.loc 1 1272 0
 2781 007e 00BF     		nop
 2782              	.L164:
1292:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1293:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Do the actual retransmission. */
1294:Libraries/lwip-1.4.0/core/tcp_out.c ****   snmp_inc_tcpretranssegs();
1295:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* No need to call tcp_output: we are always called from tcp_input()
1296:Libraries/lwip-1.4.0/core/tcp_out.c ****      and thus tcp_output directly returns. */
1297:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2783              		.loc 1 1297 0
 2784 0080 1437     		adds	r7, r7, #20
 2785              		.cfi_def_cfa_offset 12
 2786 0082 BD46     		mov	sp, r7
 2787              		.cfi_def_cfa_register 13
 2788              		@ sp needed
 2789 0084 90BD     		pop	{r4, r7, pc}
 2790              		.cfi_endproc
 2791              	.LFE29:
 2793 0086 00BF     		.section	.text.tcp_rexmit_fast,"ax",%progbits
 2794              		.align	2
 2795              		.global	tcp_rexmit_fast
 2796              		.thumb
 2797              		.thumb_func
 2799              	tcp_rexmit_fast:
 2800              	.LFB30:
1298:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1299:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1300:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1301:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Handle retransmission after three dupacks received
1302:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1303:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
1304:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1305:Libraries/lwip-1.4.0/core/tcp_out.c **** void 
1306:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_rexmit_fast(struct tcp_pcb *pcb)
1307:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2801              		.loc 1 1307 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 8
 2804              		@ frame_needed = 1, uses_anonymous_args = 0
 2805 0000 80B5     		push	{r7, lr}
 2806              		.cfi_def_cfa_offset 8
 2807              		.cfi_offset 7, -8
 2808              		.cfi_offset 14, -4
 2809 0002 82B0     		sub	sp, sp, #8
 2810              		.cfi_def_cfa_offset 16
 2811 0004 00AF     		add	r7, sp, #0
 2812              		.cfi_def_cfa_register 7
 2813 0006 7860     		str	r0, [r7, #4]
1308:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (pcb->unacked != NULL && !(pcb->flags & TF_INFR)) {
 2814              		.loc 1 1308 0
 2815 0008 7B68     		ldr	r3, [r7, #4]
 2816 000a 9B6F     		ldr	r3, [r3, #120]
 2817 000c 002B     		cmp	r3, #0
 2818 000e 49D0     		beq	.L176
 2819              		.loc 1 1308 0 is_stmt 0 discriminator 1
 2820 0010 7B68     		ldr	r3, [r7, #4]
 2821 0012 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2822 0016 03F00403 		and	r3, r3, #4
 2823 001a 002B     		cmp	r3, #0
 2824 001c 42D1     		bne	.L176
1309:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
1310:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_FR_DEBUG, 
1311:Libraries/lwip-1.4.0/core/tcp_out.c ****                 ("tcp_receive: dupacks %"U16_F" (%"U32_F
1312:Libraries/lwip-1.4.0/core/tcp_out.c ****                  "), fast retransmit %"U32_F"\n",
1313:Libraries/lwip-1.4.0/core/tcp_out.c ****                  (u16_t)pcb->dupacks, pcb->lastack,
1314:Libraries/lwip-1.4.0/core/tcp_out.c ****                  ntohl(pcb->unacked->tcphdr->seqno)));
1315:Libraries/lwip-1.4.0/core/tcp_out.c ****     tcp_rexmit(pcb);
 2825              		.loc 1 1315 0 is_stmt 1
 2826 001e 7868     		ldr	r0, [r7, #4]
 2827 0020 FFF7FEFF 		bl	tcp_rexmit
1316:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1317:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Set ssthresh to half of the minimum of the current
1318:Libraries/lwip-1.4.0/core/tcp_out.c ****      * cwnd and the advertised window */
1319:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (pcb->cwnd > pcb->snd_wnd) {
 2828              		.loc 1 1319 0
 2829 0024 7B68     		ldr	r3, [r7, #4]
 2830 0026 B3F85220 		ldrh	r2, [r3, #82]
 2831 002a 7B68     		ldr	r3, [r7, #4]
 2832 002c B3F85C30 		ldrh	r3, [r3, #92]
 2833 0030 9A42     		cmp	r2, r3
 2834 0032 08D9     		bls	.L173
1320:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->ssthresh = pcb->snd_wnd / 2;
 2835              		.loc 1 1320 0
 2836 0034 7B68     		ldr	r3, [r7, #4]
 2837 0036 B3F85C30 		ldrh	r3, [r3, #92]
 2838 003a 5B08     		lsrs	r3, r3, #1
 2839 003c 9AB2     		uxth	r2, r3
 2840 003e 7B68     		ldr	r3, [r7, #4]
 2841 0040 A3F85420 		strh	r2, [r3, #84]	@ movhi
 2842 0044 07E0     		b	.L174
 2843              	.L173:
1321:Libraries/lwip-1.4.0/core/tcp_out.c ****     } else {
1322:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->ssthresh = pcb->cwnd / 2;
 2844              		.loc 1 1322 0
 2845 0046 7B68     		ldr	r3, [r7, #4]
 2846 0048 B3F85230 		ldrh	r3, [r3, #82]
 2847 004c 5B08     		lsrs	r3, r3, #1
 2848 004e 9AB2     		uxth	r2, r3
 2849 0050 7B68     		ldr	r3, [r7, #4]
 2850 0052 A3F85420 		strh	r2, [r3, #84]	@ movhi
 2851              	.L174:
1323:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1324:Libraries/lwip-1.4.0/core/tcp_out.c ****     
1325:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* The minimum value for ssthresh should be 2 MSS */
1326:Libraries/lwip-1.4.0/core/tcp_out.c ****     if (pcb->ssthresh < 2*pcb->mss) {
 2852              		.loc 1 1326 0
 2853 0056 7B68     		ldr	r3, [r7, #4]
 2854 0058 B3F85430 		ldrh	r3, [r3, #84]
 2855 005c 1A46     		mov	r2, r3
 2856 005e 7B68     		ldr	r3, [r7, #4]
 2857 0060 1B8F     		ldrh	r3, [r3, #56]
 2858 0062 5B00     		lsls	r3, r3, #1
 2859 0064 9A42     		cmp	r2, r3
 2860 0066 06DA     		bge	.L175
1327:Libraries/lwip-1.4.0/core/tcp_out.c ****       LWIP_DEBUGF(TCP_FR_DEBUG, 
1328:Libraries/lwip-1.4.0/core/tcp_out.c ****                   ("tcp_receive: The minimum value for ssthresh %"U16_F
1329:Libraries/lwip-1.4.0/core/tcp_out.c ****                    " should be min 2 mss %"U16_F"...\n",
1330:Libraries/lwip-1.4.0/core/tcp_out.c ****                    pcb->ssthresh, 2*pcb->mss));
1331:Libraries/lwip-1.4.0/core/tcp_out.c ****       pcb->ssthresh = 2*pcb->mss;
 2861              		.loc 1 1331 0
 2862 0068 7B68     		ldr	r3, [r7, #4]
 2863 006a 1B8F     		ldrh	r3, [r3, #56]
 2864 006c 5B00     		lsls	r3, r3, #1
 2865 006e 9AB2     		uxth	r2, r3
 2866 0070 7B68     		ldr	r3, [r7, #4]
 2867 0072 A3F85420 		strh	r2, [r3, #84]	@ movhi
 2868              	.L175:
1332:Libraries/lwip-1.4.0/core/tcp_out.c ****     }
1333:Libraries/lwip-1.4.0/core/tcp_out.c ****     
1334:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
 2869              		.loc 1 1334 0
 2870 0076 7B68     		ldr	r3, [r7, #4]
 2871 0078 B3F85420 		ldrh	r2, [r3, #84]
 2872 007c 7B68     		ldr	r3, [r7, #4]
 2873 007e 1B8F     		ldrh	r3, [r3, #56]
 2874 0080 1946     		mov	r1, r3	@ movhi
 2875 0082 4900     		lsls	r1, r1, #1
 2876 0084 0B44     		add	r3, r3, r1
 2877 0086 9BB2     		uxth	r3, r3
 2878 0088 1344     		add	r3, r3, r2
 2879 008a 9AB2     		uxth	r2, r3
 2880 008c 7B68     		ldr	r3, [r7, #4]
 2881 008e A3F85220 		strh	r2, [r3, #82]	@ movhi
1335:Libraries/lwip-1.4.0/core/tcp_out.c ****     pcb->flags |= TF_INFR;
 2882              		.loc 1 1335 0
 2883 0092 7B68     		ldr	r3, [r7, #4]
 2884 0094 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2885 0098 43F00403 		orr	r3, r3, #4
 2886 009c DAB2     		uxtb	r2, r3
 2887 009e 7B68     		ldr	r3, [r7, #4]
 2888 00a0 83F82020 		strb	r2, [r3, #32]
 2889              	.L176:
1336:Libraries/lwip-1.4.0/core/tcp_out.c ****   } 
1337:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2890              		.loc 1 1337 0
 2891 00a4 00BF     		nop
 2892 00a6 0837     		adds	r7, r7, #8
 2893              		.cfi_def_cfa_offset 8
 2894 00a8 BD46     		mov	sp, r7
 2895              		.cfi_def_cfa_register 13
 2896              		@ sp needed
 2897 00aa 80BD     		pop	{r7, pc}
 2898              		.cfi_endproc
 2899              	.LFE30:
 2901              		.section	.text.tcp_keepalive,"ax",%progbits
 2902              		.align	2
 2903              		.global	tcp_keepalive
 2904              		.thumb
 2905              		.thumb_func
 2907              	tcp_keepalive:
 2908              	.LFB31:
1338:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1339:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1340:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1341:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Send keepalive packets to keep a connection active although
1342:Libraries/lwip-1.4.0/core/tcp_out.c ****  * no data is sent over it.
1343:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1344:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_slowtmr()
1345:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1346:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a keepalive packet
1347:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1348:Libraries/lwip-1.4.0/core/tcp_out.c **** void
1349:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_keepalive(struct tcp_pcb *pcb)
1350:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 2909              		.loc 1 1350 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 16
 2912              		@ frame_needed = 1, uses_anonymous_args = 0
 2913 0000 80B5     		push	{r7, lr}
 2914              		.cfi_def_cfa_offset 8
 2915              		.cfi_offset 7, -8
 2916              		.cfi_offset 14, -4
 2917 0002 86B0     		sub	sp, sp, #24
 2918              		.cfi_def_cfa_offset 32
 2919 0004 02AF     		add	r7, sp, #8
 2920              		.cfi_def_cfa 7, 24
 2921 0006 7860     		str	r0, [r7, #4]
1351:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
1352:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1353:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1354:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: sending KEEPALIVE probe to %"U16_F".%"U16_F".%"U16_F".%"U
1355:Libraries/lwip-1.4.0/core/tcp_out.c ****                           ip4_addr1_16(&pcb->remote_ip), ip4_addr2_16(&pcb->remote_ip),
1356:Libraries/lwip-1.4.0/core/tcp_out.c ****                           ip4_addr3_16(&pcb->remote_ip), ip4_addr4_16(&pcb->remote_ip)));
1357:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1358:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: tcp_ticks %"U32_F"   pcb->tmr %"U32_F" pcb->keep_cnt_sent
1359:Libraries/lwip-1.4.0/core/tcp_out.c ****                           tcp_ticks, pcb->tmr, pcb->keep_cnt_sent));
1360:Libraries/lwip-1.4.0/core/tcp_out.c ****    
1361:Libraries/lwip-1.4.0/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, 0, 0, htonl(pcb->snd_nxt - 1));
 2922              		.loc 1 1361 0
 2923 0008 7B68     		ldr	r3, [r7, #4]
 2924 000a 9B6D     		ldr	r3, [r3, #88]
 2925 000c 013B     		subs	r3, r3, #1
 2926 000e 1846     		mov	r0, r3
 2927 0010 FFF7FEFF 		bl	lwip_htonl
 2928 0014 0346     		mov	r3, r0
 2929 0016 0022     		movs	r2, #0
 2930 0018 0021     		movs	r1, #0
 2931 001a 7868     		ldr	r0, [r7, #4]
 2932 001c FFF7FEFF 		bl	tcp_output_alloc_header
 2933 0020 F860     		str	r0, [r7, #12]
1362:Libraries/lwip-1.4.0/core/tcp_out.c ****   if(p == NULL) {
 2934              		.loc 1 1362 0
 2935 0022 FB68     		ldr	r3, [r7, #12]
 2936 0024 002B     		cmp	r3, #0
 2937 0026 29D0     		beq	.L180
1363:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, 
1364:Libraries/lwip-1.4.0/core/tcp_out.c ****                 ("tcp_keepalive: could not allocate memory for pbuf\n"));
1365:Libraries/lwip-1.4.0/core/tcp_out.c ****     return;
1366:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1367:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 2938              		.loc 1 1367 0
 2939 0028 FB68     		ldr	r3, [r7, #12]
 2940 002a 5B68     		ldr	r3, [r3, #4]
 2941 002c BB60     		str	r3, [r7, #8]
1368:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1369:Libraries/lwip-1.4.0/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1370:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &pcb->local_ip, &pcb->remote_ip,
 2942              		.loc 1 1370 0
 2943 002e 7968     		ldr	r1, [r7, #4]
 2944 0030 7B68     		ldr	r3, [r7, #4]
 2945 0032 1A1D     		adds	r2, r3, #4
 2946 0034 FB68     		ldr	r3, [r7, #12]
 2947 0036 1B89     		ldrh	r3, [r3, #8]
 2948 0038 0093     		str	r3, [sp]
 2949 003a 0623     		movs	r3, #6
 2950 003c F868     		ldr	r0, [r7, #12]
 2951 003e FFF7FEFF 		bl	inet_chksum_pseudo
 2952 0042 0346     		mov	r3, r0
 2953 0044 1A46     		mov	r2, r3
 2954 0046 BB68     		ldr	r3, [r7, #8]
 2955 0048 1A82     		strh	r2, [r3, #16]	@ unaligned
1371:Libraries/lwip-1.4.0/core/tcp_out.c ****                                       IP_PROTO_TCP, p->tot_len);
1372:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
1373:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 2956              		.loc 1 1373 0
 2957 004a 0E4B     		ldr	r3, .L181
 2958 004c B3F89030 		ldrh	r3, [r3, #144]
 2959 0050 0133     		adds	r3, r3, #1
 2960 0052 9AB2     		uxth	r2, r3
 2961 0054 0B4B     		ldr	r3, .L181
 2962 0056 A3F89020 		strh	r2, [r3, #144]	@ movhi
1374:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1375:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Send output to IP */
1376:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
1377:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output_hinted(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP,
1378:Libraries/lwip-1.4.0/core/tcp_out.c ****     &(pcb->addr_hint));
1379:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
1380:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP);
 2963              		.loc 1 1380 0
 2964 005a 7968     		ldr	r1, [r7, #4]
 2965 005c 7B68     		ldr	r3, [r7, #4]
 2966 005e 1A1D     		adds	r2, r3, #4
 2967 0060 7B68     		ldr	r3, [r7, #4]
 2968 0062 987A     		ldrb	r0, [r3, #10]	@ zero_extendqisi2
 2969 0064 0623     		movs	r3, #6
 2970 0066 0193     		str	r3, [sp, #4]
 2971 0068 0023     		movs	r3, #0
 2972 006a 0093     		str	r3, [sp]
 2973 006c 0346     		mov	r3, r0
 2974 006e F868     		ldr	r0, [r7, #12]
 2975 0070 FFF7FEFF 		bl	ip_output
1381:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
1382:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1383:Libraries/lwip-1.4.0/core/tcp_out.c ****   pbuf_free(p);
 2976              		.loc 1 1383 0
 2977 0074 F868     		ldr	r0, [r7, #12]
 2978 0076 FFF7FEFF 		bl	pbuf_free
 2979 007a 00E0     		b	.L177
 2980              	.L180:
1365:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 2981              		.loc 1 1365 0
 2982 007c 00BF     		nop
 2983              	.L177:
1384:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1385:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: seqno %"U32_F" ackno %"U32_F".\n",
1386:Libraries/lwip-1.4.0/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt));
1387:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 2984              		.loc 1 1387 0
 2985 007e 1037     		adds	r7, r7, #16
 2986              		.cfi_def_cfa_offset 8
 2987 0080 BD46     		mov	sp, r7
 2988              		.cfi_def_cfa_register 13
 2989              		@ sp needed
 2990 0082 80BD     		pop	{r7, pc}
 2991              	.L182:
 2992              		.align	2
 2993              	.L181:
 2994 0084 00000000 		.word	lwip_stats
 2995              		.cfi_endproc
 2996              	.LFE31:
 2998              		.section	.text.tcp_zero_window_probe,"ax",%progbits
 2999              		.align	2
 3000              		.global	tcp_zero_window_probe
 3001              		.thumb
 3002              		.thumb_func
 3004              	tcp_zero_window_probe:
 3005              	.LFB32:
1388:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1389:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1390:Libraries/lwip-1.4.0/core/tcp_out.c **** /**
1391:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Send persist timer zero-window probes to keep a connection active
1392:Libraries/lwip-1.4.0/core/tcp_out.c ****  * when a window update is lost.
1393:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1394:Libraries/lwip-1.4.0/core/tcp_out.c ****  * Called by tcp_slowtmr()
1395:Libraries/lwip-1.4.0/core/tcp_out.c ****  *
1396:Libraries/lwip-1.4.0/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a zero-window probe packet
1397:Libraries/lwip-1.4.0/core/tcp_out.c ****  */
1398:Libraries/lwip-1.4.0/core/tcp_out.c **** void
1399:Libraries/lwip-1.4.0/core/tcp_out.c **** tcp_zero_window_probe(struct tcp_pcb *pcb)
1400:Libraries/lwip-1.4.0/core/tcp_out.c **** {
 3006              		.loc 1 1400 0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 32
 3009              		@ frame_needed = 1, uses_anonymous_args = 0
 3010 0000 90B5     		push	{r4, r7, lr}
 3011              		.cfi_def_cfa_offset 12
 3012              		.cfi_offset 4, -12
 3013              		.cfi_offset 7, -8
 3014              		.cfi_offset 14, -4
 3015 0002 8BB0     		sub	sp, sp, #44
 3016              		.cfi_def_cfa_offset 56
 3017 0004 02AF     		add	r7, sp, #8
 3018              		.cfi_def_cfa 7, 48
 3019 0006 7860     		str	r0, [r7, #4]
1401:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct pbuf *p;
1402:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1403:Libraries/lwip-1.4.0/core/tcp_out.c ****   struct tcp_seg *seg;
1404:Libraries/lwip-1.4.0/core/tcp_out.c ****   u16_t len;
1405:Libraries/lwip-1.4.0/core/tcp_out.c ****   u8_t is_fin;
1406:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1407:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, 
1408:Libraries/lwip-1.4.0/core/tcp_out.c ****               ("tcp_zero_window_probe: sending ZERO WINDOW probe to %"
1409:Libraries/lwip-1.4.0/core/tcp_out.c ****                U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
1410:Libraries/lwip-1.4.0/core/tcp_out.c ****                ip4_addr1_16(&pcb->remote_ip), ip4_addr2_16(&pcb->remote_ip),
1411:Libraries/lwip-1.4.0/core/tcp_out.c ****                ip4_addr3_16(&pcb->remote_ip), ip4_addr4_16(&pcb->remote_ip)));
1412:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1413:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, 
1414:Libraries/lwip-1.4.0/core/tcp_out.c ****               ("tcp_zero_window_probe: tcp_ticks %"U32_F
1415:Libraries/lwip-1.4.0/core/tcp_out.c ****                "   pcb->tmr %"U32_F" pcb->keep_cnt_sent %"U16_F"\n", 
1416:Libraries/lwip-1.4.0/core/tcp_out.c ****                tcp_ticks, pcb->tmr, pcb->keep_cnt_sent));
1417:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1418:Libraries/lwip-1.4.0/core/tcp_out.c ****   seg = pcb->unacked;
 3020              		.loc 1 1418 0
 3021 0008 7B68     		ldr	r3, [r7, #4]
 3022 000a 9B6F     		ldr	r3, [r3, #120]
 3023 000c FB61     		str	r3, [r7, #28]
1419:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1420:Libraries/lwip-1.4.0/core/tcp_out.c ****   if(seg == NULL) {
 3024              		.loc 1 1420 0
 3025 000e FB69     		ldr	r3, [r7, #28]
 3026 0010 002B     		cmp	r3, #0
 3027 0012 02D1     		bne	.L184
1421:Libraries/lwip-1.4.0/core/tcp_out.c ****     seg = pcb->unsent;
 3028              		.loc 1 1421 0
 3029 0014 7B68     		ldr	r3, [r7, #4]
 3030 0016 5B6F     		ldr	r3, [r3, #116]
 3031 0018 FB61     		str	r3, [r7, #28]
 3032              	.L184:
1422:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1423:Libraries/lwip-1.4.0/core/tcp_out.c ****   if(seg == NULL) {
 3033              		.loc 1 1423 0
 3034 001a FB69     		ldr	r3, [r7, #28]
 3035 001c 002B     		cmp	r3, #0
 3036 001e 7FD0     		beq	.L192
1424:Libraries/lwip-1.4.0/core/tcp_out.c ****     return;
1425:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1426:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1427:Libraries/lwip-1.4.0/core/tcp_out.c ****   is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
 3037              		.loc 1 1427 0
 3038 0020 FB69     		ldr	r3, [r7, #28]
 3039 0022 DB68     		ldr	r3, [r3, #12]
 3040 0024 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3041 0026 9BB2     		uxth	r3, r3
 3042 0028 1846     		mov	r0, r3
 3043 002a FFF7FEFF 		bl	lwip_ntohs
 3044 002e 0346     		mov	r3, r0
 3045 0030 03F00103 		and	r3, r3, #1
 3046 0034 002B     		cmp	r3, #0
 3047 0036 05D0     		beq	.L187
 3048              		.loc 1 1427 0 is_stmt 0 discriminator 1
 3049 0038 FB69     		ldr	r3, [r7, #28]
 3050 003a 1B89     		ldrh	r3, [r3, #8]
 3051 003c 002B     		cmp	r3, #0
 3052 003e 01D1     		bne	.L187
 3053              		.loc 1 1427 0 discriminator 3
 3054 0040 0123     		movs	r3, #1
 3055 0042 00E0     		b	.L188
 3056              	.L187:
 3057              		.loc 1 1427 0 discriminator 4
 3058 0044 0023     		movs	r3, #0
 3059              	.L188:
 3060              		.loc 1 1427 0 discriminator 6
 3061 0046 FB76     		strb	r3, [r7, #27]
1428:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* we want to send one seqno: either FIN or data (no options) */
1429:Libraries/lwip-1.4.0/core/tcp_out.c ****   len = is_fin ? 0 : 1;
 3062              		.loc 1 1429 0 is_stmt 1 discriminator 6
 3063 0048 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3064 004a 002B     		cmp	r3, #0
 3065 004c 0CBF     		ite	eq
 3066 004e 0123     		moveq	r3, #1
 3067 0050 0023     		movne	r3, #0
 3068 0052 DBB2     		uxtb	r3, r3
 3069 0054 3B83     		strh	r3, [r7, #24]	@ movhi
1430:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1431:Libraries/lwip-1.4.0/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, 0, len, seg->tcphdr->seqno);
 3070              		.loc 1 1431 0 discriminator 6
 3071 0056 FB69     		ldr	r3, [r7, #28]
 3072 0058 DB68     		ldr	r3, [r3, #12]
 3073 005a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 3074 005c 3A8B     		ldrh	r2, [r7, #24]
 3075 005e 0021     		movs	r1, #0
 3076 0060 7868     		ldr	r0, [r7, #4]
 3077 0062 FFF7FEFF 		bl	tcp_output_alloc_header
 3078 0066 7861     		str	r0, [r7, #20]
1432:Libraries/lwip-1.4.0/core/tcp_out.c ****   if(p == NULL) {
 3079              		.loc 1 1432 0 discriminator 6
 3080 0068 7B69     		ldr	r3, [r7, #20]
 3081 006a 002B     		cmp	r3, #0
 3082 006c 5AD0     		beq	.L193
1433:Libraries/lwip-1.4.0/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: no memory for pbuf\n"));
1434:Libraries/lwip-1.4.0/core/tcp_out.c ****     return;
1435:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1436:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 3083              		.loc 1 1436 0
 3084 006e 7B69     		ldr	r3, [r7, #20]
 3085 0070 5B68     		ldr	r3, [r3, #4]
 3086 0072 3B61     		str	r3, [r7, #16]
1437:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1438:Libraries/lwip-1.4.0/core/tcp_out.c ****   if (is_fin) {
 3087              		.loc 1 1438 0
 3088 0074 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3089 0076 002B     		cmp	r3, #0
 3090 0078 11D0     		beq	.L190
1439:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* FIN segment, no data */
1440:Libraries/lwip-1.4.0/core/tcp_out.c ****     TCPH_FLAGS_SET(tcphdr, TCP_ACK | TCP_FIN);
 3091              		.loc 1 1440 0
 3092 007a 3B69     		ldr	r3, [r7, #16]
 3093 007c 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3094 007e 9BB2     		uxth	r3, r3
 3095 0080 1BB2     		sxth	r3, r3
 3096 0082 23F47C53 		bic	r3, r3, #16128
 3097 0086 1CB2     		sxth	r4, r3
 3098 0088 1120     		movs	r0, #17
 3099 008a FFF7FEFF 		bl	lwip_htons
 3100 008e 0346     		mov	r3, r0
 3101 0090 1BB2     		sxth	r3, r3
 3102 0092 2343     		orrs	r3, r3, r4
 3103 0094 1BB2     		sxth	r3, r3
 3104 0096 9AB2     		uxth	r2, r3
 3105 0098 3B69     		ldr	r3, [r7, #16]
 3106 009a 9A81     		strh	r2, [r3, #12]	@ unaligned
 3107 009c 19E0     		b	.L191
 3108              	.L190:
 3109              	.LBB14:
1441:Libraries/lwip-1.4.0/core/tcp_out.c ****   } else {
1442:Libraries/lwip-1.4.0/core/tcp_out.c ****     /* Data segment, copy in one byte from the head of the unacked queue */
1443:Libraries/lwip-1.4.0/core/tcp_out.c ****     struct tcp_hdr *thdr = (struct tcp_hdr *)seg->p->payload;
 3110              		.loc 1 1443 0
 3111 009e FB69     		ldr	r3, [r7, #28]
 3112 00a0 5B68     		ldr	r3, [r3, #4]
 3113 00a2 5B68     		ldr	r3, [r3, #4]
 3114 00a4 FB60     		str	r3, [r7, #12]
1444:Libraries/lwip-1.4.0/core/tcp_out.c ****     char *d = ((char *)p->payload + TCP_HLEN);
 3115              		.loc 1 1444 0
 3116 00a6 7B69     		ldr	r3, [r7, #20]
 3117 00a8 5B68     		ldr	r3, [r3, #4]
 3118 00aa 1433     		adds	r3, r3, #20
 3119 00ac BB60     		str	r3, [r7, #8]
1445:Libraries/lwip-1.4.0/core/tcp_out.c ****     pbuf_copy_partial(seg->p, d, 1, TCPH_HDRLEN(thdr) * 4);
 3120              		.loc 1 1445 0
 3121 00ae FB69     		ldr	r3, [r7, #28]
 3122 00b0 5C68     		ldr	r4, [r3, #4]
 3123 00b2 FB68     		ldr	r3, [r7, #12]
 3124 00b4 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3125 00b6 9BB2     		uxth	r3, r3
 3126 00b8 1846     		mov	r0, r3
 3127 00ba FFF7FEFF 		bl	lwip_ntohs
 3128 00be 0346     		mov	r3, r0
 3129 00c0 1B0B     		lsrs	r3, r3, #12
 3130 00c2 9BB2     		uxth	r3, r3
 3131 00c4 9B00     		lsls	r3, r3, #2
 3132 00c6 9BB2     		uxth	r3, r3
 3133 00c8 0122     		movs	r2, #1
 3134 00ca B968     		ldr	r1, [r7, #8]
 3135 00cc 2046     		mov	r0, r4
 3136 00ce FFF7FEFF 		bl	pbuf_copy_partial
 3137              	.L191:
 3138              	.LBE14:
1446:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
1447:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1448:Libraries/lwip-1.4.0/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1449:Libraries/lwip-1.4.0/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &pcb->local_ip, &pcb->remote_ip,
 3139              		.loc 1 1449 0
 3140 00d2 7968     		ldr	r1, [r7, #4]
 3141 00d4 7B68     		ldr	r3, [r7, #4]
 3142 00d6 1A1D     		adds	r2, r3, #4
 3143 00d8 7B69     		ldr	r3, [r7, #20]
 3144 00da 1B89     		ldrh	r3, [r3, #8]
 3145 00dc 0093     		str	r3, [sp]
 3146 00de 0623     		movs	r3, #6
 3147 00e0 7869     		ldr	r0, [r7, #20]
 3148 00e2 FFF7FEFF 		bl	inet_chksum_pseudo
 3149 00e6 0346     		mov	r3, r0
 3150 00e8 1A46     		mov	r2, r3
 3151 00ea 3B69     		ldr	r3, [r7, #16]
 3152 00ec 1A82     		strh	r2, [r3, #16]	@ unaligned
1450:Libraries/lwip-1.4.0/core/tcp_out.c ****                                       IP_PROTO_TCP, p->tot_len);
1451:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif
1452:Libraries/lwip-1.4.0/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 3153              		.loc 1 1452 0
 3154 00ee 0F4B     		ldr	r3, .L194
 3155 00f0 B3F89030 		ldrh	r3, [r3, #144]
 3156 00f4 0133     		adds	r3, r3, #1
 3157 00f6 9AB2     		uxth	r2, r3
 3158 00f8 0C4B     		ldr	r3, .L194
 3159 00fa A3F89020 		strh	r2, [r3, #144]	@ movhi
1453:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1454:Libraries/lwip-1.4.0/core/tcp_out.c ****   /* Send output to IP */
1455:Libraries/lwip-1.4.0/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
1456:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output_hinted(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP,
1457:Libraries/lwip-1.4.0/core/tcp_out.c ****     &(pcb->addr_hint));
1458:Libraries/lwip-1.4.0/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
1459:Libraries/lwip-1.4.0/core/tcp_out.c ****   ip_output(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP);
 3160              		.loc 1 1459 0
 3161 00fe 7968     		ldr	r1, [r7, #4]
 3162 0100 7B68     		ldr	r3, [r7, #4]
 3163 0102 1A1D     		adds	r2, r3, #4
 3164 0104 7B68     		ldr	r3, [r7, #4]
 3165 0106 987A     		ldrb	r0, [r3, #10]	@ zero_extendqisi2
 3166 0108 0623     		movs	r3, #6
 3167 010a 0193     		str	r3, [sp, #4]
 3168 010c 0023     		movs	r3, #0
 3169 010e 0093     		str	r3, [sp]
 3170 0110 0346     		mov	r3, r0
 3171 0112 7869     		ldr	r0, [r7, #20]
 3172 0114 FFF7FEFF 		bl	ip_output
1460:Libraries/lwip-1.4.0/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
1461:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1462:Libraries/lwip-1.4.0/core/tcp_out.c ****   pbuf_free(p);
 3173              		.loc 1 1462 0
 3174 0118 7869     		ldr	r0, [r7, #20]
 3175 011a FFF7FEFF 		bl	pbuf_free
 3176 011e 02E0     		b	.L183
 3177              	.L192:
1424:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 3178              		.loc 1 1424 0
 3179 0120 00BF     		nop
 3180 0122 00E0     		b	.L183
 3181              	.L193:
1434:Libraries/lwip-1.4.0/core/tcp_out.c ****   }
 3182              		.loc 1 1434 0
 3183 0124 00BF     		nop
 3184              	.L183:
1463:Libraries/lwip-1.4.0/core/tcp_out.c **** 
1464:Libraries/lwip-1.4.0/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: seqno %"U32_F
1465:Libraries/lwip-1.4.0/core/tcp_out.c ****                           " ackno %"U32_F".\n",
1466:Libraries/lwip-1.4.0/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt));
1467:Libraries/lwip-1.4.0/core/tcp_out.c **** }
 3185              		.loc 1 1467 0
 3186 0126 2437     		adds	r7, r7, #36
 3187              		.cfi_def_cfa_offset 12
 3188 0128 BD46     		mov	sp, r7
 3189              		.cfi_def_cfa_register 13
 3190              		@ sp needed
 3191 012a 90BD     		pop	{r4, r7, pc}
 3192              	.L195:
 3193              		.align	2
 3194              	.L194:
 3195 012c 00000000 		.word	lwip_stats
 3196              		.cfi_endproc
 3197              	.LFE32:
 3199              		.text
 3200              	.Letext0:
 3201              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\mach
 3202              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
 3203              		.file 4 "./Libraries/lwip-1.4.0/arch/cc.h"
 3204              		.file 5 "./Libraries/lwip-1.4.0/include/lwip/mem.h"
 3205              		.file 6 "./Libraries/lwip-1.4.0/include/lwip/err.h"
 3206              		.file 7 "./Libraries/lwip-1.4.0/include/lwip/pbuf.h"
 3207              		.file 8 "./Libraries/lwip-1.4.0/include/ipv4/lwip/ip_addr.h"
 3208              		.file 9 "./Libraries/lwip-1.4.0/include/lwip/netif.h"
 3209              		.file 10 "./Libraries/lwip-1.4.0/include/lwip/tcp.h"
 3210              		.file 11 "./Libraries/lwip-1.4.0/include/lwip/tcp_impl.h"
 3211              		.file 12 "./Libraries/lwip-1.4.0/include/lwip/memp.h"
 3212              		.file 13 "./Libraries/lwip-1.4.0/include/lwip/stats.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tcp_out.c
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:20     .text.tcp_output_alloc_header:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:24     .text.tcp_output_alloc_header:00000000 tcp_output_alloc_header
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:155    .text.tcp_send_fin:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:160    .text.tcp_send_fin:00000000 tcp_send_fin
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1387   .text.tcp_enqueue_flags:00000000 tcp_enqueue_flags
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:246    .text.tcp_create_segment:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:250    .text.tcp_create_segment:00000000 tcp_create_segment
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:423    .text.tcp_create_segment:00000114 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:428    .text.tcp_pbuf_prealloc:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:432    .text.tcp_pbuf_prealloc:00000000 tcp_pbuf_prealloc
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:546    .text.tcp_write_checks:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:550    .text.tcp_write_checks:00000000 tcp_write_checks
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:682    .text.tcp_write_checks:000000c4 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:687    .text.tcp_write:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:692    .text.tcp_write:00000000 tcp_write
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1377   .text.tcp_write:0000045c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1382   .text.tcp_enqueue_flags:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1667   .text.tcp_enqueue_flags:000001e0 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1672   .text.tcp_send_empty_ack:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1677   .text.tcp_send_empty_ack:00000000 tcp_send_empty_ack
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1775   .text.tcp_output:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:1780   .text.tcp_output:00000000 tcp_output
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2232   .text.tcp_output_segment:00000000 tcp_output_segment
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2155   .text.tcp_output:00000270 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2158   .text.tcp_output:00000274 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2228   .text.tcp_output_segment:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2450   .text.tcp_output_segment:0000015c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2457   .text.tcp_rst:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2462   .text.tcp_rst:00000000 tcp_rst
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2597   .text.tcp_rst:000000e4 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2602   .text.tcp_rexmit_rto:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2607   .text.tcp_rexmit_rto:00000000 tcp_rexmit_rto
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2687   .text.tcp_rexmit:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2692   .text.tcp_rexmit:00000000 tcp_rexmit
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2794   .text.tcp_rexmit_fast:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2799   .text.tcp_rexmit_fast:00000000 tcp_rexmit_fast
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2902   .text.tcp_keepalive:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2907   .text.tcp_keepalive:00000000 tcp_keepalive
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2994   .text.tcp_keepalive:00000084 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:2999   .text.tcp_zero_window_probe:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:3004   .text.tcp_zero_window_probe:00000000 tcp_zero_window_probe
C:\Users\KHUSHA~1\AppData\Local\Temp\ccBwlRhh.s:3195   .text.tcp_zero_window_probe:0000012c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pbuf_alloc
lwip_htons
lwip_htonl
lwip_ntohs
memp_malloc
pbuf_free
pbuf_header
tcp_seg_free
lwip_stats
memcpy
pbuf_clen
pbuf_cat
tcp_segs_free
inet_chksum_pseudo
ip_output
lwip_ntohl
tcp_input_pcb
ip_route
tcp_ticks
pbuf_copy_partial
