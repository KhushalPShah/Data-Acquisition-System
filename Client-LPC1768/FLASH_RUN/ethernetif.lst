   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ethernetif.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.low_level_init,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	low_level_init:
  25              	.LFB46:
  26              		.file 1 "Libraries/lwip-1.4.0/netif/ethernetif.c"
   1:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
   2:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @file
   3:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Ethernet Interface Skeleton
   4:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
   5:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
   6:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
   7:Libraries/lwip-1.4.0/netif/ethernetif.c **** /*
   8:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * All rights reserved. 
  10:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * 
  11:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Redistribution and use in source and binary forms, with or without modification, 
  12:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * are permitted provided that the following conditions are met:
  13:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
  14:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *    this list of conditions and the following disclaimer.
  16:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *    and/or other materials provided with the distribution.
  19:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *    derived from this software without specific prior written permission. 
  21:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
  22:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
  23:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  24:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
  25:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  26:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
  27:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  28:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  29:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
  30:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  31:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * OF SUCH DAMAGE.
  32:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
  33:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * This file is part of the lwIP TCP/IP stack.
  34:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * 
  35:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
  37:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
  38:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  39:Libraries/lwip-1.4.0/netif/ethernetif.c **** /*
  40:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * This file is a skeleton for developing Ethernet network interface
  41:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * drivers for lwIP. Add code to the low_level functions and do a
  42:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * search-and-replace for the word "ethernetif" to replace it with
  43:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * something that better describes your network interface.
  44:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
  45:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  46:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lwip/opt.h"
  47:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  48:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if 1 /* don't build, this is only a skeleton, see previous comment */
  49:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  50:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lwip/def.h"
  51:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lwip/mem.h"
  52:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lwip/pbuf.h"
  53:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lwip/sys.h"
  54:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include <lwip/stats.h>
  55:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include <lwip/snmp.h>
  56:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "netif/etharp.h"
  57:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "netif/ppp_oe.h"
  58:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "CMSIS/LPC17xx.h"
  59:Libraries/lwip-1.4.0/netif/ethernetif.c **** #include "lpc17xx_emac.h"
  60:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  61:Libraries/lwip-1.4.0/netif/ethernetif.c **** /* Define those to better describe your network interface. */
  62:Libraries/lwip-1.4.0/netif/ethernetif.c **** #define IFNAME0 'e'
  63:Libraries/lwip-1.4.0/netif/ethernetif.c **** #define IFNAME1 'n'
  64:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  65:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
  66:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Helper struct to hold private data used to operate your ethernet interface.
  67:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Keeping the ethernet address of the MAC in this struct is not necessary
  68:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * as it is already kept in the struct netif.
  69:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * But this is only an example, anyway...
  70:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
  71:Libraries/lwip-1.4.0/netif/ethernetif.c **** struct ethernetif {
  72:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct eth_addr *ethaddr;
  73:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* Add whatever per-interface state that is needed here. */
  74:Libraries/lwip-1.4.0/netif/ethernetif.c **** };
  75:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  76:Libraries/lwip-1.4.0/netif/ethernetif.c **** /* Forward declarations. */
  77:Libraries/lwip-1.4.0/netif/ethernetif.c **** void  ethernetif_input(struct netif *netif);
  78:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  79:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
  80:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * In this function, the hardware should be initialized.
  81:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Called from ethernetif_init().
  82:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
  83:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
  84:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *        for this ethernetif
  85:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
  86:Libraries/lwip-1.4.0/netif/ethernetif.c **** static void
  87:Libraries/lwip-1.4.0/netif/ethernetif.c **** low_level_init(struct netif *netif)
  88:Libraries/lwip-1.4.0/netif/ethernetif.c **** {
  27              		.loc 1 88 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  89:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct ethernetif *ethernetif = netif->state;
  40              		.loc 1 89 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a DB69     		ldr	r3, [r3, #28]
  43 000c FB60     		str	r3, [r7, #12]
  90:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
  91:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* set MAC hardware address length */
  92:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr_len = ETHARP_HWADDR_LEN;
  44              		.loc 1 92 0
  45 000e 7B68     		ldr	r3, [r7, #4]
  46 0010 0622     		movs	r2, #6
  47 0012 83F82220 		strb	r2, [r3, #34]
  93:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
  94:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* set MAC hardware address */
  95:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[0] = MYMAC_1;
  48              		.loc 1 95 0
  49 0016 7B68     		ldr	r3, [r7, #4]
  50 0018 1E22     		movs	r2, #30
  51 001a 83F82320 		strb	r2, [r3, #35]
  96:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[1] = MYMAC_2;
  52              		.loc 1 96 0
  53 001e 7B68     		ldr	r3, [r7, #4]
  54 0020 3022     		movs	r2, #48
  55 0022 83F82420 		strb	r2, [r3, #36]
  97:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[2] = MYMAC_3;
  56              		.loc 1 97 0
  57 0026 7B68     		ldr	r3, [r7, #4]
  58 0028 6C22     		movs	r2, #108
  59 002a 83F82520 		strb	r2, [r3, #37]
  98:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[3] = MYMAC_4;
  60              		.loc 1 98 0
  61 002e 7B68     		ldr	r3, [r7, #4]
  62 0030 A222     		movs	r2, #162
  63 0032 83F82620 		strb	r2, [r3, #38]
  99:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[4] = MYMAC_5;
  64              		.loc 1 99 0
  65 0036 7B68     		ldr	r3, [r7, #4]
  66 0038 4522     		movs	r2, #69
  67 003a 83F82720 		strb	r2, [r3, #39]
 100:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hwaddr[5] = MYMAC_6;
  68              		.loc 1 100 0
  69 003e 7B68     		ldr	r3, [r7, #4]
  70 0040 5E22     		movs	r2, #94
  71 0042 83F82820 		strb	r2, [r3, #40]
 101:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 102:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* maximum transfer unit */
 103:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->mtu = 1500;
  72              		.loc 1 103 0
  73 0046 7B68     		ldr	r3, [r7, #4]
  74 0048 40F2DC52 		movw	r2, #1500
  75 004c 1A84     		strh	r2, [r3, #32]	@ movhi
 104:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 105:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* device capabilities */
 106:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 107:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->flags = NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP | NETIF_FLAG_LINK_UP;
  76              		.loc 1 107 0
  77 004e 7B68     		ldr	r3, [r7, #4]
  78 0050 3222     		movs	r2, #50
  79 0052 83F82920 		strb	r2, [r3, #41]
 108:Libraries/lwip-1.4.0/netif/ethernetif.c ****  
 109:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* Do whatever else is needed to initialize interface. */  
 110:Libraries/lwip-1.4.0/netif/ethernetif.c ****   EMAC_Init();
  80              		.loc 1 110 0
  81 0056 FFF7FEFF 		bl	EMAC_Init
 111:Libraries/lwip-1.4.0/netif/ethernetif.c **** }
  82              		.loc 1 111 0
  83 005a 00BF     		nop
  84 005c 1037     		adds	r7, r7, #16
  85              		.cfi_def_cfa_offset 8
  86 005e BD46     		mov	sp, r7
  87              		.cfi_def_cfa_register 13
  88              		@ sp needed
  89 0060 80BD     		pop	{r7, pc}
  90              		.cfi_endproc
  91              	.LFE46:
  93 0062 00BF     		.section	.rodata
  94              		.align	2
  95              	.LC0:
  96 0000 63616E27 		.ascii	"can't send data, much big!\012\000"
  96      74207365 
  96      6E642064 
  96      6174612C 
  96      206D7563 
  97              		.section	.text.low_level_output,"ax",%progbits
  98              		.align	2
  99              		.thumb
 100              		.thumb_func
 102              	low_level_output:
 103              	.LFB47:
 112:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 113:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
 114:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * This function should do the actual transmission of the packet. The packet is
 115:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 116:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * might be chained.
 117:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 118:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 119:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 120:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 121:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 122:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 123:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 124:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 125:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *       to become availale since the stack doesn't retry to send a packet
 126:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 127:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
 128:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 129:Libraries/lwip-1.4.0/netif/ethernetif.c **** static err_t
 130:Libraries/lwip-1.4.0/netif/ethernetif.c **** low_level_output(struct netif *netif, struct pbuf *p)
 131:Libraries/lwip-1.4.0/netif/ethernetif.c **** {
 104              		.loc 1 131 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 88B0     		sub	sp, sp, #32
 113              		.cfi_def_cfa_offset 40
 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 0006 7860     		str	r0, [r7, #4]
 117 0008 3960     		str	r1, [r7]
 132:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct ethernetif *ethernetif = netif->state;
 118              		.loc 1 132 0
 119 000a 7B68     		ldr	r3, [r7, #4]
 120 000c DB69     		ldr	r3, [r3, #28]
 121 000e FB60     		str	r3, [r7, #12]
 133:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct pbuf *q;
 134:Libraries/lwip-1.4.0/netif/ethernetif.c ****   unsigned char *tx_buffer;
 135:Libraries/lwip-1.4.0/netif/ethernetif.c ****   unsigned int error = 0;
 122              		.loc 1 135 0
 123 0010 0023     		movs	r3, #0
 124 0012 7B61     		str	r3, [r7, #20]
 136:Libraries/lwip-1.4.0/netif/ethernetif.c ****   uint32_t len = 0;
 125              		.loc 1 136 0
 126 0014 0023     		movs	r3, #0
 127 0016 3B61     		str	r3, [r7, #16]
 137:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 138:Libraries/lwip-1.4.0/netif/ethernetif.c ****   tx_buffer = (unsigned char *) TX_DESC_PACKET(LPC_EMAC->TxProduceIndex);
 128              		.loc 1 138 0
 129 0018 4FF0A043 		mov	r3, #1342177280
 130 001c D3F82821 		ldr	r2, [r3, #296]
 131 0020 2A4B     		ldr	r3, .L10
 132 0022 1344     		add	r3, r3, r2
 133 0024 DB00     		lsls	r3, r3, #3
 134 0026 1B68     		ldr	r3, [r3]
 135 0028 BB61     		str	r3, [r7, #24]
 139:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 140:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if ETH_PAD_SIZE
 141:Libraries/lwip-1.4.0/netif/ethernetif.c ****   pbuf_header(p, -ETH_PAD_SIZE); /* drop the padding word */
 136              		.loc 1 141 0
 137 002a 6FF00101 		mvn	r1, #1
 138 002e 3868     		ldr	r0, [r7]
 139 0030 FFF7FEFF 		bl	pbuf_header
 142:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif
 143:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 144:Libraries/lwip-1.4.0/netif/ethernetif.c ****   for(q = p; q != NULL; q = q->next) {
 140              		.loc 1 144 0
 141 0034 3B68     		ldr	r3, [r7]
 142 0036 FB61     		str	r3, [r7, #28]
 143 0038 24E0     		b	.L3
 144              	.L6:
 145:Libraries/lwip-1.4.0/netif/ethernetif.c ****     /* Send the data from the pbuf to the interface, one pbuf at a
 146:Libraries/lwip-1.4.0/netif/ethernetif.c ****        time. The size of the data in each pbuf is kept in the ->len
 147:Libraries/lwip-1.4.0/netif/ethernetif.c ****        variable. */
 148:Libraries/lwip-1.4.0/netif/ethernetif.c ****     //send data from(q->payload, q->len);
 149:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  if (((unsigned int)len + q->len) >= (unsigned int) ETH_FRAG_SIZE) {
 145              		.loc 1 149 0
 146 003a FB69     		ldr	r3, [r7, #28]
 147 003c 5B89     		ldrh	r3, [r3, #10]
 148 003e 1A46     		mov	r2, r3
 149 0040 3B69     		ldr	r3, [r7, #16]
 150 0042 1344     		add	r3, r3, r2
 151 0044 B3F5C06F 		cmp	r3, #1536
 152 0048 05D3     		bcc	.L4
 153              	.LBB2:
 150:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		  xprintf("can't send data, much big!\n");
 154              		.loc 1 150 0
 155 004a 2148     		ldr	r0, .L10+4
 156 004c FFF7FEFF 		bl	xprintf
 151:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		  error = 1;
 157              		.loc 1 151 0
 158 0050 0123     		movs	r3, #1
 159 0052 7B61     		str	r3, [r7, #20]
 152:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		  break;
 160              		.loc 1 152 0
 161 0054 19E0     		b	.L5
 162              	.L4:
 163              	.LBE2:
 153:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  }
 154:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  memcpy(tx_buffer, q->payload, q->len);
 164              		.loc 1 154 0 discriminator 2
 165 0056 FB69     		ldr	r3, [r7, #28]
 166 0058 5968     		ldr	r1, [r3, #4]
 167 005a FB69     		ldr	r3, [r7, #28]
 168 005c 5B89     		ldrh	r3, [r3, #10]
 169 005e 1A46     		mov	r2, r3
 170 0060 B869     		ldr	r0, [r7, #24]
 171 0062 FFF7FEFF 		bl	memcpy
 155:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  tx_buffer += q->len;
 172              		.loc 1 155 0 discriminator 2
 173 0066 FB69     		ldr	r3, [r7, #28]
 174 0068 5B89     		ldrh	r3, [r3, #10]
 175 006a 1A46     		mov	r2, r3
 176 006c BB69     		ldr	r3, [r7, #24]
 177 006e 1344     		add	r3, r3, r2
 178 0070 BB61     		str	r3, [r7, #24]
 156:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  len += q->len;
 179              		.loc 1 156 0 discriminator 2
 180 0072 FB69     		ldr	r3, [r7, #28]
 181 0074 5B89     		ldrh	r3, [r3, #10]
 182 0076 1A46     		mov	r2, r3
 183 0078 3B69     		ldr	r3, [r7, #16]
 184 007a 1344     		add	r3, r3, r2
 185 007c 3B61     		str	r3, [r7, #16]
 144:Libraries/lwip-1.4.0/netif/ethernetif.c ****     /* Send the data from the pbuf to the interface, one pbuf at a
 186              		.loc 1 144 0 discriminator 2
 187 007e FB69     		ldr	r3, [r7, #28]
 188 0080 1B68     		ldr	r3, [r3]
 189 0082 FB61     		str	r3, [r7, #28]
 190              	.L3:
 144:Libraries/lwip-1.4.0/netif/ethernetif.c ****     /* Send the data from the pbuf to the interface, one pbuf at a
 191              		.loc 1 144 0 is_stmt 0 discriminator 1
 192 0084 FB69     		ldr	r3, [r7, #28]
 193 0086 002B     		cmp	r3, #0
 194 0088 D7D1     		bne	.L6
 195              	.L5:
 157:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 158:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 159:Libraries/lwip-1.4.0/netif/ethernetif.c ****   //signal that packet should be sent();
 160:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (!error) {
 196              		.loc 1 160 0 is_stmt 1
 197 008a 7B69     		ldr	r3, [r7, #20]
 198 008c 002B     		cmp	r3, #0
 199 008e 0BD1     		bne	.L7
 161:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  EMAC_SendPacket((unsigned char *) TX_DESC_PACKET(LPC_EMAC->TxProduceIndex), len);
 200              		.loc 1 161 0
 201 0090 4FF0A043 		mov	r3, #1342177280
 202 0094 D3F82821 		ldr	r2, [r3, #296]
 203 0098 0C4B     		ldr	r3, .L10
 204 009a 1344     		add	r3, r3, r2
 205 009c DB00     		lsls	r3, r3, #3
 206 009e 1B68     		ldr	r3, [r3]
 207 00a0 3969     		ldr	r1, [r7, #16]
 208 00a2 1846     		mov	r0, r3
 209 00a4 FFF7FEFF 		bl	EMAC_SendPacket
 210              	.L7:
 162:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 163:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 164:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if ETH_PAD_SIZE
 165:Libraries/lwip-1.4.0/netif/ethernetif.c ****   pbuf_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
 211              		.loc 1 165 0
 212 00a8 0221     		movs	r1, #2
 213 00aa 3868     		ldr	r0, [r7]
 214 00ac FFF7FEFF 		bl	pbuf_header
 166:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif
 167:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 168:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (!error) {
 215              		.loc 1 168 0
 216 00b0 7B69     		ldr	r3, [r7, #20]
 217 00b2 002B     		cmp	r3, #0
 218 00b4 05D1     		bne	.L8
 169:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  LINK_STATS_INC(link.xmit);
 219              		.loc 1 169 0
 220 00b6 074B     		ldr	r3, .L10+8
 221 00b8 1B88     		ldrh	r3, [r3]
 222 00ba 0133     		adds	r3, r3, #1
 223 00bc 9AB2     		uxth	r2, r3
 224 00be 054B     		ldr	r3, .L10+8
 225 00c0 1A80     		strh	r2, [r3]	@ movhi
 226              	.L8:
 170:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 171:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 172:Libraries/lwip-1.4.0/netif/ethernetif.c ****   return ERR_OK;
 227              		.loc 1 172 0
 228 00c2 0023     		movs	r3, #0
 173:Libraries/lwip-1.4.0/netif/ethernetif.c **** }
 229              		.loc 1 173 0
 230 00c4 1846     		mov	r0, r3
 231 00c6 2037     		adds	r7, r7, #32
 232              		.cfi_def_cfa_offset 8
 233 00c8 BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 00ca 80BD     		pop	{r7, pc}
 237              	.L11:
 238              		.align	2
 239              	.L10:
 240 00cc 08000104 		.word	67174408
 241 00d0 00000000 		.word	.LC0
 242 00d4 00000000 		.word	lwip_stats
 243              		.cfi_endproc
 244              	.LFE47:
 246              		.section	.rodata
 247              		.align	2
 248              	.LC1:
 249 001c 64726F70 		.ascii	"dropped packet\012\000"
 249      70656420 
 249      7061636B 
 249      65740A00 
 250              		.section	.text.low_level_input,"ax",%progbits
 251              		.align	2
 252              		.thumb
 253              		.thumb_func
 255              	low_level_input:
 256              	.LFB48:
 174:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 175:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
 176:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Should allocate a pbuf and transfer the bytes of the incoming
 177:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * packet from the interface into the pbuf.
 178:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 179:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 180:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 181:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *         NULL on memory error
 182:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
 183:Libraries/lwip-1.4.0/netif/ethernetif.c **** static struct pbuf *
 184:Libraries/lwip-1.4.0/netif/ethernetif.c **** low_level_input(struct netif *netif)
 185:Libraries/lwip-1.4.0/netif/ethernetif.c **** {
 257              		.loc 1 185 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 40
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 8AB0     		sub	sp, sp, #40
 266              		.cfi_def_cfa_offset 48
 267 0004 00AF     		add	r7, sp, #0
 268              		.cfi_def_cfa_register 7
 269 0006 7860     		str	r0, [r7, #4]
 186:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct ethernetif *ethernetif = netif->state;
 270              		.loc 1 186 0
 271 0008 7B68     		ldr	r3, [r7, #4]
 272 000a DB69     		ldr	r3, [r3, #28]
 273 000c 3B61     		str	r3, [r7, #16]
 187:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct pbuf *p, *q;
 188:Libraries/lwip-1.4.0/netif/ethernetif.c ****   u16_t len;
 189:Libraries/lwip-1.4.0/netif/ethernetif.c ****   unsigned int cpylen;
 190:Libraries/lwip-1.4.0/netif/ethernetif.c ****   unsigned char *rx_buffer;
 191:Libraries/lwip-1.4.0/netif/ethernetif.c ****   int idx;
 192:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 193:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (LPC_EMAC->RxProduceIndex == LPC_EMAC->RxConsumeIndex) {
 274              		.loc 1 193 0
 275 000e 4FF0A043 		mov	r3, #1342177280
 276 0012 D3F81421 		ldr	r2, [r3, #276]
 277 0016 4FF0A043 		mov	r3, #1342177280
 278 001a D3F81831 		ldr	r3, [r3, #280]
 279 001e 9A42     		cmp	r2, r3
 280 0020 01D1     		bne	.L13
 194:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  return NULL;
 281              		.loc 1 194 0
 282 0022 0023     		movs	r3, #0
 283 0024 8DE0     		b	.L14
 284              	.L13:
 195:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 196:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 197:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* Obtain the size of the packet and put it into the "len"
 198:Libraries/lwip-1.4.0/netif/ethernetif.c ****      variable. */
 199:Libraries/lwip-1.4.0/netif/ethernetif.c ****   len = (RX_STAT_INFO(LPC_EMAC->RxConsumeIndex) & RINFO_SIZE) - 1;
 285              		.loc 1 199 0
 286 0026 4FF0A043 		mov	r3, #1342177280
 287 002a D3F81821 		ldr	r2, [r3, #280]
 288 002e 474B     		ldr	r3, .L23
 289 0030 1344     		add	r3, r3, r2
 290 0032 DB00     		lsls	r3, r3, #3
 291 0034 1B68     		ldr	r3, [r3]
 292 0036 9BB2     		uxth	r3, r3
 293 0038 C3F30A03 		ubfx	r3, r3, #0, #11
 294 003c 9BB2     		uxth	r3, r3
 295 003e 013B     		subs	r3, r3, #1
 296 0040 7B84     		strh	r3, [r7, #34]	@ movhi
 200:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 201:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if ETH_PAD_SIZE
 202:Libraries/lwip-1.4.0/netif/ethernetif.c ****   len += ETH_PAD_SIZE; /* allow room for Ethernet padding */
 297              		.loc 1 202 0
 298 0042 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 299 0044 0233     		adds	r3, r3, #2
 300 0046 7B84     		strh	r3, [r7, #34]	@ movhi
 203:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif
 204:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 205:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* We allocate a pbuf chain of pbufs from the pool. */
 206:Libraries/lwip-1.4.0/netif/ethernetif.c ****   p = pbuf_alloc(PBUF_RAW, len, PBUF_POOL);
 301              		.loc 1 206 0
 302 0048 7B8C     		ldrh	r3, [r7, #34]
 303 004a 0322     		movs	r2, #3
 304 004c 1946     		mov	r1, r3
 305 004e 0320     		movs	r0, #3
 306 0050 FFF7FEFF 		bl	pbuf_alloc
 307 0054 F860     		str	r0, [r7, #12]
 207:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 208:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (p != NULL) {
 308              		.loc 1 208 0
 309 0056 FB68     		ldr	r3, [r7, #12]
 310 0058 002B     		cmp	r3, #0
 311 005a 50D0     		beq	.L15
 209:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 210:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if ETH_PAD_SIZE
 211:Libraries/lwip-1.4.0/netif/ethernetif.c ****     pbuf_header(p, -ETH_PAD_SIZE); /* drop the padding word */
 312              		.loc 1 211 0
 313 005c 6FF00101 		mvn	r1, #1
 314 0060 F868     		ldr	r0, [r7, #12]
 315 0062 FFF7FEFF 		bl	pbuf_header
 212:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif
 213:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 214:Libraries/lwip-1.4.0/netif/ethernetif.c ****     /* We iterate over the pbuf chain until we have read the entire
 215:Libraries/lwip-1.4.0/netif/ethernetif.c ****      * packet into the pbuf. */
 216:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	rx_buffer = (unsigned char *) RX_DESC_PACKET(LPC_EMAC->RxConsumeIndex);
 316              		.loc 1 216 0
 317 0066 4FF0A043 		mov	r3, #1342177280
 318 006a D3F81831 		ldr	r3, [r3, #280]
 319 006e 03F18063 		add	r3, r3, #67108864
 320 0072 03F58033 		add	r3, r3, #65536
 321 0076 DB00     		lsls	r3, r3, #3
 322 0078 1B68     		ldr	r3, [r3]
 323 007a BB61     		str	r3, [r7, #24]
 217:Libraries/lwip-1.4.0/netif/ethernetif.c ****     for(q = p; q != NULL; q = q->next) {
 324              		.loc 1 217 0
 325 007c FB68     		ldr	r3, [r7, #12]
 326 007e 7B62     		str	r3, [r7, #36]
 327 0080 1DE0     		b	.L16
 328              	.L19:
 218:Libraries/lwip-1.4.0/netif/ethernetif.c ****       /* Read enough bytes to fill this pbuf in the chain. The
 219:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * available data in the pbuf is given by the q->len
 220:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * variable.
 221:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * This does not necessarily have to be a memcpy, you can also preallocate
 222:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * pbufs for a DMA-enabled MAC and after receiving truncate it to the
 223:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * actually received size. In this case, ensure the tot_len member of the
 224:Libraries/lwip-1.4.0/netif/ethernetif.c ****        * pbuf is the sum of the chained pbuf len members.
 225:Libraries/lwip-1.4.0/netif/ethernetif.c ****        */
 226:Libraries/lwip-1.4.0/netif/ethernetif.c ****       //read data into(q->payload, q->len);
 227:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		if (q->len >= len) {
 329              		.loc 1 227 0
 330 0082 7B6A     		ldr	r3, [r7, #36]
 331 0084 5B89     		ldrh	r3, [r3, #10]
 332 0086 7A8C     		ldrh	r2, [r7, #34]
 333 0088 9A42     		cmp	r2, r3
 334 008a 02D8     		bhi	.L17
 228:Libraries/lwip-1.4.0/netif/ethernetif.c **** 			cpylen = len;
 335              		.loc 1 228 0
 336 008c 7B8C     		ldrh	r3, [r7, #34]
 337 008e FB61     		str	r3, [r7, #28]
 338 0090 02E0     		b	.L18
 339              	.L17:
 229:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		} else {
 230:Libraries/lwip-1.4.0/netif/ethernetif.c **** 			cpylen = q->len;
 340              		.loc 1 230 0
 341 0092 7B6A     		ldr	r3, [r7, #36]
 342 0094 5B89     		ldrh	r3, [r3, #10]
 343 0096 FB61     		str	r3, [r7, #28]
 344              	.L18:
 231:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		}
 232:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		memcpy((unsigned char *) q->payload, rx_buffer, cpylen);
 345              		.loc 1 232 0 discriminator 2
 346 0098 7B6A     		ldr	r3, [r7, #36]
 347 009a 5B68     		ldr	r3, [r3, #4]
 348 009c FA69     		ldr	r2, [r7, #28]
 349 009e B969     		ldr	r1, [r7, #24]
 350 00a0 1846     		mov	r0, r3
 351 00a2 FFF7FEFF 		bl	memcpy
 233:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		rx_buffer += cpylen;
 352              		.loc 1 233 0 discriminator 2
 353 00a6 BA69     		ldr	r2, [r7, #24]
 354 00a8 FB69     		ldr	r3, [r7, #28]
 355 00aa 1344     		add	r3, r3, r2
 356 00ac BB61     		str	r3, [r7, #24]
 234:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		len = len - cpylen;
 357              		.loc 1 234 0 discriminator 2
 358 00ae FB69     		ldr	r3, [r7, #28]
 359 00b0 9BB2     		uxth	r3, r3
 360 00b2 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 361 00b4 D31A     		subs	r3, r2, r3
 362 00b6 7B84     		strh	r3, [r7, #34]	@ movhi
 217:Libraries/lwip-1.4.0/netif/ethernetif.c ****       /* Read enough bytes to fill this pbuf in the chain. The
 363              		.loc 1 217 0 discriminator 2
 364 00b8 7B6A     		ldr	r3, [r7, #36]
 365 00ba 1B68     		ldr	r3, [r3]
 366 00bc 7B62     		str	r3, [r7, #36]
 367              	.L16:
 217:Libraries/lwip-1.4.0/netif/ethernetif.c ****       /* Read enough bytes to fill this pbuf in the chain. The
 368              		.loc 1 217 0 is_stmt 0 discriminator 1
 369 00be 7B6A     		ldr	r3, [r7, #36]
 370 00c0 002B     		cmp	r3, #0
 371 00c2 DED1     		bne	.L19
 235:Libraries/lwip-1.4.0/netif/ethernetif.c ****     }
 236:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 237:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	idx = LPC_EMAC->RxConsumeIndex;
 372              		.loc 1 237 0 is_stmt 1
 373 00c4 4FF0A043 		mov	r3, #1342177280
 374 00c8 D3F81831 		ldr	r3, [r3, #280]
 375 00cc 7B61     		str	r3, [r7, #20]
 238:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 239:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	if (++idx == NUM_RX_FRAG) {
 376              		.loc 1 239 0
 377 00ce 7B69     		ldr	r3, [r7, #20]
 378 00d0 0133     		adds	r3, r3, #1
 379 00d2 7B61     		str	r3, [r7, #20]
 380 00d4 7B69     		ldr	r3, [r7, #20]
 381 00d6 042B     		cmp	r3, #4
 382 00d8 01D1     		bne	.L20
 240:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		idx = 0;
 383              		.loc 1 240 0
 384 00da 0023     		movs	r3, #0
 385 00dc 7B61     		str	r3, [r7, #20]
 386              	.L20:
 241:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	}
 242:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 243:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	LPC_EMAC->RxConsumeIndex = idx;
 387              		.loc 1 243 0
 388 00de 4FF0A042 		mov	r2, #1342177280
 389 00e2 7B69     		ldr	r3, [r7, #20]
 390 00e4 C2F81831 		str	r3, [r2, #280]
 244:Libraries/lwip-1.4.0/netif/ethernetif.c ****     //acknowledge that packet has been read();
 245:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 246:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if ETH_PAD_SIZE
 247:Libraries/lwip-1.4.0/netif/ethernetif.c ****     pbuf_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
 391              		.loc 1 247 0
 392 00e8 0221     		movs	r1, #2
 393 00ea F868     		ldr	r0, [r7, #12]
 394 00ec FFF7FEFF 		bl	pbuf_header
 248:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif
 249:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 250:Libraries/lwip-1.4.0/netif/ethernetif.c ****     LINK_STATS_INC(link.recv);
 395              		.loc 1 250 0
 396 00f0 174B     		ldr	r3, .L23+4
 397 00f2 5B88     		ldrh	r3, [r3, #2]
 398 00f4 0133     		adds	r3, r3, #1
 399 00f6 9AB2     		uxth	r2, r3
 400 00f8 154B     		ldr	r3, .L23+4
 401 00fa 5A80     		strh	r2, [r3, #2]	@ movhi
 402 00fc 20E0     		b	.L21
 403              	.L15:
 404              	.LBB3:
 251:Libraries/lwip-1.4.0/netif/ethernetif.c ****   } else {
 252:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  xprintf("dropped packet\n");
 405              		.loc 1 252 0
 406 00fe 1548     		ldr	r0, .L23+8
 407 0100 FFF7FEFF 		bl	xprintf
 253:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  idx = LPC_EMAC->RxConsumeIndex;
 408              		.loc 1 253 0
 409 0104 4FF0A043 		mov	r3, #1342177280
 410 0108 D3F81831 		ldr	r3, [r3, #280]
 411 010c 7B61     		str	r3, [r7, #20]
 254:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 255:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  if (++idx == NUM_RX_FRAG) {
 412              		.loc 1 255 0
 413 010e 7B69     		ldr	r3, [r7, #20]
 414 0110 0133     		adds	r3, r3, #1
 415 0112 7B61     		str	r3, [r7, #20]
 416 0114 7B69     		ldr	r3, [r7, #20]
 417 0116 042B     		cmp	r3, #4
 418 0118 01D1     		bne	.L22
 256:Libraries/lwip-1.4.0/netif/ethernetif.c **** 		  idx = 0;
 419              		.loc 1 256 0
 420 011a 0023     		movs	r3, #0
 421 011c 7B61     		str	r3, [r7, #20]
 422              	.L22:
 257:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  }
 258:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 259:Libraries/lwip-1.4.0/netif/ethernetif.c **** 	  LPC_EMAC->RxConsumeIndex = idx;
 423              		.loc 1 259 0
 424 011e 4FF0A042 		mov	r2, #1342177280
 425 0122 7B69     		ldr	r3, [r7, #20]
 426 0124 C2F81831 		str	r3, [r2, #280]
 260:Libraries/lwip-1.4.0/netif/ethernetif.c ****     LINK_STATS_INC(link.memerr);
 427              		.loc 1 260 0
 428 0128 094B     		ldr	r3, .L23+4
 429 012a 9B89     		ldrh	r3, [r3, #12]
 430 012c 0133     		adds	r3, r3, #1
 431 012e 9AB2     		uxth	r2, r3
 432 0130 074B     		ldr	r3, .L23+4
 433 0132 9A81     		strh	r2, [r3, #12]	@ movhi
 261:Libraries/lwip-1.4.0/netif/ethernetif.c ****     LINK_STATS_INC(link.drop);
 434              		.loc 1 261 0
 435 0134 064B     		ldr	r3, .L23+4
 436 0136 DB88     		ldrh	r3, [r3, #6]
 437 0138 0133     		adds	r3, r3, #1
 438 013a 9AB2     		uxth	r2, r3
 439 013c 044B     		ldr	r3, .L23+4
 440 013e DA80     		strh	r2, [r3, #6]	@ movhi
 441              	.L21:
 442              	.LBE3:
 262:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 263:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 264:Libraries/lwip-1.4.0/netif/ethernetif.c ****   return p;  
 443              		.loc 1 264 0
 444 0140 FB68     		ldr	r3, [r7, #12]
 445              	.L14:
 265:Libraries/lwip-1.4.0/netif/ethernetif.c **** }
 446              		.loc 1 265 0
 447 0142 1846     		mov	r0, r3
 448 0144 2837     		adds	r7, r7, #40
 449              		.cfi_def_cfa_offset 8
 450 0146 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 0148 80BD     		pop	{r7, pc}
 454              	.L24:
 455 014a 00BF     		.align	2
 456              	.L23:
 457 014c 04000104 		.word	67174404
 458 0150 00000000 		.word	lwip_stats
 459 0154 1C000000 		.word	.LC1
 460              		.cfi_endproc
 461              	.LFE48:
 463              		.section	.text.ethernetif_input,"ax",%progbits
 464              		.align	2
 465              		.global	ethernetif_input
 466              		.thumb
 467              		.thumb_func
 469              	ethernetif_input:
 470              	.LFB49:
 266:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 267:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
 268:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * This function should be called when a packet is ready to be read
 269:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 270:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * should handle the actual reception of bytes from the network
 271:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 272:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * the appropriate input function is called.
 273:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 274:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 275:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
 276:Libraries/lwip-1.4.0/netif/ethernetif.c **** void
 277:Libraries/lwip-1.4.0/netif/ethernetif.c **** ethernetif_input(struct netif *netif)
 278:Libraries/lwip-1.4.0/netif/ethernetif.c **** {
 471              		.loc 1 278 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 24
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 86B0     		sub	sp, sp, #24
 480              		.cfi_def_cfa_offset 32
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 7860     		str	r0, [r7, #4]
 279:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct ethernetif *ethernetif;
 280:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct eth_hdr *ethhdr;
 281:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct pbuf *p;
 282:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 283:Libraries/lwip-1.4.0/netif/ethernetif.c ****   ethernetif = netif->state;
 484              		.loc 1 283 0
 485 0008 7B68     		ldr	r3, [r7, #4]
 486 000a DB69     		ldr	r3, [r3, #28]
 487 000c 7B61     		str	r3, [r7, #20]
 284:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 285:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* move received packet into a new pbuf */
 286:Libraries/lwip-1.4.0/netif/ethernetif.c ****   p = low_level_input(netif);
 488              		.loc 1 286 0
 489 000e 7868     		ldr	r0, [r7, #4]
 490 0010 FFF7FEFF 		bl	low_level_input
 491 0014 3861     		str	r0, [r7, #16]
 287:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* no packet could be read, silently ignore this */
 288:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (p == NULL) return;
 492              		.loc 1 288 0
 493 0016 3B69     		ldr	r3, [r7, #16]
 494 0018 002B     		cmp	r3, #0
 495 001a 25D0     		beq	.L32
 289:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* points to packet payload, which starts with an Ethernet header */
 290:Libraries/lwip-1.4.0/netif/ethernetif.c ****   ethhdr = p->payload;
 496              		.loc 1 290 0
 497 001c 3B69     		ldr	r3, [r7, #16]
 498 001e 5B68     		ldr	r3, [r3, #4]
 499 0020 FB60     		str	r3, [r7, #12]
 291:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 292:Libraries/lwip-1.4.0/netif/ethernetif.c ****   switch (htons(ethhdr->type)) {
 500              		.loc 1 292 0
 501 0022 FB68     		ldr	r3, [r7, #12]
 502 0024 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 503 0026 9BB2     		uxth	r3, r3
 504 0028 1846     		mov	r0, r3
 505 002a FFF7FEFF 		bl	lwip_htons
 506 002e 0346     		mov	r3, r0
 507 0030 B3F5006F 		cmp	r3, #2048
 508 0034 03D0     		beq	.L29
 509 0036 40F60602 		movw	r2, #2054
 510 003a 9342     		cmp	r3, r2
 511 003c 0DD1     		bne	.L31
 512              	.L29:
 293:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* IP or ARP packet? */
 294:Libraries/lwip-1.4.0/netif/ethernetif.c ****   case ETHTYPE_IP:
 295:Libraries/lwip-1.4.0/netif/ethernetif.c ****   case ETHTYPE_ARP:
 296:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if PPPOE_SUPPORT
 297:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* PPPoE packet? */
 298:Libraries/lwip-1.4.0/netif/ethernetif.c ****   case ETHTYPE_PPPOEDISC:
 299:Libraries/lwip-1.4.0/netif/ethernetif.c ****   case ETHTYPE_PPPOE:
 300:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif /* PPPOE_SUPPORT */
 301:Libraries/lwip-1.4.0/netif/ethernetif.c ****     /* full packet send to tcpip_thread to process */
 302:Libraries/lwip-1.4.0/netif/ethernetif.c ****     if (netif->input(p, netif)!=ERR_OK)
 513              		.loc 1 302 0
 514 003e 7B68     		ldr	r3, [r7, #4]
 515 0040 1B69     		ldr	r3, [r3, #16]
 516 0042 7968     		ldr	r1, [r7, #4]
 517 0044 3869     		ldr	r0, [r7, #16]
 518 0046 9847     		blx	r3
 519 0048 0346     		mov	r3, r0
 520 004a 002B     		cmp	r3, #0
 521 004c 0ED0     		beq	.L33
 303:Libraries/lwip-1.4.0/netif/ethernetif.c ****      { LWIP_DEBUGF(NETIF_DEBUG, ("ethernetif_input: IP input error\n"));
 304:Libraries/lwip-1.4.0/netif/ethernetif.c ****        pbuf_free(p);
 522              		.loc 1 304 0
 523 004e 3869     		ldr	r0, [r7, #16]
 524 0050 FFF7FEFF 		bl	pbuf_free
 305:Libraries/lwip-1.4.0/netif/ethernetif.c ****        p = NULL;
 525              		.loc 1 305 0
 526 0054 0023     		movs	r3, #0
 527 0056 3B61     		str	r3, [r7, #16]
 306:Libraries/lwip-1.4.0/netif/ethernetif.c ****      }
 307:Libraries/lwip-1.4.0/netif/ethernetif.c ****     break;
 528              		.loc 1 307 0
 529 0058 08E0     		b	.L33
 530              	.L31:
 308:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 309:Libraries/lwip-1.4.0/netif/ethernetif.c ****   default:
 310:Libraries/lwip-1.4.0/netif/ethernetif.c ****     pbuf_free(p);
 531              		.loc 1 310 0
 532 005a 3869     		ldr	r0, [r7, #16]
 533 005c FFF7FEFF 		bl	pbuf_free
 311:Libraries/lwip-1.4.0/netif/ethernetif.c ****     p = NULL;
 534              		.loc 1 311 0
 535 0060 0023     		movs	r3, #0
 536 0062 3B61     		str	r3, [r7, #16]
 312:Libraries/lwip-1.4.0/netif/ethernetif.c ****     break;
 537              		.loc 1 312 0
 538 0064 00BF     		nop
 539 0066 02E0     		b	.L25
 540              	.L32:
 288:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* points to packet payload, which starts with an Ethernet header */
 541              		.loc 1 288 0
 542 0068 00BF     		nop
 543 006a 00E0     		b	.L25
 544              	.L33:
 307:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 545              		.loc 1 307 0
 546 006c 00BF     		nop
 547              	.L25:
 313:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 314:Libraries/lwip-1.4.0/netif/ethernetif.c **** }
 548              		.loc 1 314 0
 549 006e 1837     		adds	r7, r7, #24
 550              		.cfi_def_cfa_offset 8
 551 0070 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0072 80BD     		pop	{r7, pc}
 555              		.cfi_endproc
 556              	.LFE49:
 558              		.section	.text.ethernetif_init,"ax",%progbits
 559              		.align	2
 560              		.global	ethernetif_init
 561              		.thumb
 562              		.thumb_func
 564              	ethernetif_init:
 565              	.LFB50:
 315:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 316:Libraries/lwip-1.4.0/netif/ethernetif.c **** /**
 317:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * Should be called at the beginning of the program to set up the
 318:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 319:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * actual setup of the hardware.
 320:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 321:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 322:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *
 323:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 324:Libraries/lwip-1.4.0/netif/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 325:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 326:Libraries/lwip-1.4.0/netif/ethernetif.c ****  *         any other err_t on error
 327:Libraries/lwip-1.4.0/netif/ethernetif.c ****  */
 328:Libraries/lwip-1.4.0/netif/ethernetif.c **** err_t
 329:Libraries/lwip-1.4.0/netif/ethernetif.c **** ethernetif_init(struct netif *netif)
 330:Libraries/lwip-1.4.0/netif/ethernetif.c **** {
 566              		.loc 1 330 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 16
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 84B0     		sub	sp, sp, #16
 575              		.cfi_def_cfa_offset 24
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 578 0006 7860     		str	r0, [r7, #4]
 331:Libraries/lwip-1.4.0/netif/ethernetif.c ****   struct ethernetif *ethernetif;
 332:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 333:Libraries/lwip-1.4.0/netif/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 334:Libraries/lwip-1.4.0/netif/ethernetif.c ****     
 335:Libraries/lwip-1.4.0/netif/ethernetif.c ****   ethernetif = mem_malloc(sizeof(struct ethernetif));
 579              		.loc 1 335 0
 580 0008 0420     		movs	r0, #4
 581 000a FFF7FEFF 		bl	mem_malloc
 582 000e F860     		str	r0, [r7, #12]
 336:Libraries/lwip-1.4.0/netif/ethernetif.c ****   if (ethernetif == NULL) {
 583              		.loc 1 336 0
 584 0010 FB68     		ldr	r3, [r7, #12]
 585 0012 002B     		cmp	r3, #0
 586 0014 02D1     		bne	.L35
 337:Libraries/lwip-1.4.0/netif/ethernetif.c ****     LWIP_DEBUGF(NETIF_DEBUG, ("ethernetif_init: out of memory\n"));
 338:Libraries/lwip-1.4.0/netif/ethernetif.c ****     return ERR_MEM;
 587              		.loc 1 338 0
 588 0016 4FF0FF33 		mov	r3, #-1
 589 001a 19E0     		b	.L36
 590              	.L35:
 339:Libraries/lwip-1.4.0/netif/ethernetif.c ****   }
 340:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 341:Libraries/lwip-1.4.0/netif/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 342:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* Initialize interface hostname */
 343:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->hostname = "lwip";
 344:Libraries/lwip-1.4.0/netif/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 345:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 346:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /*
 347:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * Initialize the snmp variables and counters inside the struct netif.
 348:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * The last argument should be replaced with your link speed, in units
 349:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * of bits per second.
 350:Libraries/lwip-1.4.0/netif/ethernetif.c ****    */
 351:Libraries/lwip-1.4.0/netif/ethernetif.c ****   NETIF_INIT_SNMP(netif, snmp_ifType_ethernet_csmacd, LINK_SPEED_OF_YOUR_NETIF_IN_BPS);
 352:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 353:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->state = ethernetif;
 591              		.loc 1 353 0
 592 001c 7B68     		ldr	r3, [r7, #4]
 593 001e FA68     		ldr	r2, [r7, #12]
 594 0020 DA61     		str	r2, [r3, #28]
 354:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->name[0] = IFNAME0;
 595              		.loc 1 354 0
 596 0022 7B68     		ldr	r3, [r7, #4]
 597 0024 6522     		movs	r2, #101
 598 0026 83F82A20 		strb	r2, [r3, #42]
 355:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->name[1] = IFNAME1;
 599              		.loc 1 355 0
 600 002a 7B68     		ldr	r3, [r7, #4]
 601 002c 6E22     		movs	r2, #110
 602 002e 83F82B20 		strb	r2, [r3, #43]
 356:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 357:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 358:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 359:Libraries/lwip-1.4.0/netif/ethernetif.c ****    * is available...) */
 360:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->output = etharp_output;
 603              		.loc 1 360 0
 604 0032 7B68     		ldr	r3, [r7, #4]
 605 0034 084A     		ldr	r2, .L37
 606 0036 5A61     		str	r2, [r3, #20]
 361:Libraries/lwip-1.4.0/netif/ethernetif.c ****   netif->linkoutput = low_level_output;
 607              		.loc 1 361 0
 608 0038 7B68     		ldr	r3, [r7, #4]
 609 003a 084A     		ldr	r2, .L37+4
 610 003c 9A61     		str	r2, [r3, #24]
 362:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 363:Libraries/lwip-1.4.0/netif/ethernetif.c ****   ethernetif->ethaddr = (struct eth_addr *)&(netif->hwaddr[0]);
 611              		.loc 1 363 0
 612 003e 7B68     		ldr	r3, [r7, #4]
 613 0040 03F12302 		add	r2, r3, #35
 614 0044 FB68     		ldr	r3, [r7, #12]
 615 0046 1A60     		str	r2, [r3]
 364:Libraries/lwip-1.4.0/netif/ethernetif.c ****   
 365:Libraries/lwip-1.4.0/netif/ethernetif.c ****   /* initialize the hardware */
 366:Libraries/lwip-1.4.0/netif/ethernetif.c ****   low_level_init(netif);
 616              		.loc 1 366 0
 617 0048 7868     		ldr	r0, [r7, #4]
 618 004a FFF7FEFF 		bl	low_level_init
 367:Libraries/lwip-1.4.0/netif/ethernetif.c **** 
 368:Libraries/lwip-1.4.0/netif/ethernetif.c ****   return ERR_OK;
 619              		.loc 1 368 0
 620 004e 0023     		movs	r3, #0
 621              	.L36:
 369:Libraries/lwip-1.4.0/netif/ethernetif.c **** }
 622              		.loc 1 369 0
 623 0050 1846     		mov	r0, r3
 624 0052 1037     		adds	r7, r7, #16
 625              		.cfi_def_cfa_offset 8
 626 0054 BD46     		mov	sp, r7
 627              		.cfi_def_cfa_register 13
 628              		@ sp needed
 629 0056 80BD     		pop	{r7, pc}
 630              	.L38:
 631              		.align	2
 632              	.L37:
 633 0058 00000000 		.word	etharp_output
 634 005c 00000000 		.word	low_level_output
 635              		.cfi_endproc
 636              	.LFE50:
 638              		.text
 639              	.Letext0:
 640              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\mach
 641              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
 642              		.file 4 "./Libraries/lwip-1.4.0/arch/cc.h"
 643              		.file 5 "./Libraries/lwip-1.4.0/include/lwip/mem.h"
 644              		.file 6 "./Libraries/lwip-1.4.0/include/lwip/err.h"
 645              		.file 7 "./Libraries/lwip-1.4.0/include/lwip/pbuf.h"
 646              		.file 8 "./Libraries/lwip-1.4.0/include/lwip/stats.h"
 647              		.file 9 "./Libraries/lwip-1.4.0/include/ipv4/lwip/ip_addr.h"
 648              		.file 10 "./Libraries/lwip-1.4.0/include/lwip/netif.h"
 649              		.file 11 "./Libraries/lwip-1.4.0/include/netif/etharp.h"
 650              		.file 12 "./CMSIS/LPC17xx.h"
 651              		.file 13 "./CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ethernetif.c
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:20     .text.low_level_init:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:24     .text.low_level_init:00000000 low_level_init
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:94     .rodata:00000000 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:98     .text.low_level_output:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:102    .text.low_level_output:00000000 low_level_output
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:240    .text.low_level_output:000000cc $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:251    .text.low_level_input:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:255    .text.low_level_input:00000000 low_level_input
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:457    .text.low_level_input:0000014c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:464    .text.ethernetif_input:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:469    .text.ethernetif_input:00000000 ethernetif_input
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:559    .text.ethernetif_init:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:564    .text.ethernetif_init:00000000 ethernetif_init
C:\Users\KHUSHA~1\AppData\Local\Temp\cc9fWgxs.s:633    .text.ethernetif_init:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
EMAC_Init
pbuf_header
xprintf
memcpy
EMAC_SendPacket
lwip_stats
pbuf_alloc
lwip_htons
pbuf_free
mem_malloc
etharp_output
