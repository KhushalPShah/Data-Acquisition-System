   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"clock-arch.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.clock_init,"ax",%progbits
  20              		.align	2
  21              		.global	clock_init
  22              		.thumb
  23              		.thumb_func
  25              	clock_init:
  26              	.LFB0:
  27              		.file 1 "clock-arch.c"
   1:clock-arch.c  **** /*
   2:clock-arch.c  ****  * Copyright (c) 2006, Swedish Institute of Computer Science.
   3:clock-arch.c  ****  * All rights reserved.
   4:clock-arch.c  ****  *
   5:clock-arch.c  ****  * Redistribution and use in source and binary forms, with or without
   6:clock-arch.c  ****  * modification, are permitted provided that the following conditions
   7:clock-arch.c  ****  * are met:
   8:clock-arch.c  ****  * 1. Redistributions of source code must retain the above copyright
   9:clock-arch.c  ****  *    notice, this list of conditions and the following disclaimer.
  10:clock-arch.c  ****  * 2. Redistributions in binary form must reproduce the above copyright
  11:clock-arch.c  ****  *    notice, this list of conditions and the following disclaimer in the
  12:clock-arch.c  ****  *    documentation and/or other materials provided with the distribution.
  13:clock-arch.c  ****  * 3. Neither the name of the Institute nor the names of its contributors
  14:clock-arch.c  ****  *    may be used to endorse or promote products derived from this software
  15:clock-arch.c  ****  *    without specific prior written permission.
  16:clock-arch.c  ****  *
  17:clock-arch.c  ****  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
  18:clock-arch.c  ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:clock-arch.c  ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:clock-arch.c  ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
  21:clock-arch.c  ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  22:clock-arch.c  ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  23:clock-arch.c  ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  24:clock-arch.c  ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  25:clock-arch.c  ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  26:clock-arch.c  ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  27:clock-arch.c  ****  * SUCH DAMAGE.
  28:clock-arch.c  ****  *
  29:clock-arch.c  ****  * This file is part of the uIP TCP/IP stack
  30:clock-arch.c  ****  *
  31:clock-arch.c  ****  * $Id: clock-arch.c,v 1.2 2006/06/12 08:00:31 adam Exp $
  32:clock-arch.c  ****  */
  33:clock-arch.c  **** 
  34:clock-arch.c  **** /**
  35:clock-arch.c  ****  * \file
  36:clock-arch.c  ****  *         Implementation of architecture-specific clock functionality
  37:clock-arch.c  ****  * \author
  38:clock-arch.c  ****  *         Adam Dunkels <adam@sics.se>
  39:clock-arch.c  ****  */
  40:clock-arch.c  **** 
  41:clock-arch.c  **** #include "clock-arch.h"
  42:clock-arch.c  **** #include "lpc17xx_systick.h"
  43:clock-arch.c  **** 
  44:clock-arch.c  **** extern volatile UNS_32 systick_counter;
  45:clock-arch.c  **** #define Ticks  systick_counter
  46:clock-arch.c  **** 
  47:clock-arch.c  **** /*--------------------------- clock_init ---------------------------------*/
  48:clock-arch.c  **** 
  49:clock-arch.c  **** void clock_init(void)
  50:clock-arch.c  **** {
  28              		.loc 1 50 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  51:clock-arch.c  **** 	init_timer(CLOCK_CONF_SECOND);
  38              		.loc 1 51 0
  39 0004 6420     		movs	r0, #100
  40 0006 FFF7FEFF 		bl	init_timer
  52:clock-arch.c  **** 
  53:clock-arch.c  **** }
  41              		.loc 1 53 0
  42 000a 00BF     		nop
  43 000c 80BD     		pop	{r7, pc}
  44              		.cfi_endproc
  45              	.LFE0:
  47 000e 00BF     		.section	.text.clock_time,"ax",%progbits
  48              		.align	2
  49              		.global	clock_time
  50              		.thumb
  51              		.thumb_func
  53              	clock_time:
  54              	.LFB1:
  54:clock-arch.c  **** 
  55:clock-arch.c  **** /*--------------------------- clock_time ---------------------------------*/
  56:clock-arch.c  **** 
  57:clock-arch.c  **** clock_time_t clock_time(void)
  58:clock-arch.c  **** {
  55              		.loc 1 58 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60 0000 80B4     		push	{r7}
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 7, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  59:clock-arch.c  ****   return((clock_time_t)Ticks);
  65              		.loc 1 59 0
  66 0004 024B     		ldr	r3, .L4
  67 0006 1B68     		ldr	r3, [r3]
  60:clock-arch.c  **** }
  68              		.loc 1 60 0
  69 0008 1846     		mov	r0, r3
  70 000a BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 000c 80BC     		pop	{r7}
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 000e 7047     		bx	lr
  77              	.L5:
  78              		.align	2
  79              	.L4:
  80 0010 00000000 		.word	systick_counter
  81              		.cfi_endproc
  82              	.LFE1:
  84              		.text
  85              	.Letext0:
  86              		.file 2 "clock-arch.h"
  87              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\mach
  88              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
  89              		.file 5 "./Libraries/NXP/Drivers/include/lpc_types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 clock-arch.c
C:\Users\KHUSHA~1\AppData\Local\Temp\ccEFsg9e.s:20     .text.clock_init:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccEFsg9e.s:25     .text.clock_init:00000000 clock_init
C:\Users\KHUSHA~1\AppData\Local\Temp\ccEFsg9e.s:48     .text.clock_time:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccEFsg9e.s:53     .text.clock_time:00000000 clock_time
C:\Users\KHUSHA~1\AppData\Local\Temp\ccEFsg9e.s:80     .text.clock_time:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
init_timer
systick_counter
