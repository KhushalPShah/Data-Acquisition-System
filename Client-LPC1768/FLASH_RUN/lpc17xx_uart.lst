   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"lpc17xx_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	uartCbsDat
  20              		.section	.bss.uartCbsDat,"aw",%nobits
  21              		.align	2
  24              	uartCbsDat:
  25 0000 00000000 		.space	64
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	pfnModemCbs
  27              		.section	.bss.pfnModemCbs,"aw",%nobits
  28              		.align	2
  31              	pfnModemCbs:
  32 0000 00000000 		.space	4
  33              		.section	.text.getUartNum,"ax",%progbits
  34              		.align	2
  35              		.global	getUartNum
  36              		.thumb
  37              		.thumb_func
  39              	getUartNum:
  40              	.LFB29:
  41              		.file 1 "Libraries/NXP/Drivers/source/lpc17xx_uart.c"
   1:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
   2:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @file	: lpc17xx_uart.c
   3:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief	: Contains all functions support for UART firmware library on LPC17xx
   4:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @version	: 1.0
   5:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @date	: 18. Mar. 2009
   6:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @author	: HieuNguyen
   7:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **************************************************************************
   8:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Software that is described herein is for illustrative purposes only
   9:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * which provides customers with programming information regarding the
  10:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * products. This software is supplied "AS IS" without any warranties.
  11:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * NXP Semiconductors assumes no responsibility or liability for the
  12:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * use of the software, conveys no license or title under any patent,
  13:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * copyright, or mask work right to the product. NXP Semiconductors
  14:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * reserves the right to make changes in the software without
  15:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * notification. NXP Semiconductors also make no representation or
  16:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * warranty that such application will be suitable for the specified
  17:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * use without further testing or modification.
  18:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
  19:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  20:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Peripheral group ----------------------------------------------------------- */
  21:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @addtogroup UART
  22:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  23:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  24:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  25:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Includes ------------------------------------------------------------------- */
  26:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_uart.h"
  27:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_clkpwr.h"
  28:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  29:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* If this source file built with example, the LPC17xx FW library configuration
  30:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  31:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * otherwise the default FW library configuration file must be included instead
  32:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  33:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef __BUILD_WITH_EXAMPLE__
  34:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_libcfg.h"
  35:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #else
  36:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_libcfg_default.h"
  37:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  38:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  39:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  40:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART
  41:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  42:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Types -------------------------------------------------------------- */
  43:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Types
  44:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  45:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  46:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  47:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  48:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief UART call-back function type definitions
  49:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  50:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** typedef struct {
  51:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnTxCbs_Type *pfnTxCbs; 	// Transmit callback
  52:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnRxCbs_Type *pfnRxCbs;		// Receive callback
  53:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnABCbs_Type *pfnABCbs;		// Auto-Baudrate callback
  54:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnErrCbs_Type *pfnErrCbs;	// Error callback
  55:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** } UART_CBS_Type;
  56:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  57:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  58:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
  59:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  60:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  61:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  62:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Variables ---------------------------------------------------------- */
  63:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Variables
  64:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  65:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  66:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  67:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  68:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** Call-back function pointer data */
  69:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** UART_CBS_Type uartCbsDat[4] = {
  70:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  71:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  72:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  73:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  74:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** };
  75:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  76:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** UART1 modem status interrupt callback pointer data */
  77:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** fnModemCbs_Type *pfnModemCbs = NULL;
  78:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  79:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  80:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
  81:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  82:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  83:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  84:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Functions ---------------------------------------------------------- */
  85:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Functions
  86:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  87:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  88:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  89:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  90:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Get UART number due to UART peripheral pointer
  91:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART pointer
  92:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		UART number
  93:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  94:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t getUartNum(LPC_UART_TypeDef *UARTx) {
  42              		.loc 1 94 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 8
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46              		@ link register save eliminated.
  47 0000 80B4     		push	{r7}
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 7, -4
  50 0002 83B0     		sub	sp, sp, #12
  51              		.cfi_def_cfa_offset 16
  52 0004 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  54 0006 7860     		str	r0, [r7, #4]
  95:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0) return (0);
  55              		.loc 1 95 0
  56 0008 7B68     		ldr	r3, [r7, #4]
  57 000a 0B4A     		ldr	r2, .L6
  58 000c 9342     		cmp	r3, r2
  59 000e 01D1     		bne	.L2
  60              		.loc 1 95 0 is_stmt 0 discriminator 1
  61 0010 0023     		movs	r3, #0
  62 0012 0CE0     		b	.L3
  63              	.L2:
  96:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1) return (1);
  64              		.loc 1 96 0 is_stmt 1
  65 0014 7B68     		ldr	r3, [r7, #4]
  66 0016 094A     		ldr	r2, .L6+4
  67 0018 9342     		cmp	r3, r2
  68 001a 01D1     		bne	.L4
  69              		.loc 1 96 0 is_stmt 0 discriminator 1
  70 001c 0123     		movs	r3, #1
  71 001e 06E0     		b	.L3
  72              	.L4:
  97:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2) return (2);
  73              		.loc 1 97 0 is_stmt 1
  74 0020 7B68     		ldr	r3, [r7, #4]
  75 0022 074A     		ldr	r2, .L6+8
  76 0024 9342     		cmp	r3, r2
  77 0026 01D1     		bne	.L5
  78              		.loc 1 97 0 is_stmt 0 discriminator 1
  79 0028 0223     		movs	r3, #2
  80 002a 00E0     		b	.L3
  81              	.L5:
  98:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else return (3);
  82              		.loc 1 98 0 is_stmt 1
  83 002c 0323     		movs	r3, #3
  84              	.L3:
  99:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
  85              		.loc 1 99 0
  86 002e 1846     		mov	r0, r3
  87 0030 0C37     		adds	r7, r7, #12
  88              		.cfi_def_cfa_offset 4
  89 0032 BD46     		mov	sp, r7
  90              		.cfi_def_cfa_register 13
  91              		@ sp needed
  92 0034 80BC     		pop	{r7}
  93              		.cfi_restore 7
  94              		.cfi_def_cfa_offset 0
  95 0036 7047     		bx	lr
  96              	.L7:
  97              		.align	2
  98              	.L6:
  99 0038 00C00040 		.word	1073790976
 100 003c 00000140 		.word	1073807360
 101 0040 00800940 		.word	1074364416
 102              		.cfi_endproc
 103              	.LFE29:
 105              		.section	.text.uart_set_divisors,"ax",%progbits
 106              		.align	2
 107              		.global	uart_set_divisors
 108              		.thumb
 109              		.thumb_func
 111              	uart_set_divisors:
 112              	.LFB30:
 100:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 101:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 102:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Determines best dividers to get a target clock rate
 103:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Pointer to selected UART peripheral, should be
 104:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART0, UART1, UART2 or UART3.
 105:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	baudrate Desired UART baud rate.
 106:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Error status.
 107:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 108:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 109:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate)
 110:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 113              		.loc 1 110 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 56
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 8EB0     		sub	sp, sp, #56
 122              		.cfi_def_cfa_offset 64
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 126 0008 3960     		str	r1, [r7]
 111:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	Status errorStatus = ERROR;
 127              		.loc 1 111 0
 128 000a 0023     		movs	r3, #0
 129 000c 87F83730 		strb	r3, [r7, #55]
 112:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 113:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t uClk;
 114:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t calcBaudrate = 0;
 130              		.loc 1 114 0
 131 0010 0023     		movs	r3, #0
 132 0012 FB60     		str	r3, [r7, #12]
 115:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t temp = 0;
 133              		.loc 1 115 0
 134 0014 0023     		movs	r3, #0
 135 0016 BB60     		str	r3, [r7, #8]
 116:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 117:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t mulFracDiv, dividerAddFracDiv;
 118:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t diviser = 0 ;
 136              		.loc 1 118 0
 137 0018 0023     		movs	r3, #0
 138 001a 7B62     		str	r3, [r7, #36]
 119:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t mulFracDivOptimal = 1;
 139              		.loc 1 119 0
 140 001c 0123     		movs	r3, #1
 141 001e 3B62     		str	r3, [r7, #32]
 120:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t dividerAddOptimal = 0;
 142              		.loc 1 120 0
 143 0020 0023     		movs	r3, #0
 144 0022 FB61     		str	r3, [r7, #28]
 121:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t diviserOptimal = 0;
 145              		.loc 1 121 0
 146 0024 0023     		movs	r3, #0
 147 0026 BB61     		str	r3, [r7, #24]
 122:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 123:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t relativeError = 0;
 148              		.loc 1 123 0
 149 0028 0023     		movs	r3, #0
 150 002a 7B61     		str	r3, [r7, #20]
 124:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t relativeOptimalError = 100000;
 151              		.loc 1 124 0
 152 002c 724B     		ldr	r3, .L30
 153 002e 3B61     		str	r3, [r7, #16]
 125:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 126:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* get UART block clock */
 127:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0)
 154              		.loc 1 127 0
 155 0030 7B68     		ldr	r3, [r7, #4]
 156 0032 724A     		ldr	r2, .L30+4
 157 0034 9342     		cmp	r3, r2
 158 0036 04D1     		bne	.L9
 128:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 129:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART0);
 159              		.loc 1 129 0
 160 0038 0620     		movs	r0, #6
 161 003a FFF7FEFF 		bl	CLKPWR_GetPCLK
 162 003e 3863     		str	r0, [r7, #48]
 163 0040 15E0     		b	.L10
 164              	.L9:
 130:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 131:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 165              		.loc 1 131 0
 166 0042 7B68     		ldr	r3, [r7, #4]
 167 0044 6E4A     		ldr	r2, .L30+8
 168 0046 9342     		cmp	r3, r2
 169 0048 04D1     		bne	.L11
 132:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 133:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART1);
 170              		.loc 1 133 0
 171 004a 0820     		movs	r0, #8
 172 004c FFF7FEFF 		bl	CLKPWR_GetPCLK
 173 0050 3863     		str	r0, [r7, #48]
 174 0052 0CE0     		b	.L10
 175              	.L11:
 134:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 135:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2)
 176              		.loc 1 135 0
 177 0054 7B68     		ldr	r3, [r7, #4]
 178 0056 6B4A     		ldr	r2, .L30+12
 179 0058 9342     		cmp	r3, r2
 180 005a 04D1     		bne	.L12
 136:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 137:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART2);
 181              		.loc 1 137 0
 182 005c 3020     		movs	r0, #48
 183 005e FFF7FEFF 		bl	CLKPWR_GetPCLK
 184 0062 3863     		str	r0, [r7, #48]
 185 0064 03E0     		b	.L10
 186              	.L12:
 138:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 139:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else /*mthomas, avoid warning: if (UARTx == LPC_UART3) */
 140:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 141:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART3);
 187              		.loc 1 141 0
 188 0066 3220     		movs	r0, #50
 189 0068 FFF7FEFF 		bl	CLKPWR_GetPCLK
 190 006c 3863     		str	r0, [r7, #48]
 191              	.L10:
 142:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 143:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 144:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 145:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uClk = uClk >> 4; /* div by 16 */
 192              		.loc 1 145 0
 193 006e 3B6B     		ldr	r3, [r7, #48]
 194 0070 1B09     		lsrs	r3, r3, #4
 195 0072 3B63     		str	r3, [r7, #48]
 146:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* In the Uart IP block, baud rate is calculated using FDR and DLL-DLM registers
 147:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* The formula is :
 148:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* BaudRate= uClk * (mulFracDiv/(mulFracDiv+dividerAddFracDiv) / (16 * (DLL)
 149:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* It involves floating point calculations. That's the reason the formulae are adjusted with
 150:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* Multiply and divide method.*/
 151:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* The value of mulFracDiv and dividerAddFracDiv should comply to the following expressions:
 152:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* 0 < mulFracDiv <= 15, 0 <= dividerAddFracDiv <= 15 */
 153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	for (mulFracDiv = 1 ; mulFracDiv <= 15 ;mulFracDiv++)
 196              		.loc 1 153 0
 197 0074 0123     		movs	r3, #1
 198 0076 FB62     		str	r3, [r7, #44]
 199 0078 56E0     		b	.L13
 200              	.L23:
 154:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	for (dividerAddFracDiv = 0 ; dividerAddFracDiv <= 15 ;dividerAddFracDiv++)
 201              		.loc 1 155 0
 202 007a 0023     		movs	r3, #0
 203 007c BB62     		str	r3, [r7, #40]
 204 007e 48E0     		b	.L14
 205              	.L20:
 156:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 157:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  temp = (mulFracDiv * uClk) / ((mulFracDiv + dividerAddFracDiv));
 206              		.loc 1 157 0
 207 0080 FB6A     		ldr	r3, [r7, #44]
 208 0082 3A6B     		ldr	r2, [r7, #48]
 209 0084 02FB03F2 		mul	r2, r2, r3
 210 0088 F96A     		ldr	r1, [r7, #44]
 211 008a BB6A     		ldr	r3, [r7, #40]
 212 008c 0B44     		add	r3, r3, r1
 213 008e B2FBF3F3 		udiv	r3, r2, r3
 214 0092 BB60     		str	r3, [r7, #8]
 158:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 159:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  diviser = temp / baudrate;
 215              		.loc 1 159 0
 216 0094 BA68     		ldr	r2, [r7, #8]
 217 0096 3B68     		ldr	r3, [r7]
 218 0098 B2FBF3F3 		udiv	r3, r2, r3
 219 009c 7B62     		str	r3, [r7, #36]
 160:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  if ((temp % baudrate) > (baudrate / 2))
 220              		.loc 1 160 0
 221 009e BB68     		ldr	r3, [r7, #8]
 222 00a0 3A68     		ldr	r2, [r7]
 223 00a2 B3FBF2F2 		udiv	r2, r3, r2
 224 00a6 3968     		ldr	r1, [r7]
 225 00a8 01FB02F2 		mul	r2, r1, r2
 226 00ac 9A1A     		subs	r2, r3, r2
 227 00ae 3B68     		ldr	r3, [r7]
 228 00b0 5B08     		lsrs	r3, r3, #1
 229 00b2 9A42     		cmp	r2, r3
 230 00b4 02D9     		bls	.L15
 161:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		diviser++;
 231              		.loc 1 161 0
 232 00b6 7B6A     		ldr	r3, [r7, #36]
 233 00b8 0133     		adds	r3, r3, #1
 234 00ba 7B62     		str	r3, [r7, #36]
 235              	.L15:
 162:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 163:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  if (diviser > 2 && diviser < 65536)
 236              		.loc 1 163 0
 237 00bc 7B6A     		ldr	r3, [r7, #36]
 238 00be 022B     		cmp	r3, #2
 239 00c0 24D9     		bls	.L16
 240              		.loc 1 163 0 is_stmt 0 discriminator 1
 241 00c2 7B6A     		ldr	r3, [r7, #36]
 242 00c4 B3F5803F 		cmp	r3, #65536
 243 00c8 20D2     		bcs	.L16
 164:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  {
 165:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		calcBaudrate = temp / diviser;
 244              		.loc 1 165 0 is_stmt 1
 245 00ca BA68     		ldr	r2, [r7, #8]
 246 00cc 7B6A     		ldr	r3, [r7, #36]
 247 00ce B2FBF3F3 		udiv	r3, r2, r3
 248 00d2 FB60     		str	r3, [r7, #12]
 166:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 167:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (calcBaudrate <= baudrate)
 249              		.loc 1 167 0
 250 00d4 FA68     		ldr	r2, [r7, #12]
 251 00d6 3B68     		ldr	r3, [r7]
 252 00d8 9A42     		cmp	r2, r3
 253 00da 04D8     		bhi	.L17
 168:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeError = baudrate - calcBaudrate;
 254              		.loc 1 168 0
 255 00dc 3A68     		ldr	r2, [r7]
 256 00de FB68     		ldr	r3, [r7, #12]
 257 00e0 D31A     		subs	r3, r2, r3
 258 00e2 7B61     		str	r3, [r7, #20]
 259 00e4 03E0     		b	.L18
 260              	.L17:
 169:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 170:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeError = calcBaudrate - baudrate;
 261              		.loc 1 170 0
 262 00e6 FA68     		ldr	r2, [r7, #12]
 263 00e8 3B68     		ldr	r3, [r7]
 264 00ea D31A     		subs	r3, r2, r3
 265 00ec 7B61     		str	r3, [r7, #20]
 266              	.L18:
 171:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 172:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((relativeError < relativeOptimalError))
 267              		.loc 1 172 0
 268 00ee 7A69     		ldr	r2, [r7, #20]
 269 00f0 3B69     		ldr	r3, [r7, #16]
 270 00f2 9A42     		cmp	r2, r3
 271 00f4 0AD2     		bcs	.L16
 173:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 174:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  mulFracDivOptimal = mulFracDiv ;
 272              		.loc 1 174 0
 273 00f6 FB6A     		ldr	r3, [r7, #44]
 274 00f8 3B62     		str	r3, [r7, #32]
 175:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  dividerAddOptimal = dividerAddFracDiv;
 275              		.loc 1 175 0
 276 00fa BB6A     		ldr	r3, [r7, #40]
 277 00fc FB61     		str	r3, [r7, #28]
 176:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  diviserOptimal = diviser;
 278              		.loc 1 176 0
 279 00fe 7B6A     		ldr	r3, [r7, #36]
 280 0100 BB61     		str	r3, [r7, #24]
 177:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeOptimalError = relativeError;
 281              		.loc 1 177 0
 282 0102 7B69     		ldr	r3, [r7, #20]
 283 0104 3B61     		str	r3, [r7, #16]
 178:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  if (relativeError == 0)
 284              		.loc 1 178 0
 285 0106 7B69     		ldr	r3, [r7, #20]
 286 0108 002B     		cmp	r3, #0
 287 010a 06D0     		beq	.L28
 288              	.L16:
 155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 289              		.loc 1 155 0 discriminator 2
 290 010c BB6A     		ldr	r3, [r7, #40]
 291 010e 0133     		adds	r3, r3, #1
 292 0110 BB62     		str	r3, [r7, #40]
 293              	.L14:
 155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 294              		.loc 1 155 0 is_stmt 0 discriminator 1
 295 0112 BB6A     		ldr	r3, [r7, #40]
 296 0114 0F2B     		cmp	r3, #15
 297 0116 B3D9     		bls	.L20
 298 0118 00E0     		b	.L19
 299              	.L28:
 179:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 300              		.loc 1 179 0 is_stmt 1
 301 011a 00BF     		nop
 302              	.L19:
 180:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 181:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  } /* End of if */
 182:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} /* end of inner for loop */
 183:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (relativeError == 0)
 303              		.loc 1 183 0
 304 011c 7B69     		ldr	r3, [r7, #20]
 305 011e 002B     		cmp	r3, #0
 306 0120 06D0     		beq	.L29
 153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 307              		.loc 1 153 0 discriminator 2
 308 0122 FB6A     		ldr	r3, [r7, #44]
 309 0124 0133     		adds	r3, r3, #1
 310 0126 FB62     		str	r3, [r7, #44]
 311              	.L13:
 153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 312              		.loc 1 153 0 is_stmt 0 discriminator 1
 313 0128 FB6A     		ldr	r3, [r7, #44]
 314 012a 0F2B     		cmp	r3, #15
 315 012c A5D9     		bls	.L23
 316 012e 00E0     		b	.L22
 317              	.L29:
 184:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  break;
 318              		.loc 1 184 0 is_stmt 1
 319 0130 00BF     		nop
 320              	.L22:
 185:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} /* end of outer for loop  */
 186:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 187:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (relativeOptimalError < ((baudrate * UART_ACCEPTED_BAUDRATE_ERROR)/100))
 321              		.loc 1 187 0
 322 0132 3A68     		ldr	r2, [r7]
 323 0134 1346     		mov	r3, r2
 324 0136 5B00     		lsls	r3, r3, #1
 325 0138 1344     		add	r3, r3, r2
 326 013a 334A     		ldr	r2, .L30+16
 327 013c A2FB0323 		umull	r2, r3, r2, r3
 328 0140 5A09     		lsrs	r2, r3, #5
 329 0142 3B69     		ldr	r3, [r7, #16]
 330 0144 9A42     		cmp	r2, r3
 331 0146 51D9     		bls	.L24
 188:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 189:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 332              		.loc 1 189 0
 333 0148 7B68     		ldr	r3, [r7, #4]
 334 014a 2D4A     		ldr	r2, .L30+8
 335 014c 9342     		cmp	r3, r2
 336 014e 23D1     		bne	.L25
 190:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 191:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 337              		.loc 1 191 0
 338 0150 7B68     		ldr	r3, [r7, #4]
 339 0152 1B7B     		ldrb	r3, [r3, #12]
 340 0154 DBB2     		uxtb	r3, r3
 341 0156 63F07F03 		orn	r3, r3, #127
 342 015a DAB2     		uxtb	r2, r3
 343 015c 7B68     		ldr	r3, [r7, #4]
 344 015e 1A73     		strb	r2, [r3, #12]
 192:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(diviserOptimal);
 345              		.loc 1 192 0
 346 0160 BB69     		ldr	r3, [r7, #24]
 347 0162 1B0A     		lsrs	r3, r3, #8
 348 0164 DAB2     		uxtb	r2, r3
 349 0166 7B68     		ldr	r3, [r7, #4]
 350 0168 1A71     		strb	r2, [r3, #4]
 193:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(diviserOptimal);
 351              		.loc 1 193 0
 352 016a BB69     		ldr	r3, [r7, #24]
 353 016c DAB2     		uxtb	r2, r3
 354 016e 7B68     		ldr	r3, [r7, #4]
 355 0170 1A70     		strb	r2, [r3]
 194:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 195:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 356              		.loc 1 195 0
 357 0172 7B68     		ldr	r3, [r7, #4]
 358 0174 1B7B     		ldrb	r3, [r3, #12]
 359 0176 DBB2     		uxtb	r3, r3
 360 0178 03F07F03 		and	r3, r3, #127
 361 017c DAB2     		uxtb	r2, r3
 362 017e 7B68     		ldr	r3, [r7, #4]
 363 0180 1A73     		strb	r2, [r3, #12]
 196:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(mulFracDivOptimal) \
 364              		.loc 1 196 0
 365 0182 3B6A     		ldr	r3, [r7, #32]
 366 0184 1B01     		lsls	r3, r3, #4
 367 0186 DAB2     		uxtb	r2, r3
 197:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					| UART_FDR_DIVADDVAL(dividerAddOptimal)) & UART_FDR_BITMASK;
 368              		.loc 1 197 0
 369 0188 FB69     		ldr	r3, [r7, #28]
 370 018a 03F00F03 		and	r3, r3, #15
 371 018e 1343     		orrs	r3, r3, r2
 372 0190 DAB2     		uxtb	r2, r3
 196:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(mulFracDivOptimal) \
 373              		.loc 1 196 0
 374 0192 7B68     		ldr	r3, [r7, #4]
 375 0194 9A62     		str	r2, [r3, #40]
 376 0196 26E0     		b	.L26
 377              	.L25:
 198:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 199:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 200:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 201:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
 378              		.loc 1 201 0
 379 0198 7B68     		ldr	r3, [r7, #4]
 380 019a 1B7B     		ldrb	r3, [r3, #12]
 381 019c DBB2     		uxtb	r3, r3
 382 019e 63F07F03 		orn	r3, r3, #127
 383 01a2 DAB2     		uxtb	r2, r3
 384 01a4 7B68     		ldr	r3, [r7, #4]
 385 01a6 1A73     		strb	r2, [r3, #12]
 202:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(diviserOptimal);
 386              		.loc 1 202 0
 387 01a8 BB69     		ldr	r3, [r7, #24]
 388 01aa 1B0A     		lsrs	r3, r3, #8
 389 01ac DAB2     		uxtb	r2, r3
 390 01ae 7B68     		ldr	r3, [r7, #4]
 391 01b0 1A71     		strb	r2, [r3, #4]
 203:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(diviserOptimal);
 392              		.loc 1 203 0
 393 01b2 BB69     		ldr	r3, [r7, #24]
 394 01b4 DAB2     		uxtb	r2, r3
 395 01b6 7B68     		ldr	r3, [r7, #4]
 396 01b8 1A70     		strb	r2, [r3]
 204:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 205:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 397              		.loc 1 205 0
 398 01ba 7B68     		ldr	r3, [r7, #4]
 399 01bc 1B7B     		ldrb	r3, [r3, #12]
 400 01be DBB2     		uxtb	r3, r3
 401 01c0 03F07F03 		and	r3, r3, #127
 402 01c4 DAB2     		uxtb	r2, r3
 403 01c6 7B68     		ldr	r3, [r7, #4]
 404 01c8 1A73     		strb	r2, [r3, #12]
 206:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->FDR = (UART_FDR_MULVAL(mulFracDivOptimal) \
 405              		.loc 1 206 0
 406 01ca 3B6A     		ldr	r3, [r7, #32]
 407 01cc DBB2     		uxtb	r3, r3
 408 01ce 1B01     		lsls	r3, r3, #4
 409 01d0 DAB2     		uxtb	r2, r3
 410 01d2 FB69     		ldr	r3, [r7, #28]
 411 01d4 DBB2     		uxtb	r3, r3
 412 01d6 03F00F03 		and	r3, r3, #15
 413 01da DBB2     		uxtb	r3, r3
 414 01dc 1343     		orrs	r3, r3, r2
 415 01de DAB2     		uxtb	r2, r3
 416 01e0 7B68     		ldr	r3, [r7, #4]
 417 01e2 83F82820 		strb	r2, [r3, #40]
 418              	.L26:
 207:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					| UART_FDR_DIVADDVAL(dividerAddOptimal)) & UART_FDR_BITMASK;
 208:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 209:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		errorStatus = SUCCESS;
 419              		.loc 1 209 0
 420 01e6 0123     		movs	r3, #1
 421 01e8 87F83730 		strb	r3, [r7, #55]
 422              	.L24:
 210:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 211:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 212:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return errorStatus;
 423              		.loc 1 212 0
 424 01ec 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 213:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 425              		.loc 1 213 0
 426 01f0 1846     		mov	r0, r3
 427 01f2 3837     		adds	r7, r7, #56
 428              		.cfi_def_cfa_offset 8
 429 01f4 BD46     		mov	sp, r7
 430              		.cfi_def_cfa_register 13
 431              		@ sp needed
 432 01f6 80BD     		pop	{r7, pc}
 433              	.L31:
 434              		.align	2
 435              	.L30:
 436 01f8 A0860100 		.word	100000
 437 01fc 00C00040 		.word	1073790976
 438 0200 00000140 		.word	1073807360
 439 0204 00800940 		.word	1074364416
 440 0208 1F85EB51 		.word	1374389535
 441              		.cfi_endproc
 442              	.LFE30:
 444              		.section	.text.UART_GenIntHandler,"ax",%progbits
 445              		.align	2
 446              		.global	UART_GenIntHandler
 447              		.thumb
 448              		.thumb_func
 450              	UART_GenIntHandler:
 451              	.LFB31:
 214:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 215:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 216:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		General UART interrupt handler and router
 217:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral, should be UART0..3
 218:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
 219:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
 220:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:
 221:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - Handles transmit, receive, and status interrupts for the UART.
 222:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Based on the interrupt status, routes the interrupt to the
 223:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * respective call-back to be handled by the user application using
 224:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * this driver.
 225:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - If callback is not installed, corresponding interrupt will be disabled
 226:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - All these interrupt source below will be checked:
 227:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *   		- Transmit Holding Register Empty.
 228:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Received Data Available and Character Time Out.
 229:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Receive Line Status (not implemented)
 230:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- End of auto-baud interrupt (not implemented)
 231:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Auto-Baudrate Time-Out interrupt (not implemented)
 232:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Modem Status interrupt (UART0 Modem functionality)
 233:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- CTS signal transition interrupt (UART0 Modem functionality)
 234:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 235:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_GenIntHandler(LPC_UART_TypeDef *UARTx)
 236:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 452              		.loc 1 236 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 32
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 88B0     		sub	sp, sp, #32
 461              		.cfi_def_cfa_offset 40
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 237:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t pUart, modemsts;
 238:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t intsrc, tmp, tmp1;
 239:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 240:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	pUart = getUartNum(UARTx);
 465              		.loc 1 240 0
 466 0008 7868     		ldr	r0, [r7, #4]
 467 000a FFF7FEFF 		bl	getUartNum
 468 000e 0346     		mov	r3, r0
 469 0010 FB77     		strb	r3, [r7, #31]
 241:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 242:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* Determine the interrupt source */
 243:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	intsrc = UARTx->IIR;
 470              		.loc 1 243 0
 471 0012 7B68     		ldr	r3, [r7, #4]
 472 0014 9B68     		ldr	r3, [r3, #8]
 473 0016 BB61     		str	r3, [r7, #24]
 244:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
 474              		.loc 1 244 0
 475 0018 BB69     		ldr	r3, [r7, #24]
 476 001a 03F00E03 		and	r3, r3, #14
 477 001e 7B61     		str	r3, [r7, #20]
 245:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 246:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/*
 247:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 * In case of using UART1 with full modem,
 248:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 * interrupt ID = 0 that means modem status interrupt has been detected
 249:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 */
 250:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (pUart == 1) {
 478              		.loc 1 250 0
 479 0020 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 480 0022 012B     		cmp	r3, #1
 481 0024 15D1     		bne	.L33
 251:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (tmp == 0){
 482              		.loc 1 251 0
 483 0026 7B69     		ldr	r3, [r7, #20]
 484 0028 002B     		cmp	r3, #0
 485 002a 12D1     		bne	.L33
 252:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Check Modem status
 253:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			modemsts = LPC_UART1->MSR & UART1_MSR_BITMASK;
 486              		.loc 1 253 0
 487 002c 4B4B     		ldr	r3, .L45
 488 002e 1B7E     		ldrb	r3, [r3, #24]
 489 0030 FB74     		strb	r3, [r7, #19]
 254:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Call modem status call-back
 255:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (pfnModemCbs != NULL){
 490              		.loc 1 255 0
 491 0032 4B4B     		ldr	r3, .L45+4
 492 0034 1B68     		ldr	r3, [r3]
 493 0036 002B     		cmp	r3, #0
 494 0038 05D0     		beq	.L34
 256:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				pfnModemCbs(modemsts);
 495              		.loc 1 256 0
 496 003a 494B     		ldr	r3, .L45+4
 497 003c 1B68     		ldr	r3, [r3]
 498 003e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 499 0040 1046     		mov	r0, r2
 500 0042 9847     		blx	r3
 501 0044 05E0     		b	.L33
 502              	.L34:
 257:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 258:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// disable modem status interrupt and CTS status change interrupt
 259:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// if its callback is not installed
 260:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			else {
 261:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				LPC_UART1->IER &= ~(UART1_IER_MSINT_EN | UART1_IER_CTSINT_EN);
 503              		.loc 1 261 0
 504 0046 454A     		ldr	r2, .L45
 505 0048 444B     		ldr	r3, .L45
 506 004a 5B68     		ldr	r3, [r3, #4]
 507 004c 23F08803 		bic	r3, r3, #136
 508 0050 5360     		str	r3, [r2, #4]
 509              	.L33:
 262:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 263:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 264:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 265:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 266:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receive Line Status
 267:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS){
 510              		.loc 1 267 0
 511 0052 7B69     		ldr	r3, [r7, #20]
 512 0054 062B     		cmp	r3, #6
 513 0056 23D1     		bne	.L35
 268:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Check line status
 269:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp1 = UARTx->LSR;
 514              		.loc 1 269 0
 515 0058 7B68     		ldr	r3, [r7, #4]
 516 005a 1B7D     		ldrb	r3, [r3, #20]
 517 005c DBB2     		uxtb	r3, r3
 518 005e FB60     		str	r3, [r7, #12]
 270:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Mask out the Receive Ready and Transmit Holding empty status
 271:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp1 &= (UART_LSR_OE | UART_LSR_PE | UART_LSR_FE \
 519              		.loc 1 271 0
 520 0060 FB68     		ldr	r3, [r7, #12]
 521 0062 03F09E03 		and	r3, r3, #158
 522 0066 FB60     		str	r3, [r7, #12]
 272:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				| UART_LSR_BI | UART_LSR_RXFE);
 273:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// If any error exist
 274:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (tmp1) {
 523              		.loc 1 274 0
 524 0068 FB68     		ldr	r3, [r7, #12]
 525 006a 002B     		cmp	r3, #0
 526 006c 18D0     		beq	.L35
 275:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Call Call-back function with error input value
 276:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (uartCbsDat[pUart].pfnErrCbs != NULL) {
 527              		.loc 1 276 0
 528 006e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 529 0070 3C4A     		ldr	r2, .L45+8
 530 0072 1B01     		lsls	r3, r3, #4
 531 0074 1344     		add	r3, r3, r2
 532 0076 0C33     		adds	r3, r3, #12
 533 0078 1B68     		ldr	r3, [r3]
 534 007a 002B     		cmp	r3, #0
 535 007c 0AD0     		beq	.L36
 277:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				uartCbsDat[pUart].pfnErrCbs(tmp1);
 536              		.loc 1 277 0
 537 007e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 538 0080 384A     		ldr	r2, .L45+8
 539 0082 1B01     		lsls	r3, r3, #4
 540 0084 1344     		add	r3, r3, r2
 541 0086 0C33     		adds	r3, r3, #12
 542 0088 1B68     		ldr	r3, [r3]
 543 008a FA68     		ldr	r2, [r7, #12]
 544 008c D2B2     		uxtb	r2, r2
 545 008e 1046     		mov	r0, r2
 546 0090 9847     		blx	r3
 547 0092 05E0     		b	.L35
 548              	.L36:
 278:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 279:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Disable interrupt if its call-back is not install
 280:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			else {
 281:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UARTx->IER &= ~(UART_IER_RLSINT_EN);
 549              		.loc 1 281 0
 550 0094 7B68     		ldr	r3, [r7, #4]
 551 0096 5B68     		ldr	r3, [r3, #4]
 552 0098 23F00402 		bic	r2, r3, #4
 553 009c 7B68     		ldr	r3, [r7, #4]
 554 009e 5A60     		str	r2, [r3, #4]
 555              	.L35:
 282:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 283:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 284:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 285:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 286:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receive Data Available or Character time-out
 287:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI)){
 556              		.loc 1 287 0
 557 00a0 7B69     		ldr	r3, [r7, #20]
 558 00a2 042B     		cmp	r3, #4
 559 00a4 02D0     		beq	.L37
 560              		.loc 1 287 0 is_stmt 0 discriminator 1
 561 00a6 7B69     		ldr	r3, [r7, #20]
 562 00a8 0C2B     		cmp	r3, #12
 563 00aa 15D1     		bne	.L38
 564              	.L37:
 288:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Call Rx call back function
 289:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnRxCbs != NULL) {
 565              		.loc 1 289 0 is_stmt 1
 566 00ac FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 567 00ae 2D4A     		ldr	r2, .L45+8
 568 00b0 1B01     		lsls	r3, r3, #4
 569 00b2 1344     		add	r3, r3, r2
 570 00b4 0433     		adds	r3, r3, #4
 571 00b6 1B68     		ldr	r3, [r3]
 572 00b8 002B     		cmp	r3, #0
 573 00ba 07D0     		beq	.L39
 290:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnRxCbs();
 574              		.loc 1 290 0
 575 00bc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 576 00be 294A     		ldr	r2, .L45+8
 577 00c0 1B01     		lsls	r3, r3, #4
 578 00c2 1344     		add	r3, r3, r2
 579 00c4 0433     		adds	r3, r3, #4
 580 00c6 1B68     		ldr	r3, [r3]
 581 00c8 9847     		blx	r3
 582 00ca 05E0     		b	.L38
 583              	.L39:
 291:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 292:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt if its call-back is not install
 293:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else {
 294:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_RBRINT_EN);
 584              		.loc 1 294 0
 585 00cc 7B68     		ldr	r3, [r7, #4]
 586 00ce 5B68     		ldr	r3, [r3, #4]
 587 00d0 23F00102 		bic	r2, r3, #1
 588 00d4 7B68     		ldr	r3, [r7, #4]
 589 00d6 5A60     		str	r2, [r3, #4]
 590              	.L38:
 295:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 296:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 297:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 298:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Transmit Holding Empty
 299:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE){
 591              		.loc 1 299 0
 592 00d8 7B69     		ldr	r3, [r7, #20]
 593 00da 022B     		cmp	r3, #2
 594 00dc 13D1     		bne	.L40
 300:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Call Tx call back function
 301:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnTxCbs != NULL) {
 595              		.loc 1 301 0
 596 00de FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 597 00e0 204A     		ldr	r2, .L45+8
 598 00e2 1B01     		lsls	r3, r3, #4
 599 00e4 1344     		add	r3, r3, r2
 600 00e6 1B68     		ldr	r3, [r3]
 601 00e8 002B     		cmp	r3, #0
 602 00ea 06D0     		beq	.L41
 302:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnTxCbs();
 603              		.loc 1 302 0
 604 00ec FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 605 00ee 1D4A     		ldr	r2, .L45+8
 606 00f0 1B01     		lsls	r3, r3, #4
 607 00f2 1344     		add	r3, r3, r2
 608 00f4 1B68     		ldr	r3, [r3]
 609 00f6 9847     		blx	r3
 610 00f8 05E0     		b	.L40
 611              	.L41:
 303:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 304:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt if its call-back is not install
 305:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else {
 306:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_THREINT_EN);
 612              		.loc 1 306 0
 613 00fa 7B68     		ldr	r3, [r7, #4]
 614 00fc 5B68     		ldr	r3, [r3, #4]
 615 00fe 23F00202 		bic	r2, r3, #2
 616 0102 7B68     		ldr	r3, [r7, #4]
 617 0104 5A60     		str	r2, [r3, #4]
 618              	.L40:
 307:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 308:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 309:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 310:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	intsrc &= (UART_IIR_ABEO_INT | UART_IIR_ABTO_INT);
 619              		.loc 1 310 0
 620 0106 BB69     		ldr	r3, [r7, #24]
 621 0108 03F44073 		and	r3, r3, #768
 622 010c BB61     		str	r3, [r7, #24]
 311:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Check if End of auto-baudrate interrupt or Auto baudrate time out
 312:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (intsrc){
 623              		.loc 1 312 0
 624 010e BB69     		ldr	r3, [r7, #24]
 625 0110 002B     		cmp	r3, #0
 626 0112 1ED0     		beq	.L44
 313:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Clear interrupt pending
 314:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ACR |= ((intsrc & UART_IIR_ABEO_INT) ? UART_ACR_ABEOINT_CLR : 0) \
 627              		.loc 1 314 0
 628 0114 7B68     		ldr	r3, [r7, #4]
 629 0116 1A6A     		ldr	r2, [r3, #32]
 315:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 						| ((intsrc & UART_IIR_ABTO_INT) ? UART_ACR_ABTOINT_CLR : 0);
 630              		.loc 1 315 0
 631 0118 BB69     		ldr	r3, [r7, #24]
 632 011a 03F44073 		and	r3, r3, #768
 314:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 						| ((intsrc & UART_IIR_ABTO_INT) ? UART_ACR_ABTOINT_CLR : 0);
 633              		.loc 1 314 0
 634 011e 1A43     		orrs	r2, r2, r3
 635 0120 7B68     		ldr	r3, [r7, #4]
 636 0122 1A62     		str	r2, [r3, #32]
 316:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnABCbs != NULL) {
 637              		.loc 1 316 0
 638 0124 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 639 0126 0F4A     		ldr	r2, .L45+8
 640 0128 1B01     		lsls	r3, r3, #4
 641 012a 1344     		add	r3, r3, r2
 642 012c 0833     		adds	r3, r3, #8
 643 012e 1B68     		ldr	r3, [r3]
 644 0130 002B     		cmp	r3, #0
 645 0132 08D0     		beq	.L43
 317:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnABCbs(intsrc);
 646              		.loc 1 317 0
 647 0134 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 648 0136 0B4A     		ldr	r2, .L45+8
 649 0138 1B01     		lsls	r3, r3, #4
 650 013a 1344     		add	r3, r3, r2
 651 013c 0833     		adds	r3, r3, #8
 652 013e 1B68     		ldr	r3, [r3]
 653 0140 B869     		ldr	r0, [r7, #24]
 654 0142 9847     		blx	r3
 318:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		} else {
 319:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Disable End of AB interrupt
 320:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_ABEOINT_EN | UART_IER_ABTOINT_EN);
 321:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 322:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 323:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 655              		.loc 1 323 0
 656 0144 05E0     		b	.L44
 657              	.L43:
 320:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 658              		.loc 1 320 0
 659 0146 7B68     		ldr	r3, [r7, #4]
 660 0148 5B68     		ldr	r3, [r3, #4]
 661 014a 23F44072 		bic	r2, r3, #768
 662 014e 7B68     		ldr	r3, [r7, #4]
 663 0150 5A60     		str	r2, [r3, #4]
 664              	.L44:
 665              		.loc 1 323 0
 666 0152 00BF     		nop
 667 0154 2037     		adds	r7, r7, #32
 668              		.cfi_def_cfa_offset 8
 669 0156 BD46     		mov	sp, r7
 670              		.cfi_def_cfa_register 13
 671              		@ sp needed
 672 0158 80BD     		pop	{r7, pc}
 673              	.L46:
 674 015a 00BF     		.align	2
 675              	.L45:
 676 015c 00000140 		.word	1073807360
 677 0160 00000000 		.word	pfnModemCbs
 678 0164 00000000 		.word	uartCbsDat
 679              		.cfi_endproc
 680              	.LFE31:
 682              		.section	.text.UART_DeInit,"ax",%progbits
 683              		.align	2
 684              		.global	UART_DeInit
 685              		.thumb
 686              		.thumb_func
 688              	UART_DeInit:
 689              	.LFB32:
 324:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 325:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
 326:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
 327:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
 328:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 329:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 330:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Public Functions ----------------------------------------------------------- */
 331:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @addtogroup UART_Public_Functions
 332:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
 333:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
 334:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 335:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 336:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		De-initializes the UARTx peripheral registers to their
 337:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                  default reset values.
 338:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 339:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 340:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 341:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 342:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_DeInit(LPC_UART_TypeDef* UARTx)
 343:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 690              		.loc 1 343 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694 0000 80B5     		push	{r7, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
 698 0002 82B0     		sub	sp, sp, #8
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 702 0006 7860     		str	r0, [r7, #4]
 344:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// For debug mode
 345:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 346:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 347:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 703              		.loc 1 347 0
 704 0008 0021     		movs	r1, #0
 705 000a 7868     		ldr	r0, [r7, #4]
 706 000c FFF7FEFF 		bl	UART_TxCmd
 348:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 349:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART0
 350:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0)
 707              		.loc 1 350 0
 708 0010 7B68     		ldr	r3, [r7, #4]
 709 0012 124A     		ldr	r2, .L53
 710 0014 9342     		cmp	r3, r2
 711 0016 03D1     		bne	.L48
 351:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 352:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 353:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, DISABLE);
 712              		.loc 1 353 0
 713 0018 0021     		movs	r1, #0
 714 001a 0820     		movs	r0, #8
 715 001c FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 716              	.L48:
 354:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 355:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 356:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 357:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
 358:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 717              		.loc 1 358 0
 718 0020 7B68     		ldr	r3, [r7, #4]
 719 0022 0F4A     		ldr	r2, .L53+4
 720 0024 9342     		cmp	r3, r2
 721 0026 03D1     		bne	.L49
 359:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 360:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 361:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, DISABLE);
 722              		.loc 1 361 0
 723 0028 0021     		movs	r1, #0
 724 002a 1020     		movs	r0, #16
 725 002c FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 726              	.L49:
 362:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 363:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 364:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 365:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART2
 366:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART2)
 727              		.loc 1 366 0
 728 0030 7B68     		ldr	r3, [r7, #4]
 729 0032 0C4A     		ldr	r2, .L53+8
 730 0034 9342     		cmp	r3, r2
 731 0036 04D1     		bne	.L50
 367:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 368:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 369:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, DISABLE);
 732              		.loc 1 369 0
 733 0038 0021     		movs	r1, #0
 734 003a 4FF08070 		mov	r0, #16777216
 735 003e FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 736              	.L50:
 370:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 372:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 373:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 374:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 737              		.loc 1 374 0
 738 0042 7B68     		ldr	r3, [r7, #4]
 739 0044 084A     		ldr	r2, .L53+12
 740 0046 9342     		cmp	r3, r2
 741 0048 04D1     		bne	.L52
 375:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 376:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 377:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, DISABLE);
 742              		.loc 1 377 0
 743 004a 0021     		movs	r1, #0
 744 004c 4FF00070 		mov	r0, #33554432
 745 0050 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 746              	.L52:
 378:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 379:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 380:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 747              		.loc 1 380 0
 748 0054 00BF     		nop
 749 0056 0837     		adds	r7, r7, #8
 750              		.cfi_def_cfa_offset 8
 751 0058 BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 005a 80BD     		pop	{r7, pc}
 755              	.L54:
 756              		.align	2
 757              	.L53:
 758 005c 00C00040 		.word	1073790976
 759 0060 00000140 		.word	1073807360
 760 0064 00800940 		.word	1074364416
 761 0068 00C00940 		.word	1074380800
 762              		.cfi_endproc
 763              	.LFE32:
 765              		.section	.text.UART_Init,"ax",%progbits
 766              		.align	2
 767              		.global	UART_Init
 768              		.thumb
 769              		.thumb_func
 771              	UART_Init:
 772              	.LFB33:
 381:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 382:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 383:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Initializes the UARTx peripheral according to the specified
 384:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *               parameters in the UART_ConfigStruct.
 385:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 386:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 387:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UART_ConfigStruct Pointer to a UART_CFG_Type structure
 388:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    that contains the configuration information for the
 389:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    specified UART peripheral.
 390:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 391:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 392:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_Init(LPC_UART_TypeDef *UARTx, UART_CFG_Type *UART_ConfigStruct)
 393:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 773              		.loc 1 393 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 16
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 84B0     		sub	sp, sp, #16
 782              		.cfi_def_cfa_offset 24
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 0006 7860     		str	r0, [r7, #4]
 786 0008 3960     		str	r1, [r7]
 394:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 395:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 396:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// For debug mode
 397:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 398:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_DATABIT(UART_ConfigStruct->Databits));
 399:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_STOPBIT(UART_ConfigStruct->Stopbits));
 400:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_PARITY(UART_ConfigStruct->Parity));
 401:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 402:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART0
 403:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 787              		.loc 1 403 0
 788 000a 7B68     		ldr	r3, [r7, #4]
 789 000c 894A     		ldr	r2, .L92
 790 000e 9342     		cmp	r3, r2
 791 0010 03D1     		bne	.L56
 404:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 405:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 406:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, ENABLE);
 792              		.loc 1 406 0
 793 0012 0121     		movs	r1, #1
 794 0014 0820     		movs	r0, #8
 795 0016 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 796              	.L56:
 407:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 408:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 409:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 410:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
 411:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 797              		.loc 1 411 0
 798 001a 7B68     		ldr	r3, [r7, #4]
 799 001c 864A     		ldr	r2, .L92+4
 800 001e 9342     		cmp	r3, r2
 801 0020 03D1     		bne	.L57
 412:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 413:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 414:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, ENABLE);
 802              		.loc 1 414 0
 803 0022 0121     		movs	r1, #1
 804 0024 1020     		movs	r0, #16
 805 0026 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 806              	.L57:
 415:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 416:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 417:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 418:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART2
 419:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
 807              		.loc 1 419 0
 808 002a 7B68     		ldr	r3, [r7, #4]
 809 002c 834A     		ldr	r2, .L92+8
 810 002e 9342     		cmp	r3, r2
 811 0030 04D1     		bne	.L58
 420:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 421:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 422:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
 812              		.loc 1 422 0
 813 0032 0121     		movs	r1, #1
 814 0034 4FF08070 		mov	r0, #16777216
 815 0038 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 816              	.L58:
 423:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 424:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 425:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 426:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 427:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART3)
 817              		.loc 1 427 0
 818 003c 7B68     		ldr	r3, [r7, #4]
 819 003e 804A     		ldr	r2, .L92+12
 820 0040 9342     		cmp	r3, r2
 821 0042 04D1     		bne	.L59
 428:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 429:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 430:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);
 822              		.loc 1 430 0
 823 0044 0121     		movs	r1, #1
 824 0046 4FF00070 		mov	r0, #33554432
 825 004a FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 826              	.L59:
 431:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 432:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 433:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 434:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 827              		.loc 1 434 0
 828 004e 7B68     		ldr	r3, [r7, #4]
 829 0050 794A     		ldr	r2, .L92+4
 830 0052 9342     		cmp	r3, r2
 831 0054 42D1     		bne	.L60
 435:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 436:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* FIFOs are empty */
 437:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN \
 832              		.loc 1 437 0
 833 0056 7B68     		ldr	r3, [r7, #4]
 834 0058 0722     		movs	r2, #7
 835 005a 1A72     		strb	r2, [r3, #8]
 438:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				| UART_FCR_RX_RS | UART_FCR_TX_RS);
 439:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable FIFO
 440:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = 0;
 836              		.loc 1 440 0
 837 005c 7B68     		ldr	r3, [r7, #4]
 838 005e 0022     		movs	r2, #0
 839 0060 1A72     		strb	r2, [r3, #8]
 441:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 442:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 443:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_RDR)
 840              		.loc 1 443 0
 841 0062 03E0     		b	.L61
 842              	.L62:
 444:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 445:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = ((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR;
 843              		.loc 1 445 0
 844 0064 7B68     		ldr	r3, [r7, #4]
 845 0066 1B78     		ldrb	r3, [r3]
 846 0068 DBB2     		uxtb	r3, r3
 847 006a FB60     		str	r3, [r7, #12]
 848              	.L61:
 443:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 849              		.loc 1 443 0
 850 006c 7B68     		ldr	r3, [r7, #4]
 851 006e 1B7D     		ldrb	r3, [r3, #20]
 852 0070 DBB2     		uxtb	r3, r3
 853 0072 03F00103 		and	r3, r3, #1
 854 0076 002B     		cmp	r3, #0
 855 0078 F4D1     		bne	.L62
 446:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 447:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 448:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = UART_TER_TXEN;
 856              		.loc 1 448 0
 857 007a 7B68     		ldr	r3, [r7, #4]
 858 007c 8022     		movs	r2, #128
 859 007e 83F83020 		strb	r2, [r3, #48]
 449:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Wait for current transmit complete
 450:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_THRE));
 860              		.loc 1 450 0
 861 0082 00BF     		nop
 862              	.L63:
 863              		.loc 1 450 0 is_stmt 0 discriminator 1
 864 0084 7B68     		ldr	r3, [r7, #4]
 865 0086 1B7D     		ldrb	r3, [r3, #20]
 866 0088 DBB2     		uxtb	r3, r3
 867 008a 03F02003 		and	r3, r3, #32
 868 008e 002B     		cmp	r3, #0
 869 0090 F8D0     		beq	.L63
 451:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable Tx
 452:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = 0;
 870              		.loc 1 452 0 is_stmt 1
 871 0092 7B68     		ldr	r3, [r7, #4]
 872 0094 0022     		movs	r2, #0
 873 0096 83F83020 		strb	r2, [r3, #48]
 453:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 454:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt
 455:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER = 0;
 874              		.loc 1 455 0
 875 009a 7B68     		ldr	r3, [r7, #4]
 876 009c 0022     		movs	r2, #0
 877 009e 5A60     		str	r2, [r3, #4]
 456:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set LCR to default state
 457:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = 0;
 878              		.loc 1 457 0
 879 00a0 7B68     		ldr	r3, [r7, #4]
 880 00a2 0022     		movs	r2, #0
 881 00a4 1A73     		strb	r2, [r3, #12]
 458:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set ACR to default state
 459:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 882              		.loc 1 459 0
 883 00a6 7B68     		ldr	r3, [r7, #4]
 884 00a8 0022     		movs	r2, #0
 885 00aa 1A62     		str	r2, [r3, #32]
 460:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set Modem Control to default state
 461:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->MCR = 0;
 886              		.loc 1 461 0
 887 00ac 7B68     		ldr	r3, [r7, #4]
 888 00ae 0022     		movs	r2, #0
 889 00b0 1A74     		strb	r2, [r3, #16]
 462:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 control to default state
 463:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485CTRL = 0;
 890              		.loc 1 463 0
 891 00b2 7B68     		ldr	r3, [r7, #4]
 892 00b4 0022     		movs	r2, #0
 893 00b6 83F84C20 		strb	r2, [r3, #76]
 464:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 delay timer to default state
 465:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485DLY = 0;
 894              		.loc 1 465 0
 895 00ba 7B68     		ldr	r3, [r7, #4]
 896 00bc 0022     		movs	r2, #0
 897 00be 83F85420 		strb	r2, [r3, #84]
 466:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 addr match to default state
 467:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ADRMATCH = 0;
 898              		.loc 1 467 0
 899 00c2 7B68     		ldr	r3, [r7, #4]
 900 00c4 0022     		movs	r2, #0
 901 00c6 83F85020 		strb	r2, [r3, #80]
 468:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		//Dummy Reading to Clear Status
 469:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->MSR;
 902              		.loc 1 469 0
 903 00ca 7B68     		ldr	r3, [r7, #4]
 904 00cc 1B7E     		ldrb	r3, [r3, #24]
 905 00ce DBB2     		uxtb	r3, r3
 906 00d0 FB60     		str	r3, [r7, #12]
 470:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->LSR;
 907              		.loc 1 470 0
 908 00d2 7B68     		ldr	r3, [r7, #4]
 909 00d4 1B7D     		ldrb	r3, [r3, #20]
 910 00d6 DBB2     		uxtb	r3, r3
 911 00d8 FB60     		str	r3, [r7, #12]
 912 00da 2EE0     		b	.L64
 913              	.L60:
 471:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 472:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 473:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 474:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* FIFOs are empty */
 475:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
 914              		.loc 1 475 0
 915 00dc 7B68     		ldr	r3, [r7, #4]
 916 00de 0722     		movs	r2, #7
 917 00e0 1A72     		strb	r2, [r3, #8]
 476:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable FIFO
 477:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = 0;
 918              		.loc 1 477 0
 919 00e2 7B68     		ldr	r3, [r7, #4]
 920 00e4 0022     		movs	r2, #0
 921 00e6 1A72     		strb	r2, [r3, #8]
 478:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 479:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 480:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (UARTx->LSR & UART_LSR_RDR)
 922              		.loc 1 480 0
 923 00e8 03E0     		b	.L65
 924              	.L66:
 481:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 482:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UARTx->/*RBTHDLR.*/RBR;
 925              		.loc 1 482 0
 926 00ea 7B68     		ldr	r3, [r7, #4]
 927 00ec 1B78     		ldrb	r3, [r3]
 928 00ee DBB2     		uxtb	r3, r3
 929 00f0 FB60     		str	r3, [r7, #12]
 930              	.L65:
 480:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 931              		.loc 1 480 0
 932 00f2 7B68     		ldr	r3, [r7, #4]
 933 00f4 1B7D     		ldrb	r3, [r3, #20]
 934 00f6 DBB2     		uxtb	r3, r3
 935 00f8 03F00103 		and	r3, r3, #1
 936 00fc 002B     		cmp	r3, #0
 937 00fe F4D1     		bne	.L66
 483:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 484:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 485:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->TER = UART_TER_TXEN;
 938              		.loc 1 485 0
 939 0100 7B68     		ldr	r3, [r7, #4]
 940 0102 8022     		movs	r2, #128
 941 0104 83F83020 		strb	r2, [r3, #48]
 486:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Wait for current transmit complete
 487:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_THRE));
 942              		.loc 1 487 0
 943 0108 00BF     		nop
 944              	.L67:
 945              		.loc 1 487 0 is_stmt 0 discriminator 1
 946 010a 7B68     		ldr	r3, [r7, #4]
 947 010c 1B7D     		ldrb	r3, [r3, #20]
 948 010e DBB2     		uxtb	r3, r3
 949 0110 03F02003 		and	r3, r3, #32
 950 0114 002B     		cmp	r3, #0
 951 0116 F8D0     		beq	.L67
 488:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable Tx
 489:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->TER = 0;
 952              		.loc 1 489 0 is_stmt 1
 953 0118 7B68     		ldr	r3, [r7, #4]
 954 011a 0022     		movs	r2, #0
 955 011c 83F83020 		strb	r2, [r3, #48]
 490:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 491:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt
 492:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*DLIER.*/IER = 0;
 956              		.loc 1 492 0
 957 0120 7B68     		ldr	r3, [r7, #4]
 958 0122 0022     		movs	r2, #0
 959 0124 5A60     		str	r2, [r3, #4]
 493:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set LCR to default state
 494:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = 0;
 960              		.loc 1 494 0
 961 0126 7B68     		ldr	r3, [r7, #4]
 962 0128 0022     		movs	r2, #0
 963 012a 1A73     		strb	r2, [r3, #12]
 495:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set ACR to default state
 496:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ACR = 0;
 964              		.loc 1 496 0
 965 012c 7B68     		ldr	r3, [r7, #4]
 966 012e 0022     		movs	r2, #0
 967 0130 1A62     		str	r2, [r3, #32]
 497:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 498:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UARTx->LSR;
 968              		.loc 1 498 0
 969 0132 7B68     		ldr	r3, [r7, #4]
 970 0134 1B7D     		ldrb	r3, [r3, #20]
 971 0136 DBB2     		uxtb	r3, r3
 972 0138 FB60     		str	r3, [r7, #12]
 973              	.L64:
 499:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 500:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 501:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 974              		.loc 1 501 0
 975 013a 7B68     		ldr	r3, [r7, #4]
 976 013c 404A     		ldr	r2, .L92+12
 977 013e 9342     		cmp	r3, r2
 978 0140 03D1     		bne	.L68
 502:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 503:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set IrDA to default state
 504:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR = 0;
 979              		.loc 1 504 0
 980 0142 7B68     		ldr	r3, [r7, #4]
 981 0144 0022     		movs	r2, #0
 982 0146 83F82420 		strb	r2, [r3, #36]
 983              	.L68:
 505:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 506:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 507:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Set Line Control register ----------------------------
 508:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 509:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uart_set_divisors(UARTx, (UART_ConfigStruct->Baud_rate));
 984              		.loc 1 509 0
 985 014a 3B68     		ldr	r3, [r7]
 986 014c 1B68     		ldr	r3, [r3]
 987 014e 1946     		mov	r1, r3
 988 0150 7868     		ldr	r0, [r7, #4]
 989 0152 FFF7FEFF 		bl	uart_set_divisors
 510:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 511:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 990              		.loc 1 511 0
 991 0156 7B68     		ldr	r3, [r7, #4]
 992 0158 374A     		ldr	r2, .L92+4
 993 015a 9342     		cmp	r3, r2
 994 015c 06D1     		bne	.L69
 512:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 513:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = (((LPC_UART1_TypeDef *)UARTx)->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
 995              		.loc 1 513 0
 996 015e 7B68     		ldr	r3, [r7, #4]
 997 0160 1B7B     		ldrb	r3, [r3, #12]
 998 0162 DBB2     		uxtb	r3, r3
 999 0164 03F0C003 		and	r3, r3, #192
 1000 0168 FB60     		str	r3, [r7, #12]
 1001 016a 05E0     		b	.L70
 1002              	.L69:
 514:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				& UART_LCR_BITMASK;
 515:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 516:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 517:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 518:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
 1003              		.loc 1 518 0
 1004 016c 7B68     		ldr	r3, [r7, #4]
 1005 016e 1B7B     		ldrb	r3, [r3, #12]
 1006 0170 DBB2     		uxtb	r3, r3
 1007 0172 03F0C003 		and	r3, r3, #192
 1008 0176 FB60     		str	r3, [r7, #12]
 1009              	.L70:
 519:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 520:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 521:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Databits){
 1010              		.loc 1 521 0
 1011 0178 3B68     		ldr	r3, [r7]
 1012 017a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1013 017c 012B     		cmp	r3, #1
 1014 017e 04D0     		beq	.L72
 1015 0180 022B     		cmp	r3, #2
 1016 0182 07D0     		beq	.L73
 1017 0184 002B     		cmp	r3, #0
 1018 0186 0FD0     		beq	.L89
 1019 0188 09E0     		b	.L88
 1020              	.L72:
 522:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 523:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN5;
 524:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 525:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_6:
 526:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN6;
 1021              		.loc 1 526 0
 1022 018a FB68     		ldr	r3, [r7, #12]
 1023 018c 43F00103 		orr	r3, r3, #1
 1024 0190 FB60     		str	r3, [r7, #12]
 527:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1025              		.loc 1 527 0
 1026 0192 0AE0     		b	.L75
 1027              	.L73:
 528:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_7:
 529:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN7;
 1028              		.loc 1 529 0
 1029 0194 FB68     		ldr	r3, [r7, #12]
 1030 0196 43F00203 		orr	r3, r3, #2
 1031 019a FB60     		str	r3, [r7, #12]
 530:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1032              		.loc 1 530 0
 1033 019c 05E0     		b	.L75
 1034              	.L88:
 531:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_8:
 532:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 533:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN8;
 1035              		.loc 1 533 0
 1036 019e FB68     		ldr	r3, [r7, #12]
 1037 01a0 43F00303 		orr	r3, r3, #3
 1038 01a4 FB60     		str	r3, [r7, #12]
 534:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1039              		.loc 1 534 0
 1040 01a6 00E0     		b	.L75
 1041              	.L89:
 524:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_6:
 1042              		.loc 1 524 0
 1043 01a8 00BF     		nop
 1044              	.L75:
 535:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 536:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 537:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UART_ConfigStruct->Parity == UART_PARITY_NONE)
 1045              		.loc 1 537 0
 1046 01aa 3B68     		ldr	r3, [r7]
 1047 01ac 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1048 01ae 002B     		cmp	r3, #0
 1049 01b0 24D0     		beq	.L76
 538:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 539:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Do nothing...
 540:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 541:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 542:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 543:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_PARITY_EN;
 1050              		.loc 1 543 0
 1051 01b2 FB68     		ldr	r3, [r7, #12]
 1052 01b4 43F00803 		orr	r3, r3, #8
 1053 01b8 FB60     		str	r3, [r7, #12]
 544:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		switch (UART_ConfigStruct->Parity)
 1054              		.loc 1 544 0
 1055 01ba 3B68     		ldr	r3, [r7]
 1056 01bc 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1057 01be 013B     		subs	r3, r3, #1
 1058 01c0 032B     		cmp	r3, #3
 1059 01c2 1AD8     		bhi	.L90
 1060 01c4 01A2     		adr	r2, .L79
 1061 01c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1062 01ca 00BF     		.p2align 2
 1063              	.L79:
 1064 01cc FB010000 		.word	.L90+1
 1065 01d0 DD010000 		.word	.L80+1
 1066 01d4 E7010000 		.word	.L81+1
 1067 01d8 F1010000 		.word	.L82+1
 1068              		.p2align 1
 1069              	.L80:
 545:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 546:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_ODD:
 547:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_ODD;
 548:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 549:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 550:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_EVEN:
 551:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_EVEN;
 1070              		.loc 1 551 0
 1071 01dc FB68     		ldr	r3, [r7, #12]
 1072 01de 43F01003 		orr	r3, r3, #16
 1073 01e2 FB60     		str	r3, [r7, #12]
 552:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1074              		.loc 1 552 0
 1075 01e4 0AE0     		b	.L76
 1076              	.L81:
 553:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 554:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_SP_1:
 555:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_1;
 1077              		.loc 1 555 0
 1078 01e6 FB68     		ldr	r3, [r7, #12]
 1079 01e8 43F02003 		orr	r3, r3, #32
 1080 01ec FB60     		str	r3, [r7, #12]
 556:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1081              		.loc 1 556 0
 1082 01ee 05E0     		b	.L76
 1083              	.L82:
 557:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 558:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_SP_0:
 559:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_0;
 1084              		.loc 1 559 0
 1085 01f0 FB68     		ldr	r3, [r7, #12]
 1086 01f2 43F03003 		orr	r3, r3, #48
 1087 01f6 FB60     		str	r3, [r7, #12]
 560:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1088              		.loc 1 560 0
 1089 01f8 00E0     		b	.L76
 1090              	.L90:
 561:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		default:
 562:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1091              		.loc 1 562 0
 1092 01fa 00BF     		nop
 1093              	.L76:
 563:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 564:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 565:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 566:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Stopbits){
 1094              		.loc 1 566 0
 1095 01fc 3B68     		ldr	r3, [r7]
 1096 01fe 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1097 0200 012B     		cmp	r3, #1
 1098 0202 00D0     		beq	.L84
 567:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_STOPBIT_2:
 568:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_STOPBIT_SEL;
 569:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 570:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_STOPBIT_1:
 571:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 572:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Do no thing
 573:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1099              		.loc 1 573 0
 1100 0204 04E0     		b	.L85
 1101              	.L84:
 568:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1102              		.loc 1 568 0
 1103 0206 FB68     		ldr	r3, [r7, #12]
 1104 0208 43F00403 		orr	r3, r3, #4
 1105 020c FB60     		str	r3, [r7, #12]
 569:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_STOPBIT_1:
 1106              		.loc 1 569 0
 1107 020e 00BF     		nop
 1108              	.L85:
 574:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 575:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 576:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 577:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Write back to LCR, configure FIFO and Disable Tx
 578:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) ==  LPC_UART1)
 1109              		.loc 1 578 0
 1110 0210 7B68     		ldr	r3, [r7, #4]
 1111 0212 094A     		ldr	r2, .L92+4
 1112 0214 9342     		cmp	r3, r2
 1113 0216 04D1     		bne	.L86
 579:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 580:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 1114              		.loc 1 580 0
 1115 0218 FB68     		ldr	r3, [r7, #12]
 1116 021a DAB2     		uxtb	r2, r3
 1117 021c 7B68     		ldr	r3, [r7, #4]
 1118 021e 1A73     		strb	r2, [r3, #12]
 581:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 582:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 583:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 584:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 585:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 586:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1119              		.loc 1 586 0
 1120 0220 03E0     		b	.L91
 1121              	.L86:
 584:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1122              		.loc 1 584 0
 1123 0222 FB68     		ldr	r3, [r7, #12]
 1124 0224 DAB2     		uxtb	r2, r3
 1125 0226 7B68     		ldr	r3, [r7, #4]
 1126 0228 1A73     		strb	r2, [r3, #12]
 1127              	.L91:
 1128              		.loc 1 586 0
 1129 022a 00BF     		nop
 1130 022c 1037     		adds	r7, r7, #16
 1131              		.cfi_def_cfa_offset 8
 1132 022e BD46     		mov	sp, r7
 1133              		.cfi_def_cfa_register 13
 1134              		@ sp needed
 1135 0230 80BD     		pop	{r7, pc}
 1136              	.L93:
 1137 0232 00BF     		.align	2
 1138              	.L92:
 1139 0234 00C00040 		.word	1073790976
 1140 0238 00000140 		.word	1073807360
 1141 023c 00800940 		.word	1074364416
 1142 0240 00C00940 		.word	1074380800
 1143              		.cfi_endproc
 1144              	.LFE33:
 1146              		.section	.text.UART_ConfigStructInit,"ax",%progbits
 1147              		.align	2
 1148              		.global	UART_ConfigStructInit
 1149              		.thumb
 1150              		.thumb_func
 1152              	UART_ConfigStructInit:
 1153              	.LFB34:
 587:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 588:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 589:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*****************************************************************************//**
 590:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @brief		Fills each UART_InitStruct member with its default value:
 591:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				9600 bps
 592:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				8-bit data
 593:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				1 Stopbit
 594:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				None Parity
 595:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @param[in]	UART_InitStruct Pointer to a UART_CFG_Type structure
 596:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    which will be initialized.
 597:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @return		None
 598:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *******************************************************************************/
 599:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ConfigStructInit(UART_CFG_Type *UART_InitStruct)
 600:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1154              		.loc 1 600 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 8
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 1159 0000 80B4     		push	{r7}
 1160              		.cfi_def_cfa_offset 4
 1161              		.cfi_offset 7, -4
 1162 0002 83B0     		sub	sp, sp, #12
 1163              		.cfi_def_cfa_offset 16
 1164 0004 00AF     		add	r7, sp, #0
 1165              		.cfi_def_cfa_register 7
 1166 0006 7860     		str	r0, [r7, #4]
 601:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 1167              		.loc 1 601 0
 1168 0008 7B68     		ldr	r3, [r7, #4]
 1169 000a 4FF41652 		mov	r2, #9600
 1170 000e 1A60     		str	r2, [r3]
 602:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 1171              		.loc 1 602 0
 1172 0010 7B68     		ldr	r3, [r7, #4]
 1173 0012 0322     		movs	r2, #3
 1174 0014 5A71     		strb	r2, [r3, #5]
 603:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 1175              		.loc 1 603 0
 1176 0016 7B68     		ldr	r3, [r7, #4]
 1177 0018 0022     		movs	r2, #0
 1178 001a 1A71     		strb	r2, [r3, #4]
 604:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 1179              		.loc 1 604 0
 1180 001c 7B68     		ldr	r3, [r7, #4]
 1181 001e 0022     		movs	r2, #0
 1182 0020 9A71     		strb	r2, [r3, #6]
 605:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1183              		.loc 1 605 0
 1184 0022 00BF     		nop
 1185 0024 0C37     		adds	r7, r7, #12
 1186              		.cfi_def_cfa_offset 4
 1187 0026 BD46     		mov	sp, r7
 1188              		.cfi_def_cfa_register 13
 1189              		@ sp needed
 1190 0028 80BC     		pop	{r7}
 1191              		.cfi_restore 7
 1192              		.cfi_def_cfa_offset 0
 1193 002a 7047     		bx	lr
 1194              		.cfi_endproc
 1195              	.LFE34:
 1197              		.section	.text.UART_SendData,"ax",%progbits
 1198              		.align	2
 1199              		.global	UART_SendData
 1200              		.thumb
 1201              		.thumb_func
 1203              	UART_SendData:
 1204              	.LFB35:
 606:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 607:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 608:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 609:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Transmit a single data through UART peripheral
 610:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 611:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 612:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Data	Data to transmit (must be 8-bit long)
 613:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 614:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 615:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_SendData(LPC_UART_TypeDef* UARTx, uint8_t Data)
 616:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1205              		.loc 1 616 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 8
 1208              		@ frame_needed = 1, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 1210 0000 80B4     		push	{r7}
 1211              		.cfi_def_cfa_offset 4
 1212              		.cfi_offset 7, -4
 1213 0002 83B0     		sub	sp, sp, #12
 1214              		.cfi_def_cfa_offset 16
 1215 0004 00AF     		add	r7, sp, #0
 1216              		.cfi_def_cfa_register 7
 1217 0006 7860     		str	r0, [r7, #4]
 1218 0008 0B46     		mov	r3, r1
 1219 000a FB70     		strb	r3, [r7, #3]
 617:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 618:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 619:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1220              		.loc 1 619 0
 1221 000c 7B68     		ldr	r3, [r7, #4]
 1222 000e 074A     		ldr	r2, .L99
 1223 0010 9342     		cmp	r3, r2
 1224 0012 03D1     		bne	.L96
 620:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 621:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 1225              		.loc 1 621 0
 1226 0014 7B68     		ldr	r3, [r7, #4]
 1227 0016 FA78     		ldrb	r2, [r7, #3]
 1228 0018 1A70     		strb	r2, [r3]
 622:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 623:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 624:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 625:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 626:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 627:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 628:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1229              		.loc 1 628 0
 1230 001a 02E0     		b	.L98
 1231              	.L96:
 625:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1232              		.loc 1 625 0
 1233 001c 7B68     		ldr	r3, [r7, #4]
 1234 001e FA78     		ldrb	r2, [r7, #3]
 1235 0020 1A70     		strb	r2, [r3]
 1236              	.L98:
 1237              		.loc 1 628 0
 1238 0022 00BF     		nop
 1239 0024 0C37     		adds	r7, r7, #12
 1240              		.cfi_def_cfa_offset 4
 1241 0026 BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 0028 80BC     		pop	{r7}
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 002a 7047     		bx	lr
 1248              	.L100:
 1249              		.align	2
 1250              	.L99:
 1251 002c 00000140 		.word	1073807360
 1252              		.cfi_endproc
 1253              	.LFE35:
 1255              		.section	.text.UART_ReceiveData,"ax",%progbits
 1256              		.align	2
 1257              		.global	UART_ReceiveData
 1258              		.thumb
 1259              		.thumb_func
 1261              	UART_ReceiveData:
 1262              	.LFB36:
 629:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 630:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 631:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 632:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Receive a single data from UART peripheral
 633:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 634:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 635:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Data received
 636:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 637:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_ReceiveData(LPC_UART_TypeDef* UARTx)
 638:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1263              		.loc 1 638 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 8
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 7, -4
 1271 0002 83B0     		sub	sp, sp, #12
 1272              		.cfi_def_cfa_offset 16
 1273 0004 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
 1275 0006 7860     		str	r0, [r7, #4]
 639:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 640:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 641:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1276              		.loc 1 641 0
 1277 0008 7B68     		ldr	r3, [r7, #4]
 1278 000a 074A     		ldr	r2, .L104
 1279 000c 9342     		cmp	r3, r2
 1280 000e 03D1     		bne	.L102
 642:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 643:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return (((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 1281              		.loc 1 643 0
 1282 0010 7B68     		ldr	r3, [r7, #4]
 1283 0012 1B78     		ldrb	r3, [r3]
 1284 0014 DBB2     		uxtb	r3, r3
 1285 0016 02E0     		b	.L103
 1286              	.L102:
 644:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 645:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 646:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 647:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return (UARTx->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 1287              		.loc 1 647 0
 1288 0018 7B68     		ldr	r3, [r7, #4]
 1289 001a 1B78     		ldrb	r3, [r3]
 1290 001c DBB2     		uxtb	r3, r3
 1291              	.L103:
 648:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 649:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1292              		.loc 1 649 0
 1293 001e 1846     		mov	r0, r3
 1294 0020 0C37     		adds	r7, r7, #12
 1295              		.cfi_def_cfa_offset 4
 1296 0022 BD46     		mov	sp, r7
 1297              		.cfi_def_cfa_register 13
 1298              		@ sp needed
 1299 0024 80BC     		pop	{r7}
 1300              		.cfi_restore 7
 1301              		.cfi_def_cfa_offset 0
 1302 0026 7047     		bx	lr
 1303              	.L105:
 1304              		.align	2
 1305              	.L104:
 1306 0028 00000140 		.word	1073807360
 1307              		.cfi_endproc
 1308              	.LFE36:
 1310              		.section	.text.UART_ForceBreak,"ax",%progbits
 1311              		.align	2
 1312              		.global	UART_ForceBreak
 1313              		.thumb
 1314              		.thumb_func
 1316              	UART_ForceBreak:
 1317              	.LFB37:
 650:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 651:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 652:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 653:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Force BREAK character on UART line, output pin UARTx TXD is
 654:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				forced to logic 0.
 655:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 656:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 657:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 658:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 659:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ForceBreak(LPC_UART_TypeDef* UARTx)
 660:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1318              		.loc 1 660 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 8
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0000 80B4     		push	{r7}
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 83B0     		sub	sp, sp, #12
 1327              		.cfi_def_cfa_offset 16
 1328 0004 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
 1330 0006 7860     		str	r0, [r7, #4]
 661:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 662:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 663:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1331              		.loc 1 663 0
 1332 0008 7B68     		ldr	r3, [r7, #4]
 1333 000a 0C4A     		ldr	r2, .L110
 1334 000c 9342     		cmp	r3, r2
 1335 000e 08D1     		bne	.L107
 664:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 665:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_BREAK_EN;
 1336              		.loc 1 665 0
 1337 0010 7B68     		ldr	r3, [r7, #4]
 1338 0012 1B7B     		ldrb	r3, [r3, #12]
 1339 0014 DBB2     		uxtb	r3, r3
 1340 0016 43F04003 		orr	r3, r3, #64
 1341 001a DAB2     		uxtb	r2, r3
 1342 001c 7B68     		ldr	r3, [r7, #4]
 1343 001e 1A73     		strb	r2, [r3, #12]
 666:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 667:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 668:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 669:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR |= UART_LCR_BREAK_EN;
 670:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 671:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1344              		.loc 1 671 0
 1345 0020 07E0     		b	.L109
 1346              	.L107:
 669:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1347              		.loc 1 669 0
 1348 0022 7B68     		ldr	r3, [r7, #4]
 1349 0024 1B7B     		ldrb	r3, [r3, #12]
 1350 0026 DBB2     		uxtb	r3, r3
 1351 0028 43F04003 		orr	r3, r3, #64
 1352 002c DAB2     		uxtb	r2, r3
 1353 002e 7B68     		ldr	r3, [r7, #4]
 1354 0030 1A73     		strb	r2, [r3, #12]
 1355              	.L109:
 1356              		.loc 1 671 0
 1357 0032 00BF     		nop
 1358 0034 0C37     		adds	r7, r7, #12
 1359              		.cfi_def_cfa_offset 4
 1360 0036 BD46     		mov	sp, r7
 1361              		.cfi_def_cfa_register 13
 1362              		@ sp needed
 1363 0038 80BC     		pop	{r7}
 1364              		.cfi_restore 7
 1365              		.cfi_def_cfa_offset 0
 1366 003a 7047     		bx	lr
 1367              	.L111:
 1368              		.align	2
 1369              	.L110:
 1370 003c 00000140 		.word	1073807360
 1371              		.cfi_endproc
 1372              	.LFE37:
 1374              		.section	.text.UART_IrDAInvtInputCmd,"ax",%progbits
 1375              		.align	2
 1376              		.global	UART_IrDAInvtInputCmd
 1377              		.thumb
 1378              		.thumb_func
 1380              	UART_IrDAInvtInputCmd:
 1381              	.LFB38:
 672:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 673:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 674:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 675:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 676:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 677:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable or disable inverting serial input function of IrDA
 678:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				on UART peripheral.
 679:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 680:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of inverting serial input, should be:
 681:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
 682:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
 683:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 684:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 685:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDAInvtInputCmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
 686:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1382              		.loc 1 686 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 8
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387 0000 80B4     		push	{r7}
 1388              		.cfi_def_cfa_offset 4
 1389              		.cfi_offset 7, -4
 1390 0002 83B0     		sub	sp, sp, #12
 1391              		.cfi_def_cfa_offset 16
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 7860     		str	r0, [r7, #4]
 1395 0008 0B46     		mov	r3, r1
 1396 000a FB70     		strb	r3, [r7, #3]
 687:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 688:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 689:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 690:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1397              		.loc 1 690 0
 1398 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1399 000e 012B     		cmp	r3, #1
 1400 0010 0AD1     		bne	.L113
 691:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 692:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAINV;
 1401              		.loc 1 692 0
 1402 0012 7B68     		ldr	r3, [r7, #4]
 1403 0014 93F82430 		ldrb	r3, [r3, #36]
 1404 0018 DBB2     		uxtb	r3, r3
 1405 001a 43F00203 		orr	r3, r3, #2
 1406 001e DAB2     		uxtb	r2, r3
 1407 0020 7B68     		ldr	r3, [r7, #4]
 1408 0022 83F82420 		strb	r2, [r3, #36]
 693:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 694:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (NewState == DISABLE)
 695:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 696:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAINV) & UART_ICR_BITMASK;
 697:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 698:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1409              		.loc 1 698 0
 1410 0026 0CE0     		b	.L115
 1411              	.L113:
 694:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 1412              		.loc 1 694 0
 1413 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1414 002a 002B     		cmp	r3, #0
 1415 002c 09D1     		bne	.L115
 696:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1416              		.loc 1 696 0
 1417 002e 7B68     		ldr	r3, [r7, #4]
 1418 0030 93F82430 		ldrb	r3, [r3, #36]
 1419 0034 DBB2     		uxtb	r3, r3
 1420 0036 03F03D03 		and	r3, r3, #61
 1421 003a DAB2     		uxtb	r2, r3
 1422 003c 7B68     		ldr	r3, [r7, #4]
 1423 003e 83F82420 		strb	r2, [r3, #36]
 1424              	.L115:
 1425              		.loc 1 698 0
 1426 0042 00BF     		nop
 1427 0044 0C37     		adds	r7, r7, #12
 1428              		.cfi_def_cfa_offset 4
 1429 0046 BD46     		mov	sp, r7
 1430              		.cfi_def_cfa_register 13
 1431              		@ sp needed
 1432 0048 80BC     		pop	{r7}
 1433              		.cfi_restore 7
 1434              		.cfi_def_cfa_offset 0
 1435 004a 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE38:
 1439              		.section	.text.UART_IrDACmd,"ax",%progbits
 1440              		.align	2
 1441              		.global	UART_IrDACmd
 1442              		.thumb
 1443              		.thumb_func
 1445              	UART_IrDACmd:
 1446              	.LFB39:
 699:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 700:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 701:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 702:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable or disable IrDA function on UART peripheral.
 703:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 704:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of IrDA function, should be:
 705:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
 706:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
 707:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 708:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 709:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDACmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
 710:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1447              		.loc 1 710 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 8
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 1452 0000 80B4     		push	{r7}
 1453              		.cfi_def_cfa_offset 4
 1454              		.cfi_offset 7, -4
 1455 0002 83B0     		sub	sp, sp, #12
 1456              		.cfi_def_cfa_offset 16
 1457 0004 00AF     		add	r7, sp, #0
 1458              		.cfi_def_cfa_register 7
 1459 0006 7860     		str	r0, [r7, #4]
 1460 0008 0B46     		mov	r3, r1
 1461 000a FB70     		strb	r3, [r7, #3]
 711:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 712:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 713:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 714:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1462              		.loc 1 714 0
 1463 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1464 000e 012B     		cmp	r3, #1
 1465 0010 0AD1     		bne	.L117
 715:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 716:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAEN;
 1466              		.loc 1 716 0
 1467 0012 7B68     		ldr	r3, [r7, #4]
 1468 0014 93F82430 		ldrb	r3, [r3, #36]
 1469 0018 DBB2     		uxtb	r3, r3
 1470 001a 43F00103 		orr	r3, r3, #1
 1471 001e DAB2     		uxtb	r2, r3
 1472 0020 7B68     		ldr	r3, [r7, #4]
 1473 0022 83F82420 		strb	r2, [r3, #36]
 717:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 718:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 719:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 720:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAEN) & UART_ICR_BITMASK;
 721:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 722:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1474              		.loc 1 722 0
 1475 0026 09E0     		b	.L119
 1476              	.L117:
 720:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1477              		.loc 1 720 0
 1478 0028 7B68     		ldr	r3, [r7, #4]
 1479 002a 93F82430 		ldrb	r3, [r3, #36]
 1480 002e DBB2     		uxtb	r3, r3
 1481 0030 03F03E03 		and	r3, r3, #62
 1482 0034 DAB2     		uxtb	r2, r3
 1483 0036 7B68     		ldr	r3, [r7, #4]
 1484 0038 83F82420 		strb	r2, [r3, #36]
 1485              	.L119:
 1486              		.loc 1 722 0
 1487 003c 00BF     		nop
 1488 003e 0C37     		adds	r7, r7, #12
 1489              		.cfi_def_cfa_offset 4
 1490 0040 BD46     		mov	sp, r7
 1491              		.cfi_def_cfa_register 13
 1492              		@ sp needed
 1493 0042 80BC     		pop	{r7}
 1494              		.cfi_restore 7
 1495              		.cfi_def_cfa_offset 0
 1496 0044 7047     		bx	lr
 1497              		.cfi_endproc
 1498              	.LFE39:
 1500 0046 00BF     		.section	.text.UART_IrDAPulseDivConfig,"ax",%progbits
 1501              		.align	2
 1502              		.global	UART_IrDAPulseDivConfig
 1503              		.thumb
 1504              		.thumb_func
 1506              	UART_IrDAPulseDivConfig:
 1507              	.LFB40:
 723:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 724:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 725:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 726:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure Pulse divider for IrDA function on UART peripheral.
 727:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 728:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	PulseDiv Pulse Divider value from Peripheral clock,
 729:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be one of the following:
 730:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV2 	: Pulse width = 2 * Tpclk
 731:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV4 	: Pulse width = 4 * Tpclk
 732:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV8 	: Pulse width = 8 * Tpclk
 733:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV16 	: Pulse width = 16 * Tpclk
 734:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV32 	: Pulse width = 32 * Tpclk
 735:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV64 	: Pulse width = 64 * Tpclk
 736:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV128 : Pulse width = 128 * Tpclk
 737:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV256 : Pulse width = 256 * Tpclk
 738:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 739:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 740:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 741:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDAPulseDivConfig(LPC_UART_TypeDef *UARTx, UART_IrDA_PULSE_Type PulseDiv)
 742:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1508              		.loc 1 742 0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 16
 1511              		@ frame_needed = 1, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
 1513 0000 80B4     		push	{r7}
 1514              		.cfi_def_cfa_offset 4
 1515              		.cfi_offset 7, -4
 1516 0002 85B0     		sub	sp, sp, #20
 1517              		.cfi_def_cfa_offset 24
 1518 0004 00AF     		add	r7, sp, #0
 1519              		.cfi_def_cfa_register 7
 1520 0006 7860     		str	r0, [r7, #4]
 1521 0008 0B46     		mov	r3, r1
 1522 000a FB70     		strb	r3, [r7, #3]
 743:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp, tmp1;
 744:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 745:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA_PULSEDIV(PulseDiv));
 746:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 747:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp1 = UART_ICR_PULSEDIV(PulseDiv);
 1523              		.loc 1 747 0
 1524 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1525 000e DB00     		lsls	r3, r3, #3
 1526 0010 03F03803 		and	r3, r3, #56
 1527 0014 FB60     		str	r3, [r7, #12]
 748:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 1528              		.loc 1 748 0
 1529 0016 7B68     		ldr	r3, [r7, #4]
 1530 0018 93F82430 		ldrb	r3, [r3, #36]
 1531 001c DBB2     		uxtb	r3, r3
 1532 001e 23F03803 		bic	r3, r3, #56
 1533 0022 BB60     		str	r3, [r7, #8]
 749:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp |= tmp1 | UART_ICR_FIXPULSE_EN;
 1534              		.loc 1 749 0
 1535 0024 FA68     		ldr	r2, [r7, #12]
 1536 0026 BB68     		ldr	r3, [r7, #8]
 1537 0028 1343     		orrs	r3, r3, r2
 1538 002a 43F00403 		orr	r3, r3, #4
 1539 002e BB60     		str	r3, [r7, #8]
 750:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->ICR = tmp & UART_ICR_BITMASK;
 1540              		.loc 1 750 0
 1541 0030 BB68     		ldr	r3, [r7, #8]
 1542 0032 DBB2     		uxtb	r3, r3
 1543 0034 03F03F03 		and	r3, r3, #63
 1544 0038 DAB2     		uxtb	r2, r3
 1545 003a 7B68     		ldr	r3, [r7, #4]
 1546 003c 83F82420 		strb	r2, [r3, #36]
 751:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1547              		.loc 1 751 0
 1548 0040 00BF     		nop
 1549 0042 1437     		adds	r7, r7, #20
 1550              		.cfi_def_cfa_offset 4
 1551 0044 BD46     		mov	sp, r7
 1552              		.cfi_def_cfa_register 13
 1553              		@ sp needed
 1554 0046 80BC     		pop	{r7}
 1555              		.cfi_restore 7
 1556              		.cfi_def_cfa_offset 0
 1557 0048 7047     		bx	lr
 1558              		.cfi_endproc
 1559              	.LFE40:
 1561 004a 00BF     		.section	.text.UART_IntConfig,"ax",%progbits
 1562              		.align	2
 1563              		.global	UART_IntConfig
 1564              		.thumb
 1565              		.thumb_func
 1567              	UART_IntConfig:
 1568              	.LFB41:
 752:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 753:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 754:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 755:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 756:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 757:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Enable or disable specified UART interrupt.
 758:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 759:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 760:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTIntCfg	Specifies the interrupt flag,
 761:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be one of the following:
 762:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_RBR 	:  RBR Interrupt enable
 763:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_THRE 	:  THR Interrupt enable
 764:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_RLS 	:  RX line status interrupt enable
 765:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART1_INTCFG_MS	:  Modem status interrupt enable (UART1 only)
 766:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART1_INTCFG_CTS	:  CTS1 signal transition interrupt enable (UART1 only)
 767:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_ABEO 	:  Enables the end of auto-baud interrupt
 768:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_ABTO 	:  Enables the auto-baud time-out interrupt
 769:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of specified UART interrupt type,
 770:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be:
 771:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENALBE: Enable this UART interrupt type.
 772:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- DISALBE: Disable this UART interrupt type.
 773:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 774:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 775:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IntConfig(LPC_UART_TypeDef *UARTx, UART_INT_Type UARTIntCfg, FunctionalState NewState)
 776:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1569              		.loc 1 776 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 16
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574 0000 80B4     		push	{r7}
 1575              		.cfi_def_cfa_offset 4
 1576              		.cfi_offset 7, -4
 1577 0002 85B0     		sub	sp, sp, #20
 1578              		.cfi_def_cfa_offset 24
 1579 0004 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 1581 0006 7860     		str	r0, [r7, #4]
 1582 0008 0B46     		mov	r3, r1
 1583 000a FB70     		strb	r3, [r7, #3]
 1584 000c 1346     		mov	r3, r2
 1585 000e BB70     		strb	r3, [r7, #2]
 777:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 778:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 779:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 780:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 781:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 782:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(UARTIntCfg){
 1586              		.loc 1 782 0
 1587 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1588 0012 062B     		cmp	r3, #6
 1589 0014 27D8     		bhi	.L122
 1590 0016 01A2     		adr	r2, .L124
 1591 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1592              		.p2align 2
 1593              	.L124:
 1594 001c 39000000 		.word	.L123+1
 1595 0020 3F000000 		.word	.L125+1
 1596 0024 45000000 		.word	.L126+1
 1597 0028 4B000000 		.word	.L127+1
 1598 002c 51000000 		.word	.L128+1
 1599 0030 57000000 		.word	.L129+1
 1600 0034 5F000000 		.word	.L130+1
 1601              		.p2align 1
 1602              	.L123:
 783:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_RBR:
 784:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 1603              		.loc 1 784 0
 1604 0038 0123     		movs	r3, #1
 1605 003a FB60     		str	r3, [r7, #12]
 785:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1606              		.loc 1 785 0
 1607 003c 16E0     		b	.L137
 1608              	.L125:
 786:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_THRE:
 787:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_THREINT_EN;
 1609              		.loc 1 787 0
 1610 003e 0223     		movs	r3, #2
 1611 0040 FB60     		str	r3, [r7, #12]
 788:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1612              		.loc 1 788 0
 1613 0042 13E0     		b	.L137
 1614              	.L126:
 789:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_RLS:
 790:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RLSINT_EN;
 1615              		.loc 1 790 0
 1616 0044 0423     		movs	r3, #4
 1617 0046 FB60     		str	r3, [r7, #12]
 791:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1618              		.loc 1 791 0
 1619 0048 10E0     		b	.L137
 1620              	.L127:
 792:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART1_INTCFG_MS:
 793:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART1_IER_MSINT_EN;
 1621              		.loc 1 793 0
 1622 004a 0823     		movs	r3, #8
 1623 004c FB60     		str	r3, [r7, #12]
 794:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1624              		.loc 1 794 0
 1625 004e 0DE0     		b	.L137
 1626              	.L128:
 795:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART1_INTCFG_CTS:
 796:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART1_IER_CTSINT_EN;
 1627              		.loc 1 796 0
 1628 0050 8023     		movs	r3, #128
 1629 0052 FB60     		str	r3, [r7, #12]
 797:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1630              		.loc 1 797 0
 1631 0054 0AE0     		b	.L137
 1632              	.L129:
 798:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_ABEO:
 799:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_ABEOINT_EN;
 1633              		.loc 1 799 0
 1634 0056 4FF48073 		mov	r3, #256
 1635 005a FB60     		str	r3, [r7, #12]
 800:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1636              		.loc 1 800 0
 1637 005c 06E0     		b	.L137
 1638              	.L130:
 801:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_ABTO:
 802:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_ABTOINT_EN;
 1639              		.loc 1 802 0
 1640 005e 4FF40073 		mov	r3, #512
 1641 0062 FB60     		str	r3, [r7, #12]
 803:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1642              		.loc 1 803 0
 1643 0064 02E0     		b	.L137
 1644              	.L122:
 804:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// mthomas, avoid warning:
 805:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		default:
 806:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 1645              		.loc 1 806 0
 1646 0066 0123     		movs	r3, #1
 1647 0068 FB60     		str	r3, [r7, #12]
 807:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 1648              		.loc 1 807 0
 1649 006a 00BF     		nop
 1650              	.L137:
 808:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 809:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 810:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 811:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 812:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CHECK_PARAM((PARAM_UART_INTCFG(UARTIntCfg)) || (PARAM_UART1_INTCFG(UARTIntCfg)));
 813:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 814:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 815:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 816:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CHECK_PARAM(PARAM_UART_INTCFG(UARTIntCfg));
 817:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 818:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 819:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1651              		.loc 1 819 0
 1652 006c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1653 006e 012B     		cmp	r3, #1
 1654 0070 11D1     		bne	.L132
 820:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 821:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 1655              		.loc 1 821 0
 1656 0072 7B68     		ldr	r3, [r7, #4]
 1657 0074 174A     		ldr	r2, .L139
 1658 0076 9342     		cmp	r3, r2
 1659 0078 06D1     		bne	.L133
 822:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 823:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER |= tmp;
 1660              		.loc 1 823 0
 1661 007a 7B68     		ldr	r3, [r7, #4]
 1662 007c 5A68     		ldr	r2, [r3, #4]
 1663 007e FB68     		ldr	r3, [r7, #12]
 1664 0080 1A43     		orrs	r2, r2, r3
 1665 0082 7B68     		ldr	r3, [r7, #4]
 1666 0084 5A60     		str	r2, [r3, #4]
 824:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 825:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 826:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 827:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER |= tmp;
 828:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 829:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 830:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 831:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 832:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 833:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 834:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER &= (~tmp) & UART1_IER_BITMASK;
 835:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 836:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 837:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 838:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER &= (~tmp) & UART_IER_BITMASK;
 839:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 840:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 841:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1667              		.loc 1 841 0
 1668 0086 1FE0     		b	.L138
 1669              	.L133:
 827:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 1670              		.loc 1 827 0
 1671 0088 7B68     		ldr	r3, [r7, #4]
 1672 008a 5A68     		ldr	r2, [r3, #4]
 1673 008c FB68     		ldr	r3, [r7, #12]
 1674 008e 1A43     		orrs	r2, r2, r3
 1675 0090 7B68     		ldr	r3, [r7, #4]
 1676 0092 5A60     		str	r2, [r3, #4]
 1677              		.loc 1 841 0
 1678 0094 18E0     		b	.L138
 1679              	.L132:
 832:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 1680              		.loc 1 832 0
 1681 0096 7B68     		ldr	r3, [r7, #4]
 1682 0098 0E4A     		ldr	r2, .L139
 1683 009a 9342     		cmp	r3, r2
 1684 009c 0AD1     		bne	.L136
 834:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 1685              		.loc 1 834 0
 1686 009e 7B68     		ldr	r3, [r7, #4]
 1687 00a0 5A68     		ldr	r2, [r3, #4]
 1688 00a2 FB68     		ldr	r3, [r7, #12]
 1689 00a4 DB43     		mvns	r3, r3
 1690 00a6 1A40     		ands	r2, r2, r3
 1691 00a8 40F28F33 		movw	r3, #911
 1692 00ac 1340     		ands	r3, r3, r2
 1693 00ae 7A68     		ldr	r2, [r7, #4]
 1694 00b0 5360     		str	r3, [r2, #4]
 1695              		.loc 1 841 0
 1696 00b2 09E0     		b	.L138
 1697              	.L136:
 838:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 1698              		.loc 1 838 0
 1699 00b4 7B68     		ldr	r3, [r7, #4]
 1700 00b6 5A68     		ldr	r2, [r3, #4]
 1701 00b8 FB68     		ldr	r3, [r7, #12]
 1702 00ba DB43     		mvns	r3, r3
 1703 00bc 1A40     		ands	r2, r2, r3
 1704 00be 40F20733 		movw	r3, #775
 1705 00c2 1340     		ands	r3, r3, r2
 1706 00c4 7A68     		ldr	r2, [r7, #4]
 1707 00c6 5360     		str	r3, [r2, #4]
 1708              	.L138:
 1709              		.loc 1 841 0
 1710 00c8 00BF     		nop
 1711 00ca 1437     		adds	r7, r7, #20
 1712              		.cfi_def_cfa_offset 4
 1713 00cc BD46     		mov	sp, r7
 1714              		.cfi_def_cfa_register 13
 1715              		@ sp needed
 1716 00ce 80BC     		pop	{r7}
 1717              		.cfi_restore 7
 1718              		.cfi_def_cfa_offset 0
 1719 00d0 7047     		bx	lr
 1720              	.L140:
 1721 00d2 00BF     		.align	2
 1722              	.L139:
 1723 00d4 00000140 		.word	1073807360
 1724              		.cfi_endproc
 1725              	.LFE41:
 1727              		.section	.text.UART_GetLineStatus,"ax",%progbits
 1728              		.align	2
 1729              		.global	UART_GetLineStatus
 1730              		.thumb
 1731              		.thumb_func
 1733              	UART_GetLineStatus:
 1734              	.LFB42:
 842:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 843:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 844:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 845:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Get current value of Line Status register in UART peripheral.
 846:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 847:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 848:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		Current value of Line Status register in UART peripheral.
 849:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member in
 850:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			UART_LS_Type enumeration to determine current flag status
 851:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			corresponding to each Line status type. Because some flags in
 852:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			Line Status register will be cleared after reading, the next reading
 853:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			Line Status register could not be correct. So this function used to
 854:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			read Line status register in one time only, then the return value
 855:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			used to check all flags.
 856:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 857:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_GetLineStatus(LPC_UART_TypeDef* UARTx)
 858:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1735              		.loc 1 858 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 8
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740 0000 80B4     		push	{r7}
 1741              		.cfi_def_cfa_offset 4
 1742              		.cfi_offset 7, -4
 1743 0002 83B0     		sub	sp, sp, #12
 1744              		.cfi_def_cfa_offset 16
 1745 0004 00AF     		add	r7, sp, #0
 1746              		.cfi_def_cfa_register 7
 1747 0006 7860     		str	r0, [r7, #4]
 859:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 860:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 861:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1748              		.loc 1 861 0
 1749 0008 7B68     		ldr	r3, [r7, #4]
 1750 000a 074A     		ldr	r2, .L144
 1751 000c 9342     		cmp	r3, r2
 1752 000e 03D1     		bne	.L142
 862:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 863:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return ((((LPC_UART1_TypeDef *)LPC_UART1)->LSR) & UART_LSR_BITMASK);
 1753              		.loc 1 863 0
 1754 0010 054B     		ldr	r3, .L144
 1755 0012 1B7D     		ldrb	r3, [r3, #20]
 1756 0014 DBB2     		uxtb	r3, r3
 1757 0016 02E0     		b	.L143
 1758              	.L142:
 864:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 865:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 866:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 867:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
 1759              		.loc 1 867 0
 1760 0018 7B68     		ldr	r3, [r7, #4]
 1761 001a 1B7D     		ldrb	r3, [r3, #20]
 1762 001c DBB2     		uxtb	r3, r3
 1763              	.L143:
 868:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 869:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1764              		.loc 1 869 0
 1765 001e 1846     		mov	r0, r3
 1766 0020 0C37     		adds	r7, r7, #12
 1767              		.cfi_def_cfa_offset 4
 1768 0022 BD46     		mov	sp, r7
 1769              		.cfi_def_cfa_register 13
 1770              		@ sp needed
 1771 0024 80BC     		pop	{r7}
 1772              		.cfi_restore 7
 1773              		.cfi_def_cfa_offset 0
 1774 0026 7047     		bx	lr
 1775              	.L145:
 1776              		.align	2
 1777              	.L144:
 1778 0028 00000140 		.word	1073807360
 1779              		.cfi_endproc
 1780              	.LFE42:
 1782              		.section	.text.UART_CheckBusy,"ax",%progbits
 1783              		.align	2
 1784              		.global	UART_CheckBusy
 1785              		.thumb
 1786              		.thumb_func
 1788              	UART_CheckBusy:
 1789              	.LFB43:
 870:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 871:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 872:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Check whether if UART is busy or not
 873:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 874:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 875:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		RESET if UART is not busy, otherwise return SET.
 876:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 877:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** FlagStatus UART_CheckBusy(LPC_UART_TypeDef *UARTx)
 878:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1790              		.loc 1 878 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 8
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794              		@ link register save eliminated.
 1795 0000 80B4     		push	{r7}
 1796              		.cfi_def_cfa_offset 4
 1797              		.cfi_offset 7, -4
 1798 0002 83B0     		sub	sp, sp, #12
 1799              		.cfi_def_cfa_offset 16
 1800 0004 00AF     		add	r7, sp, #0
 1801              		.cfi_def_cfa_register 7
 1802 0006 7860     		str	r0, [r7, #4]
 879:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx->LSR & UART_LSR_TEMT){
 1803              		.loc 1 879 0
 1804 0008 7B68     		ldr	r3, [r7, #4]
 1805 000a 1B7D     		ldrb	r3, [r3, #20]
 1806 000c DBB2     		uxtb	r3, r3
 1807 000e 03F04003 		and	r3, r3, #64
 1808 0012 002B     		cmp	r3, #0
 1809 0014 01D0     		beq	.L147
 880:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return RESET;
 1810              		.loc 1 880 0
 1811 0016 0023     		movs	r3, #0
 1812 0018 00E0     		b	.L148
 1813              	.L147:
 881:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
 882:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return SET;
 1814              		.loc 1 882 0
 1815 001a 0123     		movs	r3, #1
 1816              	.L148:
 883:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 884:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1817              		.loc 1 884 0
 1818 001c 1846     		mov	r0, r3
 1819 001e 0C37     		adds	r7, r7, #12
 1820              		.cfi_def_cfa_offset 4
 1821 0020 BD46     		mov	sp, r7
 1822              		.cfi_def_cfa_register 13
 1823              		@ sp needed
 1824 0022 80BC     		pop	{r7}
 1825              		.cfi_restore 7
 1826              		.cfi_def_cfa_offset 0
 1827 0024 7047     		bx	lr
 1828              		.cfi_endproc
 1829              	.LFE43:
 1831 0026 00BF     		.section	.text.UART_FIFOConfig,"ax",%progbits
 1832              		.align	2
 1833              		.global	UART_FIFOConfig
 1834              		.thumb
 1835              		.thumb_func
 1837              	UART_FIFOConfig:
 1838              	.LFB44:
 885:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 886:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 887:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 888:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure FIFO function on selected UART peripheral
 889:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 890:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 891:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	FIFOCfg	Pointer to a UART_FIFO_CFG_Type Structure that
 892:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						contains specified information about FIFO configuration
 893:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		none
 894:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 895:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FIFOConfig(LPC_UART_TypeDef *UARTx, UART_FIFO_CFG_Type *FIFOCfg)
 896:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1839              		.loc 1 896 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 16
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843              		@ link register save eliminated.
 1844 0000 80B4     		push	{r7}
 1845              		.cfi_def_cfa_offset 4
 1846              		.cfi_offset 7, -4
 1847 0002 85B0     		sub	sp, sp, #20
 1848              		.cfi_def_cfa_offset 24
 1849 0004 00AF     		add	r7, sp, #0
 1850              		.cfi_def_cfa_register 7
 1851 0006 7860     		str	r0, [r7, #4]
 1852 0008 3960     		str	r1, [r7]
 897:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp = 0;
 1853              		.loc 1 897 0
 1854 000a 0023     		movs	r3, #0
 1855 000c FB73     		strb	r3, [r7, #15]
 898:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 899:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 900:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_FIFO_LEVEL(FIFOCfg->FIFO_Level));
 901:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_DMAMode));
 902:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetRxBuf));
 903:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetTxBuf));
 904:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 905:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp |= UART_FCR_FIFO_EN;
 1856              		.loc 1 905 0
 1857 000e FB7B     		ldrb	r3, [r7, #15]
 1858 0010 43F00103 		orr	r3, r3, #1
 1859 0014 FB73     		strb	r3, [r7, #15]
 906:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (FIFOCfg->FIFO_Level){
 1860              		.loc 1 906 0
 1861 0016 3B68     		ldr	r3, [r7]
 1862 0018 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1863 001a 012B     		cmp	r3, #1
 1864 001c 04D0     		beq	.L151
 1865 001e 022B     		cmp	r3, #2
 1866 0020 07D0     		beq	.L152
 1867 0022 002B     		cmp	r3, #0
 1868 0024 0FD0     		beq	.L161
 1869 0026 09E0     		b	.L160
 1870              	.L151:
 907:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV0:
 908:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV0;
 909:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 910:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV1:
 911:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV1;
 1871              		.loc 1 911 0
 1872 0028 FB7B     		ldrb	r3, [r7, #15]
 1873 002a 43F04003 		orr	r3, r3, #64
 1874 002e FB73     		strb	r3, [r7, #15]
 912:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1875              		.loc 1 912 0
 1876 0030 0AE0     		b	.L154
 1877              	.L152:
 913:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV2:
 914:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV2;
 1878              		.loc 1 914 0
 1879 0032 FB7B     		ldrb	r3, [r7, #15]
 1880 0034 63F07F03 		orn	r3, r3, #127
 1881 0038 FB73     		strb	r3, [r7, #15]
 915:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1882              		.loc 1 915 0
 1883 003a 05E0     		b	.L154
 1884              	.L160:
 916:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV3:
 917:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 918:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV3;
 1885              		.loc 1 918 0
 1886 003c FB7B     		ldrb	r3, [r7, #15]
 1887 003e 63F03F03 		orn	r3, r3, #63
 1888 0042 FB73     		strb	r3, [r7, #15]
 919:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1889              		.loc 1 919 0
 1890 0044 00E0     		b	.L154
 1891              	.L161:
 909:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV1:
 1892              		.loc 1 909 0
 1893 0046 00BF     		nop
 1894              	.L154:
 920:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 921:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 922:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetTxBuf == ENABLE)
 1895              		.loc 1 922 0
 1896 0048 3B68     		ldr	r3, [r7]
 1897 004a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1898 004c 012B     		cmp	r3, #1
 1899 004e 03D1     		bne	.L155
 923:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 924:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TX_RS;
 1900              		.loc 1 924 0
 1901 0050 FB7B     		ldrb	r3, [r7, #15]
 1902 0052 43F00403 		orr	r3, r3, #4
 1903 0056 FB73     		strb	r3, [r7, #15]
 1904              	.L155:
 925:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 926:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
 1905              		.loc 1 926 0
 1906 0058 3B68     		ldr	r3, [r7]
 1907 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 005c 012B     		cmp	r3, #1
 1909 005e 03D1     		bne	.L156
 927:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 928:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_RX_RS;
 1910              		.loc 1 928 0
 1911 0060 FB7B     		ldrb	r3, [r7, #15]
 1912 0062 43F00203 		orr	r3, r3, #2
 1913 0066 FB73     		strb	r3, [r7, #15]
 1914              	.L156:
 929:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 930:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_DMAMode == ENABLE)
 1915              		.loc 1 930 0
 1916 0068 3B68     		ldr	r3, [r7]
 1917 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1918 006c 012B     		cmp	r3, #1
 1919 006e 03D1     		bne	.L157
 931:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 932:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_DMAMODE_SEL;
 1920              		.loc 1 932 0
 1921 0070 FB7B     		ldrb	r3, [r7, #15]
 1922 0072 43F00803 		orr	r3, r3, #8
 1923 0076 FB73     		strb	r3, [r7, #15]
 1924              	.L157:
 933:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 934:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 935:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 936:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	//write to FIFO control register
 937:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1925              		.loc 1 937 0
 1926 0078 7B68     		ldr	r3, [r7, #4]
 1927 007a 0A4A     		ldr	r2, .L163
 1928 007c 9342     		cmp	r3, r2
 1929 007e 06D1     		bne	.L158
 938:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 939:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 1930              		.loc 1 939 0
 1931 0080 FB7B     		ldrb	r3, [r7, #15]
 1932 0082 23F03003 		bic	r3, r3, #48
 1933 0086 DAB2     		uxtb	r2, r3
 1934 0088 7B68     		ldr	r3, [r7, #4]
 1935 008a 1A72     		strb	r2, [r3, #8]
 940:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 941:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 942:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 943:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 944:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 945:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 946:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1936              		.loc 1 946 0
 1937 008c 05E0     		b	.L162
 1938              	.L158:
 943:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 1939              		.loc 1 943 0
 1940 008e FB7B     		ldrb	r3, [r7, #15]
 1941 0090 23F03003 		bic	r3, r3, #48
 1942 0094 DAB2     		uxtb	r2, r3
 1943 0096 7B68     		ldr	r3, [r7, #4]
 1944 0098 1A72     		strb	r2, [r3, #8]
 1945              	.L162:
 1946              		.loc 1 946 0
 1947 009a 00BF     		nop
 1948 009c 1437     		adds	r7, r7, #20
 1949              		.cfi_def_cfa_offset 4
 1950 009e BD46     		mov	sp, r7
 1951              		.cfi_def_cfa_register 13
 1952              		@ sp needed
 1953 00a0 80BC     		pop	{r7}
 1954              		.cfi_restore 7
 1955              		.cfi_def_cfa_offset 0
 1956 00a2 7047     		bx	lr
 1957              	.L164:
 1958              		.align	2
 1959              	.L163:
 1960 00a4 00000140 		.word	1073807360
 1961              		.cfi_endproc
 1962              	.LFE44:
 1964              		.section	.text.UART_FIFOConfigStructInit,"ax",%progbits
 1965              		.align	2
 1966              		.global	UART_FIFOConfigStructInit
 1967              		.thumb
 1968              		.thumb_func
 1970              	UART_FIFOConfigStructInit:
 1971              	.LFB45:
 947:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 948:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 949:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*****************************************************************************//**
 950:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @brief		Fills each UART_FIFOInitStruct member with its default value:
 951:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_DMAMode = DISABLE
 952:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_Level = UART_FIFO_TRGLEV0
 953:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_ResetRxBuf = ENABLE
 954:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_ResetTxBuf = ENABLE
 955:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_State = ENABLE
 956:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 957:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @param[in]	UART_FIFOInitStruct Pointer to a UART_FIFO_CFG_Type structure
 958:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    which will be initialized.
 959:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @return		None
 960:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *******************************************************************************/
 961:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FIFOConfigStructInit(UART_FIFO_CFG_Type *UART_FIFOInitStruct)
 962:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1972              		.loc 1 962 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 8
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 1977 0000 80B4     		push	{r7}
 1978              		.cfi_def_cfa_offset 4
 1979              		.cfi_offset 7, -4
 1980 0002 83B0     		sub	sp, sp, #12
 1981              		.cfi_def_cfa_offset 16
 1982 0004 00AF     		add	r7, sp, #0
 1983              		.cfi_def_cfa_register 7
 1984 0006 7860     		str	r0, [r7, #4]
 963:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 1985              		.loc 1 963 0
 1986 0008 7B68     		ldr	r3, [r7, #4]
 1987 000a 0022     		movs	r2, #0
 1988 000c 9A70     		strb	r2, [r3, #2]
 964:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
 1989              		.loc 1 964 0
 1990 000e 7B68     		ldr	r3, [r7, #4]
 1991 0010 0022     		movs	r2, #0
 1992 0012 DA70     		strb	r2, [r3, #3]
 965:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 1993              		.loc 1 965 0
 1994 0014 7B68     		ldr	r3, [r7, #4]
 1995 0016 0122     		movs	r2, #1
 1996 0018 1A70     		strb	r2, [r3]
 966:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
 1997              		.loc 1 966 0
 1998 001a 7B68     		ldr	r3, [r7, #4]
 1999 001c 0122     		movs	r2, #1
 2000 001e 5A70     		strb	r2, [r3, #1]
 967:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2001              		.loc 1 967 0
 2002 0020 00BF     		nop
 2003 0022 0C37     		adds	r7, r7, #12
 2004              		.cfi_def_cfa_offset 4
 2005 0024 BD46     		mov	sp, r7
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 0026 80BC     		pop	{r7}
 2009              		.cfi_restore 7
 2010              		.cfi_def_cfa_offset 0
 2011 0028 7047     		bx	lr
 2012              		.cfi_endproc
 2013              	.LFE45:
 2015 002a 00BF     		.section	.text.UART_ABCmd,"ax",%progbits
 2016              		.align	2
 2017              		.global	UART_ABCmd
 2018              		.thumb
 2019              		.thumb_func
 2021              	UART_ABCmd:
 2022              	.LFB46:
 968:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 969:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 970:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 971:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Start/Stop Auto Baudrate activity
 972:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 973:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 974:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	ABConfigStruct	A pointer to UART_AB_CFG_Type structure that
 975:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 								contains specified information about UART
 976:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 								auto baudrate configuration
 977:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of Auto baudrate activity, should be:
 978:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Start this activity
 979:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *				- DISABLE: Stop this activity
 980:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:		Auto-baudrate mode enable bit will be cleared once this mode
 981:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				completed.
 982:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		none
 983:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 984:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ABCmd(LPC_UART_TypeDef *UARTx, UART_AB_CFG_Type *ABConfigStruct, \
 985:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				FunctionalState NewState)
 986:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2023              		.loc 1 986 0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 24
 2026              		@ frame_needed = 1, uses_anonymous_args = 0
 2027              		@ link register save eliminated.
 2028 0000 80B4     		push	{r7}
 2029              		.cfi_def_cfa_offset 4
 2030              		.cfi_offset 7, -4
 2031 0002 87B0     		sub	sp, sp, #28
 2032              		.cfi_def_cfa_offset 32
 2033 0004 00AF     		add	r7, sp, #0
 2034              		.cfi_def_cfa_register 7
 2035 0006 F860     		str	r0, [r7, #12]
 2036 0008 B960     		str	r1, [r7, #8]
 2037 000a 1346     		mov	r3, r2
 2038 000c FB71     		strb	r3, [r7, #7]
 987:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 988:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 989:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 990:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 991:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 992:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = 0;
 2039              		.loc 1 992 0
 2040 000e 0023     		movs	r3, #0
 2041 0010 7B61     		str	r3, [r7, #20]
 993:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
 2042              		.loc 1 993 0
 2043 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2044 0014 012B     		cmp	r3, #1
 2045 0016 0FD1     		bne	.L167
 994:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
 2046              		.loc 1 994 0
 2047 0018 BB68     		ldr	r3, [r7, #8]
 2048 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 001c 012B     		cmp	r3, #1
 2050 001e 03D1     		bne	.L168
 995:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_ACR_MODE;
 2051              		.loc 1 995 0
 2052 0020 7B69     		ldr	r3, [r7, #20]
 2053 0022 43F00203 		orr	r3, r3, #2
 2054 0026 7B61     		str	r3, [r7, #20]
 2055              	.L168:
 996:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 997:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
 2056              		.loc 1 997 0
 2057 0028 BB68     		ldr	r3, [r7, #8]
 2058 002a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2059 002c 012B     		cmp	r3, #1
 2060 002e 03D1     		bne	.L167
 998:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_ACR_AUTO_RESTART;
 2061              		.loc 1 998 0
 2062 0030 7B69     		ldr	r3, [r7, #20]
 2063 0032 43F00403 		orr	r3, r3, #4
 2064 0036 7B61     		str	r3, [r7, #20]
 2065              	.L167:
 999:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1000:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1001:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1002:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 2066              		.loc 1 1002 0
 2067 0038 FB68     		ldr	r3, [r7, #12]
 2068 003a 2A4A     		ldr	r2, .L175
 2069 003c 9342     		cmp	r3, r2
 2070 003e 25D1     		bne	.L169
1003:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1004:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (NewState == ENABLE)
 2071              		.loc 1 1004 0
 2072 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2073 0042 012B     		cmp	r3, #1
 2074 0044 1ED1     		bne	.L170
1005:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1006:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1007:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 2075              		.loc 1 1007 0
 2076 0046 FB68     		ldr	r3, [r7, #12]
 2077 0048 1B7B     		ldrb	r3, [r3, #12]
 2078 004a DBB2     		uxtb	r3, r3
 2079 004c 63F07F03 		orn	r3, r3, #127
 2080 0050 DAB2     		uxtb	r2, r3
 2081 0052 FB68     		ldr	r3, [r7, #12]
 2082 0054 1A73     		strb	r2, [r3, #12]
1008:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
 2083              		.loc 1 1008 0
 2084 0056 FB68     		ldr	r3, [r7, #12]
 2085 0058 0022     		movs	r2, #0
 2086 005a 1A70     		strb	r2, [r3]
1009:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLM = 0;
 2087              		.loc 1 1009 0
 2088 005c FB68     		ldr	r3, [r7, #12]
 2089 005e 0022     		movs	r2, #0
 2090 0060 1A71     		strb	r2, [r3, #4]
1010:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= ~UART_LCR_DLAB_EN;
 2091              		.loc 1 1010 0
 2092 0062 FB68     		ldr	r3, [r7, #12]
 2093 0064 1B7B     		ldrb	r3, [r3, #12]
 2094 0066 DBB2     		uxtb	r3, r3
 2095 0068 03F07F03 		and	r3, r3, #127
 2096 006c DAB2     		uxtb	r2, r3
 2097 006e FB68     		ldr	r3, [r7, #12]
 2098 0070 1A73     		strb	r2, [r3, #12]
1011:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1012:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
 2099              		.loc 1 1012 0
 2100 0072 FB68     		ldr	r3, [r7, #12]
 2101 0074 1022     		movs	r2, #16
 2102 0076 9A62     		str	r2, [r3, #40]
1013:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = UART_ACR_START | tmp;
 2103              		.loc 1 1013 0
 2104 0078 7B69     		ldr	r3, [r7, #20]
 2105 007a 43F00102 		orr	r2, r3, #1
 2106 007e FB68     		ldr	r3, [r7, #12]
 2107 0080 1A62     		str	r2, [r3, #32]
1014:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1015:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1016:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1017:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
1018:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1019:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1020:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1021:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1022:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (NewState == ENABLE)
1023:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1024:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1025:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
1026:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLL = 0;
1027:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLM = 0;
1028:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR &= ~UART_LCR_DLAB_EN;
1029:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1030:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->FDR = 0x10;
1031:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->ACR = UART_ACR_START | tmp;
1032:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1033:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1034:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1035:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->ACR = 0;
1036:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1037:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1038:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2108              		.loc 1 1038 0
 2109 0082 29E0     		b	.L174
 2110              	.L170:
1017:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2111              		.loc 1 1017 0
 2112 0084 FB68     		ldr	r3, [r7, #12]
 2113 0086 0022     		movs	r2, #0
 2114 0088 1A62     		str	r2, [r3, #32]
 2115              		.loc 1 1038 0
 2116 008a 25E0     		b	.L174
 2117              	.L169:
1022:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 2118              		.loc 1 1022 0
 2119 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2120 008e 012B     		cmp	r3, #1
 2121 0090 1FD1     		bne	.L173
1025:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLL = 0;
 2122              		.loc 1 1025 0
 2123 0092 FB68     		ldr	r3, [r7, #12]
 2124 0094 1B7B     		ldrb	r3, [r3, #12]
 2125 0096 DBB2     		uxtb	r3, r3
 2126 0098 63F07F03 		orn	r3, r3, #127
 2127 009c DAB2     		uxtb	r2, r3
 2128 009e FB68     		ldr	r3, [r7, #12]
 2129 00a0 1A73     		strb	r2, [r3, #12]
1026:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLM = 0;
 2130              		.loc 1 1026 0
 2131 00a2 FB68     		ldr	r3, [r7, #12]
 2132 00a4 0022     		movs	r2, #0
 2133 00a6 1A70     		strb	r2, [r3]
1027:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR &= ~UART_LCR_DLAB_EN;
 2134              		.loc 1 1027 0
 2135 00a8 FB68     		ldr	r3, [r7, #12]
 2136 00aa 0022     		movs	r2, #0
 2137 00ac 1A71     		strb	r2, [r3, #4]
1028:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// FDR value must be reset to default value
 2138              		.loc 1 1028 0
 2139 00ae FB68     		ldr	r3, [r7, #12]
 2140 00b0 1B7B     		ldrb	r3, [r3, #12]
 2141 00b2 DBB2     		uxtb	r3, r3
 2142 00b4 03F07F03 		and	r3, r3, #127
 2143 00b8 DAB2     		uxtb	r2, r3
 2144 00ba FB68     		ldr	r3, [r7, #12]
 2145 00bc 1A73     		strb	r2, [r3, #12]
1030:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->ACR = UART_ACR_START | tmp;
 2146              		.loc 1 1030 0
 2147 00be FB68     		ldr	r3, [r7, #12]
 2148 00c0 1022     		movs	r2, #16
 2149 00c2 83F82820 		strb	r2, [r3, #40]
1031:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2150              		.loc 1 1031 0
 2151 00c6 7B69     		ldr	r3, [r7, #20]
 2152 00c8 43F00102 		orr	r2, r3, #1
 2153 00cc FB68     		ldr	r3, [r7, #12]
 2154 00ce 1A62     		str	r2, [r3, #32]
 2155              		.loc 1 1038 0
 2156 00d0 02E0     		b	.L174
 2157              	.L173:
1035:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2158              		.loc 1 1035 0
 2159 00d2 FB68     		ldr	r3, [r7, #12]
 2160 00d4 0022     		movs	r2, #0
 2161 00d6 1A62     		str	r2, [r3, #32]
 2162              	.L174:
 2163              		.loc 1 1038 0
 2164 00d8 00BF     		nop
 2165 00da 1C37     		adds	r7, r7, #28
 2166              		.cfi_def_cfa_offset 4
 2167 00dc BD46     		mov	sp, r7
 2168              		.cfi_def_cfa_register 13
 2169              		@ sp needed
 2170 00de 80BC     		pop	{r7}
 2171              		.cfi_restore 7
 2172              		.cfi_def_cfa_offset 0
 2173 00e0 7047     		bx	lr
 2174              	.L176:
 2175 00e2 00BF     		.align	2
 2176              	.L175:
 2177 00e4 00000140 		.word	1073807360
 2178              		.cfi_endproc
 2179              	.LFE46:
 2181              		.section	.text.UART_TxCmd,"ax",%progbits
 2182              		.align	2
 2183              		.global	UART_TxCmd
 2184              		.thumb
 2185              		.thumb_func
 2187              	UART_TxCmd:
 2188              	.LFB47:
1039:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1040:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1041:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1042:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable/Disable transmission on UART TxD pin
1043:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
1044:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
1045:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of Tx transmission function, should be:
1046:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function
1047:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- DISABLE: Disable this function
1048:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1049:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1050:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_TxCmd(LPC_UART_TypeDef *UARTx, FunctionalState NewState)
1051:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2189              		.loc 1 1051 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 8
 2192              		@ frame_needed = 1, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
 2194 0000 80B4     		push	{r7}
 2195              		.cfi_def_cfa_offset 4
 2196              		.cfi_offset 7, -4
 2197 0002 83B0     		sub	sp, sp, #12
 2198              		.cfi_def_cfa_offset 16
 2199 0004 00AF     		add	r7, sp, #0
 2200              		.cfi_def_cfa_register 7
 2201 0006 7860     		str	r0, [r7, #4]
 2202 0008 0B46     		mov	r3, r1
 2203 000a FB70     		strb	r3, [r7, #3]
1052:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1053:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1054:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1055:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 2204              		.loc 1 1055 0
 2205 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2206 000e 012B     		cmp	r3, #1
 2207 0010 19D1     		bne	.L178
1056:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1057:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 2208              		.loc 1 1057 0
 2209 0012 7B68     		ldr	r3, [r7, #4]
 2210 0014 184A     		ldr	r2, .L184
 2211 0016 9342     		cmp	r3, r2
 2212 0018 0AD1     		bne	.L179
1058:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1059:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER |= UART_TER_TXEN;
 2213              		.loc 1 1059 0
 2214 001a 7B68     		ldr	r3, [r7, #4]
 2215 001c 93F83030 		ldrb	r3, [r3, #48]
 2216 0020 DBB2     		uxtb	r3, r3
 2217 0022 63F07F03 		orn	r3, r3, #127
 2218 0026 DAB2     		uxtb	r2, r3
 2219 0028 7B68     		ldr	r3, [r7, #4]
 2220 002a 83F83020 		strb	r2, [r3, #48]
1060:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1061:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1062:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1063:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->TER |= UART_TER_TXEN;
1064:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1065:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1066:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1067:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1068:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1069:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1070:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
1071:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1072:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1073:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1074:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
1075:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1076:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1077:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2221              		.loc 1 1077 0
 2222 002e 1DE0     		b	.L183
 2223              	.L179:
1063:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2224              		.loc 1 1063 0
 2225 0030 7B68     		ldr	r3, [r7, #4]
 2226 0032 93F83030 		ldrb	r3, [r3, #48]
 2227 0036 DBB2     		uxtb	r3, r3
 2228 0038 63F07F03 		orn	r3, r3, #127
 2229 003c DAB2     		uxtb	r2, r3
 2230 003e 7B68     		ldr	r3, [r7, #4]
 2231 0040 83F83020 		strb	r2, [r3, #48]
 2232              		.loc 1 1077 0
 2233 0044 12E0     		b	.L183
 2234              	.L178:
1068:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 2235              		.loc 1 1068 0
 2236 0046 7B68     		ldr	r3, [r7, #4]
 2237 0048 0B4A     		ldr	r2, .L184
 2238 004a 9342     		cmp	r3, r2
 2239 004c 07D1     		bne	.L182
1070:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2240              		.loc 1 1070 0
 2241 004e 7B68     		ldr	r3, [r7, #4]
 2242 0050 93F83030 		ldrb	r3, [r3, #48]
 2243 0054 7B68     		ldr	r3, [r7, #4]
 2244 0056 0022     		movs	r2, #0
 2245 0058 83F83020 		strb	r2, [r3, #48]
 2246              		.loc 1 1077 0
 2247 005c 06E0     		b	.L183
 2248              	.L182:
1074:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 2249              		.loc 1 1074 0
 2250 005e 7B68     		ldr	r3, [r7, #4]
 2251 0060 93F83030 		ldrb	r3, [r3, #48]
 2252 0064 7B68     		ldr	r3, [r7, #4]
 2253 0066 0022     		movs	r2, #0
 2254 0068 83F83020 		strb	r2, [r3, #48]
 2255              	.L183:
 2256              		.loc 1 1077 0
 2257 006c 00BF     		nop
 2258 006e 0C37     		adds	r7, r7, #12
 2259              		.cfi_def_cfa_offset 4
 2260 0070 BD46     		mov	sp, r7
 2261              		.cfi_def_cfa_register 13
 2262              		@ sp needed
 2263 0072 80BC     		pop	{r7}
 2264              		.cfi_restore 7
 2265              		.cfi_def_cfa_offset 0
 2266 0074 7047     		bx	lr
 2267              	.L185:
 2268 0076 00BF     		.align	2
 2269              	.L184:
 2270 0078 00000140 		.word	1073807360
 2271              		.cfi_endproc
 2272              	.LFE47:
 2274              		.section	.text.UART_FullModemForcePinState,"ax",%progbits
 2275              		.align	2
 2276              		.global	UART_FullModemForcePinState
 2277              		.thumb
 2278              		.thumb_func
 2280              	UART_FullModemForcePinState:
 2281              	.LFB48:
1078:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1079:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
1080:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1081:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1082:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Force pin DTR/RTS corresponding to given state (Full modem mode)
1083:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1084:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Pin	Pin that NewState will be applied to, should be:
1085:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_DTR: DTR pin.
1086:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_RTS: RTS pin.
1087:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of DTR/RTS pin, should be:
1088:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- INACTIVE: Force the pin to inactive signal.
1089:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- ACTIVE: Force the pin to active signal.
1090:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1091:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1092:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FullModemForcePinState(LPC_UART1_TypeDef *UARTx, UART_MODEM_PIN_Type Pin, \
1093:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 							UART1_SignalState NewState)
1094:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2282              		.loc 1 1094 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 16
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287 0000 80B4     		push	{r7}
 2288              		.cfi_def_cfa_offset 4
 2289              		.cfi_offset 7, -4
 2290 0002 85B0     		sub	sp, sp, #20
 2291              		.cfi_def_cfa_offset 24
 2292 0004 00AF     		add	r7, sp, #0
 2293              		.cfi_def_cfa_register 7
 2294 0006 7860     		str	r0, [r7, #4]
 2295 0008 0B46     		mov	r3, r1
 2296 000a FB70     		strb	r3, [r7, #3]
 2297 000c 1346     		mov	r3, r2
 2298 000e BB70     		strb	r3, [r7, #2]
1095:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp = 0;
 2299              		.loc 1 1095 0
 2300 0010 0023     		movs	r3, #0
 2301 0012 FB73     		strb	r3, [r7, #15]
1096:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1097:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1098:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_PIN(Pin));
1099:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_SIGNALSTATE(NewState));
1100:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1101:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (Pin){
 2302              		.loc 1 1101 0
 2303 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2304 0016 002B     		cmp	r3, #0
 2305 0018 02D0     		beq	.L188
 2306 001a 012B     		cmp	r3, #1
 2307 001c 03D0     		beq	.L189
1102:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_DTR:
1103:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_DTR_CTRL;
1104:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1105:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_RTS:
1106:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_RTS_CTRL;
1107:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1108:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1109:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2308              		.loc 1 1109 0
 2309 001e 05E0     		b	.L190
 2310              	.L188:
1103:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2311              		.loc 1 1103 0
 2312 0020 0123     		movs	r3, #1
 2313 0022 FB73     		strb	r3, [r7, #15]
1104:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_RTS:
 2314              		.loc 1 1104 0
 2315 0024 02E0     		b	.L190
 2316              	.L189:
1106:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2317              		.loc 1 1106 0
 2318 0026 0223     		movs	r3, #2
 2319 0028 FB73     		strb	r3, [r7, #15]
1107:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 2320              		.loc 1 1107 0
 2321 002a 00BF     		nop
 2322              	.L190:
1110:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1111:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1112:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ACTIVE){
 2323              		.loc 1 1112 0
 2324 002c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2325 002e 012B     		cmp	r3, #1
 2326 0030 08D1     		bne	.L191
1113:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 2327              		.loc 1 1113 0
 2328 0032 7B68     		ldr	r3, [r7, #4]
 2329 0034 1B7C     		ldrb	r3, [r3, #16]
 2330 0036 DAB2     		uxtb	r2, r3
 2331 0038 FB7B     		ldrb	r3, [r7, #15]
 2332 003a 1343     		orrs	r3, r3, r2
 2333 003c DAB2     		uxtb	r2, r3
 2334 003e 7B68     		ldr	r3, [r7, #4]
 2335 0040 1A74     		strb	r2, [r3, #16]
1114:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1115:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
1116:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1117:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2336              		.loc 1 1117 0
 2337 0042 0CE0     		b	.L193
 2338              	.L191:
1115:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 2339              		.loc 1 1115 0
 2340 0044 7B68     		ldr	r3, [r7, #4]
 2341 0046 1B7C     		ldrb	r3, [r3, #16]
 2342 0048 DAB2     		uxtb	r2, r3
 2343 004a FB7B     		ldrb	r3, [r7, #15]
 2344 004c DB43     		mvns	r3, r3
 2345 004e DBB2     		uxtb	r3, r3
 2346 0050 1340     		ands	r3, r3, r2
 2347 0052 DBB2     		uxtb	r3, r3
 2348 0054 23F00C03 		bic	r3, r3, #12
 2349 0058 DAB2     		uxtb	r2, r3
 2350 005a 7B68     		ldr	r3, [r7, #4]
 2351 005c 1A74     		strb	r2, [r3, #16]
 2352              	.L193:
 2353              		.loc 1 1117 0
 2354 005e 00BF     		nop
 2355 0060 1437     		adds	r7, r7, #20
 2356              		.cfi_def_cfa_offset 4
 2357 0062 BD46     		mov	sp, r7
 2358              		.cfi_def_cfa_register 13
 2359              		@ sp needed
 2360 0064 80BC     		pop	{r7}
 2361              		.cfi_restore 7
 2362              		.cfi_def_cfa_offset 0
 2363 0066 7047     		bx	lr
 2364              		.cfi_endproc
 2365              	.LFE48:
 2367              		.section	.text.UART_FullModemConfigMode,"ax",%progbits
 2368              		.align	2
 2369              		.global	UART_FullModemConfigMode
 2370              		.thumb
 2371              		.thumb_func
 2373              	UART_FullModemConfigMode:
 2374              	.LFB49:
1118:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1119:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1120:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1121:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure Full Modem mode for UART peripheral
1122:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1123:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Mode Full Modem mode, should be:
1124:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_LOOPBACK: Loop back mode.
1125:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_RTS: Auto-RTS mode.
1126:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_CTS: Auto-CTS mode.
1127:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of this mode, should be:
1128:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this mode.
1129:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- DISABLE: Disable this mode.
1130:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1131:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1132:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FullModemConfigMode(LPC_UART1_TypeDef *UARTx, UART_MODEM_MODE_Type Mode, \
1133:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 							FunctionalState NewState)
1134:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2375              		.loc 1 1134 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 16
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379              		@ link register save eliminated.
 2380 0000 80B4     		push	{r7}
 2381              		.cfi_def_cfa_offset 4
 2382              		.cfi_offset 7, -4
 2383 0002 85B0     		sub	sp, sp, #20
 2384              		.cfi_def_cfa_offset 24
 2385 0004 00AF     		add	r7, sp, #0
 2386              		.cfi_def_cfa_register 7
 2387 0006 7860     		str	r0, [r7, #4]
 2388 0008 0B46     		mov	r3, r1
 2389 000a FB70     		strb	r3, [r7, #3]
 2390 000c 1346     		mov	r3, r2
 2391 000e BB70     		strb	r3, [r7, #2]
1135:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp;
1136:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1137:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1138:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_MODE(Mode));
1139:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1140:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1141:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(Mode){
 2392              		.loc 1 1141 0
 2393 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2394 0012 012B     		cmp	r3, #1
 2395 0014 06D0     		beq	.L196
 2396 0016 022B     		cmp	r3, #2
 2397 0018 07D0     		beq	.L197
 2398 001a 002B     		cmp	r3, #0
 2399 001c 08D1     		bne	.L202
1142:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_LOOPBACK:
1143:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
 2400              		.loc 1 1143 0
 2401 001e 1023     		movs	r3, #16
 2402 0020 FB73     		strb	r3, [r7, #15]
1144:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2403              		.loc 1 1144 0
 2404 0022 08E0     		b	.L199
 2405              	.L196:
1145:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_RTS:
1146:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_RTS_EN;
 2406              		.loc 1 1146 0
 2407 0024 4023     		movs	r3, #64
 2408 0026 FB73     		strb	r3, [r7, #15]
1147:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2409              		.loc 1 1147 0
 2410 0028 05E0     		b	.L199
 2411              	.L197:
1148:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_CTS:
1149:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_CTS_EN;
 2412              		.loc 1 1149 0
 2413 002a 8023     		movs	r3, #128
 2414 002c FB73     		strb	r3, [r7, #15]
1150:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2415              		.loc 1 1150 0
 2416 002e 02E0     		b	.L199
 2417              	.L202:
1151:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1152:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// mthomas, avoid warning:
1153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
 2418              		.loc 1 1153 0
 2419 0030 1023     		movs	r3, #16
 2420 0032 FB73     		strb	r3, [r7, #15]
1154:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 2421              		.loc 1 1154 0
 2422 0034 00BF     		nop
 2423              	.L199:
1155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1156:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1157:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 2424              		.loc 1 1157 0
 2425 0036 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2426 0038 012B     		cmp	r3, #1
 2427 003a 08D1     		bne	.L200
1158:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1159:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 2428              		.loc 1 1159 0
 2429 003c 7B68     		ldr	r3, [r7, #4]
 2430 003e 1B7C     		ldrb	r3, [r3, #16]
 2431 0040 DAB2     		uxtb	r2, r3
 2432 0042 FB7B     		ldrb	r3, [r7, #15]
 2433 0044 1343     		orrs	r3, r3, r2
 2434 0046 DAB2     		uxtb	r2, r3
 2435 0048 7B68     		ldr	r3, [r7, #4]
 2436 004a 1A74     		strb	r2, [r3, #16]
1160:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1161:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1162:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1163:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
1164:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1165:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2437              		.loc 1 1165 0
 2438 004c 0CE0     		b	.L203
 2439              	.L200:
1163:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 2440              		.loc 1 1163 0
 2441 004e 7B68     		ldr	r3, [r7, #4]
 2442 0050 1B7C     		ldrb	r3, [r3, #16]
 2443 0052 DAB2     		uxtb	r2, r3
 2444 0054 FB7B     		ldrb	r3, [r7, #15]
 2445 0056 DB43     		mvns	r3, r3
 2446 0058 DBB2     		uxtb	r3, r3
 2447 005a 1340     		ands	r3, r3, r2
 2448 005c DBB2     		uxtb	r3, r3
 2449 005e 23F00C03 		bic	r3, r3, #12
 2450 0062 DAB2     		uxtb	r2, r3
 2451 0064 7B68     		ldr	r3, [r7, #4]
 2452 0066 1A74     		strb	r2, [r3, #16]
 2453              	.L203:
 2454              		.loc 1 1165 0
 2455 0068 00BF     		nop
 2456 006a 1437     		adds	r7, r7, #20
 2457              		.cfi_def_cfa_offset 4
 2458 006c BD46     		mov	sp, r7
 2459              		.cfi_def_cfa_register 13
 2460              		@ sp needed
 2461 006e 80BC     		pop	{r7}
 2462              		.cfi_restore 7
 2463              		.cfi_def_cfa_offset 0
 2464 0070 7047     		bx	lr
 2465              		.cfi_endproc
 2466              	.LFE49:
 2468 0072 00BF     		.section	.text.UART_FullModemGetStatus,"ax",%progbits
 2469              		.align	2
 2470              		.global	UART_FullModemGetStatus
 2471              		.thumb
 2472              		.thumb_func
 2474              	UART_FullModemGetStatus:
 2475              	.LFB50:
1166:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1167:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1168:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1169:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Get current status of modem status register
1170:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1171:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Current value of modem status register
1172:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member
1173:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			UART_MODEM_STAT_type enumeration to determine current flag status
1174:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			corresponding to each modem flag status. Because some flags in
1175:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			modem status register will be cleared after reading, the next reading
1176:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			modem register could not be correct. So this function used to
1177:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			read modem status register in one time only, then the return value
1178:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			used to check all flags.
1179:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1180:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_FullModemGetStatus(LPC_UART1_TypeDef *UARTx)
1181:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2476              		.loc 1 1181 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 8
 2479              		@ frame_needed = 1, uses_anonymous_args = 0
 2480              		@ link register save eliminated.
 2481 0000 80B4     		push	{r7}
 2482              		.cfi_def_cfa_offset 4
 2483              		.cfi_offset 7, -4
 2484 0002 83B0     		sub	sp, sp, #12
 2485              		.cfi_def_cfa_offset 16
 2486 0004 00AF     		add	r7, sp, #0
 2487              		.cfi_def_cfa_register 7
 2488 0006 7860     		str	r0, [r7, #4]
1182:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1183:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return ((UARTx->MSR) & UART1_MSR_BITMASK);
 2489              		.loc 1 1183 0
 2490 0008 7B68     		ldr	r3, [r7, #4]
 2491 000a 1B7E     		ldrb	r3, [r3, #24]
 2492 000c DBB2     		uxtb	r3, r3
1184:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2493              		.loc 1 1184 0
 2494 000e 1846     		mov	r0, r3
 2495 0010 0C37     		adds	r7, r7, #12
 2496              		.cfi_def_cfa_offset 4
 2497 0012 BD46     		mov	sp, r7
 2498              		.cfi_def_cfa_register 13
 2499              		@ sp needed
 2500 0014 80BC     		pop	{r7}
 2501              		.cfi_restore 7
 2502              		.cfi_def_cfa_offset 0
 2503 0016 7047     		bx	lr
 2504              		.cfi_endproc
 2505              	.LFE50:
 2507              		.section	.text.UART_RS485Config,"ax",%progbits
 2508              		.align	2
 2509              		.global	UART_RS485Config
 2510              		.thumb
 2511              		.thumb_func
 2513              	UART_RS485Config:
 2514              	.LFB51:
1185:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1186:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1187:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1188:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure UART peripheral in RS485 mode according to the specified
1189:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *               parameters in the RS485ConfigStruct.
1190:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1191:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	RS485ConfigStruct Pointer to a UART1_RS485_CTRLCFG_Type structure
1192:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    that contains the configuration information for specified UART
1193:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    in RS485 mode.
1194:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1195:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1196:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485Config(LPC_UART1_TypeDef *UARTx, UART1_RS485_CTRLCFG_Type *RS485ConfigStruct)
1197:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2515              		.loc 1 1197 0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 16
 2518              		@ frame_needed = 1, uses_anonymous_args = 0
 2519              		@ link register save eliminated.
 2520 0000 80B4     		push	{r7}
 2521              		.cfi_def_cfa_offset 4
 2522              		.cfi_offset 7, -4
 2523 0002 85B0     		sub	sp, sp, #20
 2524              		.cfi_def_cfa_offset 24
 2525 0004 00AF     		add	r7, sp, #0
 2526              		.cfi_def_cfa_register 7
 2527 0006 7860     		str	r0, [r7, #4]
 2528 0008 3960     		str	r1, [r7]
1198:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
1199:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1200:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1201:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoAddrDetect_State));
1202:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoDirCtrl_State));
1203:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_DELAYVALUE(RS485ConfigStruct->DelayValue));
1204:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_SETSTATE(RS485ConfigStruct->DirCtrlPol_Level));
1205:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_RS485_DIRCTRL_PIN(RS485ConfigStruct->DirCtrlPin));
1206:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_MATCHADDRVALUE(RS485ConfigStruct->MatchAddrValue));
1207:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->NormalMultiDropMode_State));
1208:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->Rx_State));
1209:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1210:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = 0;
 2529              		.loc 1 1210 0
 2530 000a 0023     		movs	r3, #0
 2531 000c FB60     		str	r3, [r7, #12]
1211:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// If Auto Direction Control is enabled -  This function is used in Master mode
1212:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoDirCtrl_State == ENABLE)
 2532              		.loc 1 1212 0
 2533 000e 3B68     		ldr	r3, [r7]
 2534 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2535 0012 012B     		cmp	r3, #1
 2536 0014 18D1     		bne	.L207
1213:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1214:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_DCTRL_EN;
 2537              		.loc 1 1214 0
 2538 0016 FB68     		ldr	r3, [r7, #12]
 2539 0018 43F01003 		orr	r3, r3, #16
 2540 001c FB60     		str	r3, [r7, #12]
1215:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1216:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set polar
1217:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPol_Level == SET)
 2541              		.loc 1 1217 0
 2542 001e 3B68     		ldr	r3, [r7]
 2543 0020 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2544 0022 012B     		cmp	r3, #1
 2545 0024 03D1     		bne	.L208
1218:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1219:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_OINV_1;
 2546              		.loc 1 1219 0
 2547 0026 FB68     		ldr	r3, [r7, #12]
 2548 0028 43F02003 		orr	r3, r3, #32
 2549 002c FB60     		str	r3, [r7, #12]
 2550              	.L208:
1220:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1221:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1222:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set pin according to
1223:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPin == UART1_RS485_DIRCTRL_DTR)
 2551              		.loc 1 1223 0
 2552 002e 3B68     		ldr	r3, [r7]
 2553 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2554 0032 012B     		cmp	r3, #1
 2555 0034 03D1     		bne	.L209
1224:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1225:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_SEL_DTR;
 2556              		.loc 1 1225 0
 2557 0036 FB68     		ldr	r3, [r7, #12]
 2558 0038 43F00803 		orr	r3, r3, #8
 2559 003c FB60     		str	r3, [r7, #12]
 2560              	.L209:
1226:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1227:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1228:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Fill delay time
1229:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485DLY = RS485ConfigStruct->DelayValue & UART1_RS485DLY_BITMASK;
 2561              		.loc 1 1229 0
 2562 003e 3B68     		ldr	r3, [r7]
 2563 0040 DA79     		ldrb	r2, [r3, #7]	@ zero_extendqisi2
 2564 0042 7B68     		ldr	r3, [r7, #4]
 2565 0044 83F85420 		strb	r2, [r3, #84]
 2566              	.L207:
1230:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1231:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1232:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// MultiDrop mode is enable
1233:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->NormalMultiDropMode_State == ENABLE)
 2567              		.loc 1 1233 0
 2568 0048 3B68     		ldr	r3, [r7]
 2569 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2570 004c 012B     		cmp	r3, #1
 2571 004e 03D1     		bne	.L210
1234:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1235:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_NMM_EN;
 2572              		.loc 1 1235 0
 2573 0050 FB68     		ldr	r3, [r7, #12]
 2574 0052 43F00103 		orr	r3, r3, #1
 2575 0056 FB60     		str	r3, [r7, #12]
 2576              	.L210:
1236:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1237:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1238:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Auto Address Detect function
1239:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoAddrDetect_State == ENABLE)
 2577              		.loc 1 1239 0
 2578 0058 3B68     		ldr	r3, [r7]
 2579 005a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2580 005c 012B     		cmp	r3, #1
 2581 005e 08D1     		bne	.L211
1240:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1241:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_AADEN;
 2582              		.loc 1 1241 0
 2583 0060 FB68     		ldr	r3, [r7, #12]
 2584 0062 43F00403 		orr	r3, r3, #4
 2585 0066 FB60     		str	r3, [r7, #12]
1242:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Fill Match Address
1243:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ADRMATCH = RS485ConfigStruct->MatchAddrValue & UART1_RS485ADRMATCH_BITMASK;
 2586              		.loc 1 1243 0
 2587 0068 3B68     		ldr	r3, [r7]
 2588 006a 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 2589 006c 7B68     		ldr	r3, [r7, #4]
 2590 006e 83F85020 		strb	r2, [r3, #80]
 2591              	.L211:
1244:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1245:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1246:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1247:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receiver is disable
1248:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->Rx_State == DISABLE)
 2592              		.loc 1 1248 0
 2593 0072 3B68     		ldr	r3, [r7]
 2594 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2595 0076 002B     		cmp	r3, #0
 2596 0078 03D1     		bne	.L212
1249:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1250:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_RX_DIS;
 2597              		.loc 1 1250 0
 2598 007a FB68     		ldr	r3, [r7, #12]
 2599 007c 43F00203 		orr	r3, r3, #2
 2600 0080 FB60     		str	r3, [r7, #12]
 2601              	.L212:
1251:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1252:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1253:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// write back to RS485 control register
1254:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->RS485CTRL = tmp & UART1_RS485CTRL_BITMASK;
 2602              		.loc 1 1254 0
 2603 0082 FB68     		ldr	r3, [r7, #12]
 2604 0084 DBB2     		uxtb	r3, r3
 2605 0086 03F03F03 		and	r3, r3, #63
 2606 008a DAB2     		uxtb	r2, r3
 2607 008c 7B68     		ldr	r3, [r7, #4]
 2608 008e 83F84C20 		strb	r2, [r3, #76]
1255:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1256:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Enable Parity function and leave parity in stick '0' parity as default
1257:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->LCR |= (UART_LCR_PARITY_F_0 | UART_LCR_PARITY_EN);
 2609              		.loc 1 1257 0
 2610 0092 7B68     		ldr	r3, [r7, #4]
 2611 0094 1B7B     		ldrb	r3, [r3, #12]
 2612 0096 DBB2     		uxtb	r3, r3
 2613 0098 43F03803 		orr	r3, r3, #56
 2614 009c DAB2     		uxtb	r2, r3
 2615 009e 7B68     		ldr	r3, [r7, #4]
 2616 00a0 1A73     		strb	r2, [r3, #12]
1258:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2617              		.loc 1 1258 0
 2618 00a2 00BF     		nop
 2619 00a4 1437     		adds	r7, r7, #20
 2620              		.cfi_def_cfa_offset 4
 2621 00a6 BD46     		mov	sp, r7
 2622              		.cfi_def_cfa_register 13
 2623              		@ sp needed
 2624 00a8 80BC     		pop	{r7}
 2625              		.cfi_restore 7
 2626              		.cfi_def_cfa_offset 0
 2627 00aa 7047     		bx	lr
 2628              		.cfi_endproc
 2629              	.LFE51:
 2631              		.section	.text.UART_RS485ReceiverCmd,"ax",%progbits
 2632              		.align	2
 2633              		.global	UART_RS485ReceiverCmd
 2634              		.thumb
 2635              		.thumb_func
 2637              	UART_RS485ReceiverCmd:
 2638              	.LFB52:
1259:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1260:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1261:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1262:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Enable/Disable receiver in RS485 module in UART1
1263:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx 		UART1 only.
1264:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState	New State of command, should be:
1265:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 							- ENABLE: Enable this function.
1266:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 							- DISABLE: Disable this function.
1267:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1268:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1269:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485ReceiverCmd(LPC_UART1_TypeDef *UARTx, FunctionalState NewState)
1270:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2639              		.loc 1 1270 0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 8
 2642              		@ frame_needed = 1, uses_anonymous_args = 0
 2643              		@ link register save eliminated.
 2644 0000 80B4     		push	{r7}
 2645              		.cfi_def_cfa_offset 4
 2646              		.cfi_offset 7, -4
 2647 0002 83B0     		sub	sp, sp, #12
 2648              		.cfi_def_cfa_offset 16
 2649 0004 00AF     		add	r7, sp, #0
 2650              		.cfi_def_cfa_register 7
 2651 0006 7860     		str	r0, [r7, #4]
 2652 0008 0B46     		mov	r3, r1
 2653 000a FB70     		strb	r3, [r7, #3]
1271:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE){
 2654              		.loc 1 1271 0
 2655 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2656 000e 012B     		cmp	r3, #1
 2657 0010 0AD1     		bne	.L214
1272:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485CTRL &= ~UART1_RS485CTRL_RX_DIS;
 2658              		.loc 1 1272 0
 2659 0012 7B68     		ldr	r3, [r7, #4]
 2660 0014 93F84C30 		ldrb	r3, [r3, #76]
 2661 0018 DBB2     		uxtb	r3, r3
 2662 001a 23F00203 		bic	r3, r3, #2
 2663 001e DAB2     		uxtb	r2, r3
 2664 0020 7B68     		ldr	r3, [r7, #4]
 2665 0022 83F84C20 		strb	r2, [r3, #76]
1273:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1274:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485CTRL |= UART1_RS485CTRL_RX_DIS;
1275:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1276:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2666              		.loc 1 1276 0
 2667 0026 09E0     		b	.L216
 2668              	.L214:
1274:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 2669              		.loc 1 1274 0
 2670 0028 7B68     		ldr	r3, [r7, #4]
 2671 002a 93F84C30 		ldrb	r3, [r3, #76]
 2672 002e DBB2     		uxtb	r3, r3
 2673 0030 43F00203 		orr	r3, r3, #2
 2674 0034 DAB2     		uxtb	r2, r3
 2675 0036 7B68     		ldr	r3, [r7, #4]
 2676 0038 83F84C20 		strb	r2, [r3, #76]
 2677              	.L216:
 2678              		.loc 1 1276 0
 2679 003c 00BF     		nop
 2680 003e 0C37     		adds	r7, r7, #12
 2681              		.cfi_def_cfa_offset 4
 2682 0040 BD46     		mov	sp, r7
 2683              		.cfi_def_cfa_register 13
 2684              		@ sp needed
 2685 0042 80BC     		pop	{r7}
 2686              		.cfi_restore 7
 2687              		.cfi_def_cfa_offset 0
 2688 0044 7047     		bx	lr
 2689              		.cfi_endproc
 2690              	.LFE52:
 2692 0046 00BF     		.section	.text.UART_RS485Send,"ax",%progbits
 2693              		.align	2
 2694              		.global	UART_RS485Send
 2695              		.thumb
 2696              		.thumb_func
 2698              	UART_RS485Send:
 2699              	.LFB53:
1277:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1278:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1279:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1280:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send data on RS485 bus with specified parity stick value (9-bit mode).
1281:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx 		UART1 (only).
1282:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pDatFrm 	Pointer to data frame.
1283:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	size		Size of data.
1284:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	ParityStick	Parity Stick value, should be 0 or 1.
1285:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1286:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1287:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_RS485Send(LPC_UART1_TypeDef *UARTx, uint8_t *pDatFrm, \
1288:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					uint32_t size, uint8_t ParityStick)
1289:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2700              		.loc 1 1289 0
 2701              		.cfi_startproc
 2702              		@ args = 0, pretend = 0, frame = 24
 2703              		@ frame_needed = 1, uses_anonymous_args = 0
 2704 0000 80B5     		push	{r7, lr}
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 7, -8
 2707              		.cfi_offset 14, -4
 2708 0002 86B0     		sub	sp, sp, #24
 2709              		.cfi_def_cfa_offset 32
 2710 0004 00AF     		add	r7, sp, #0
 2711              		.cfi_def_cfa_register 7
 2712 0006 F860     		str	r0, [r7, #12]
 2713 0008 B960     		str	r1, [r7, #8]
 2714 000a 7A60     		str	r2, [r7, #4]
 2715 000c FB70     		strb	r3, [r7, #3]
1290:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp, save;
1291:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t cnt;
1292:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1293:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (ParityStick){
 2716              		.loc 1 1293 0
 2717 000e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2718 0010 002B     		cmp	r3, #0
 2719 0012 1ED0     		beq	.L218
1294:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
 2720              		.loc 1 1294 0
 2721 0014 FB68     		ldr	r3, [r7, #12]
 2722 0016 1B7B     		ldrb	r3, [r3, #12]
 2723 0018 FB74     		strb	r3, [r7, #19]
 2724 001a FB7C     		ldrb	r3, [r7, #19]
 2725 001c BB74     		strb	r3, [r7, #18]
1295:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2726              		.loc 1 1295 0
 2727 001e FB7C     		ldrb	r3, [r7, #19]
 2728 0020 23F01003 		bic	r3, r3, #16
 2729 0024 FB74     		strb	r3, [r7, #19]
1296:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
 2730              		.loc 1 1296 0
 2731 0026 FB68     		ldr	r3, [r7, #12]
 2732 0028 FA7C     		ldrb	r2, [r7, #19]
 2733 002a 1A73     		strb	r2, [r3, #12]
1297:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2734              		.loc 1 1297 0
 2735 002c 0123     		movs	r3, #1
 2736 002e 7A68     		ldr	r2, [r7, #4]
 2737 0030 B968     		ldr	r1, [r7, #8]
 2738 0032 F868     		ldr	r0, [r7, #12]
 2739 0034 FFF7FEFF 		bl	UART_Send
 2740 0038 7861     		str	r0, [r7, #20]
1298:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2741              		.loc 1 1298 0
 2742 003a 00BF     		nop
 2743              	.L219:
 2744              		.loc 1 1298 0 is_stmt 0 discriminator 1
 2745 003c FB68     		ldr	r3, [r7, #12]
 2746 003e 1B7D     		ldrb	r3, [r3, #20]
 2747 0040 DBB2     		uxtb	r3, r3
 2748 0042 03F04003 		and	r3, r3, #64
 2749 0046 002B     		cmp	r3, #0
 2750 0048 F8D0     		beq	.L219
1299:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = save;
 2751              		.loc 1 1299 0 is_stmt 1
 2752 004a FB68     		ldr	r3, [r7, #12]
 2753 004c BA7C     		ldrb	r2, [r7, #18]
 2754 004e 1A73     		strb	r2, [r3, #12]
 2755 0050 0EE0     		b	.L220
 2756              	.L218:
1300:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1301:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2757              		.loc 1 1301 0
 2758 0052 0123     		movs	r3, #1
 2759 0054 7A68     		ldr	r2, [r7, #4]
 2760 0056 B968     		ldr	r1, [r7, #8]
 2761 0058 F868     		ldr	r0, [r7, #12]
 2762 005a FFF7FEFF 		bl	UART_Send
 2763 005e 7861     		str	r0, [r7, #20]
1302:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2764              		.loc 1 1302 0
 2765 0060 00BF     		nop
 2766              	.L221:
 2767              		.loc 1 1302 0 is_stmt 0 discriminator 1
 2768 0062 FB68     		ldr	r3, [r7, #12]
 2769 0064 1B7D     		ldrb	r3, [r3, #20]
 2770 0066 DBB2     		uxtb	r3, r3
 2771 0068 03F04003 		and	r3, r3, #64
 2772 006c 002B     		cmp	r3, #0
 2773 006e F8D0     		beq	.L221
 2774              	.L220:
1303:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1304:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return cnt;
 2775              		.loc 1 1304 0 is_stmt 1
 2776 0070 7B69     		ldr	r3, [r7, #20]
1305:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2777              		.loc 1 1305 0
 2778 0072 1846     		mov	r0, r3
 2779 0074 1837     		adds	r7, r7, #24
 2780              		.cfi_def_cfa_offset 8
 2781 0076 BD46     		mov	sp, r7
 2782              		.cfi_def_cfa_register 13
 2783              		@ sp needed
 2784 0078 80BD     		pop	{r7, pc}
 2785              		.cfi_endproc
 2786              	.LFE53:
 2788 007a 00BF     		.section	.text.UART_RS485SendSlvAddr,"ax",%progbits
 2789              		.align	2
 2790              		.global	UART_RS485SendSlvAddr
 2791              		.thumb
 2792              		.thumb_func
 2794              	UART_RS485SendSlvAddr:
 2795              	.LFB54:
1306:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1307:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1308:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1309:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send Slave address frames on RS485 bus.
1310:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART1 (only).
1311:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	SlvAddr Slave Address.
1312:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1313:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1314:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485SendSlvAddr(LPC_UART1_TypeDef *UARTx, uint8_t SlvAddr)
1315:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2796              		.loc 1 1315 0
 2797              		.cfi_startproc
 2798              		@ args = 0, pretend = 0, frame = 8
 2799              		@ frame_needed = 1, uses_anonymous_args = 0
 2800 0000 80B5     		push	{r7, lr}
 2801              		.cfi_def_cfa_offset 8
 2802              		.cfi_offset 7, -8
 2803              		.cfi_offset 14, -4
 2804 0002 82B0     		sub	sp, sp, #8
 2805              		.cfi_def_cfa_offset 16
 2806 0004 00AF     		add	r7, sp, #0
 2807              		.cfi_def_cfa_register 7
 2808 0006 7860     		str	r0, [r7, #4]
 2809 0008 0B46     		mov	r3, r1
 2810 000a FB70     		strb	r3, [r7, #3]
1316:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_RS485Send(UARTx, &SlvAddr, 1, 1);
 2811              		.loc 1 1316 0
 2812 000c F91C     		adds	r1, r7, #3
 2813 000e 0123     		movs	r3, #1
 2814 0010 0122     		movs	r2, #1
 2815 0012 7868     		ldr	r0, [r7, #4]
 2816 0014 FFF7FEFF 		bl	UART_RS485Send
1317:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2817              		.loc 1 1317 0
 2818 0018 00BF     		nop
 2819 001a 0837     		adds	r7, r7, #8
 2820              		.cfi_def_cfa_offset 8
 2821 001c BD46     		mov	sp, r7
 2822              		.cfi_def_cfa_register 13
 2823              		@ sp needed
 2824 001e 80BD     		pop	{r7, pc}
 2825              		.cfi_endproc
 2826              	.LFE54:
 2828              		.section	.text.UART_RS485SendData,"ax",%progbits
 2829              		.align	2
 2830              		.global	UART_RS485SendData
 2831              		.thumb
 2832              		.thumb_func
 2834              	UART_RS485SendData:
 2835              	.LFB55:
1318:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1319:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1320:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1321:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send Data frames on RS485 bus.
1322:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART1 (only).
1323:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pData Pointer to data to be sent.
1324:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	size Size of data frame to be sent.
1325:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1326:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1327:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_RS485SendData(LPC_UART1_TypeDef *UARTx, uint8_t *pData, uint32_t size)
1328:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2836              		.loc 1 1328 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 16
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840 0000 80B5     		push	{r7, lr}
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 7, -8
 2843              		.cfi_offset 14, -4
 2844 0002 84B0     		sub	sp, sp, #16
 2845              		.cfi_def_cfa_offset 24
 2846 0004 00AF     		add	r7, sp, #0
 2847              		.cfi_def_cfa_register 7
 2848 0006 F860     		str	r0, [r7, #12]
 2849 0008 B960     		str	r1, [r7, #8]
 2850 000a 7A60     		str	r2, [r7, #4]
1329:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
 2851              		.loc 1 1329 0
 2852 000c 0023     		movs	r3, #0
 2853 000e 7A68     		ldr	r2, [r7, #4]
 2854 0010 B968     		ldr	r1, [r7, #8]
 2855 0012 F868     		ldr	r0, [r7, #12]
 2856 0014 FFF7FEFF 		bl	UART_RS485Send
 2857 0018 0346     		mov	r3, r0
1330:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 2858              		.loc 1 1330 0
 2859 001a 1846     		mov	r0, r3
 2860 001c 1037     		adds	r7, r7, #16
 2861              		.cfi_def_cfa_offset 8
 2862 001e BD46     		mov	sp, r7
 2863              		.cfi_def_cfa_register 13
 2864              		@ sp needed
 2865 0020 80BD     		pop	{r7, pc}
 2866              		.cfi_endproc
 2867              	.LFE55:
 2869 0022 00BF     		.section	.text.UART_Send,"ax",%progbits
 2870              		.align	2
 2871              		.global	UART_Send
 2872              		.thumb
 2873              		.thumb_func
 2875              	UART_Send:
 2876              	.LFB56:
1331:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1332:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif /* _UART1 */
1333:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1334:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1335:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Additional driver APIs ----------------------------------------------------------------------- *
1336:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1337:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1338:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Send a block of data via UART peripheral
1339:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1340:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be UART0, UART1, UART2 or UART3.
1341:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	txbuf 	Pointer to Transmit buffer
1342:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Transmit buffer
1343:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag used in  UART transfer, should be
1344:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						NONE_BLOCKING or BLOCKING
1345:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Number of bytes sent.
1346:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
1347:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
1348:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
1349:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1350:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_Send(LPC_UART_TypeDef *UARTx, uint8_t *txbuf,
1351:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
1352:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 2877              		.loc 1 1352 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 40
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 80B5     		push	{r7, lr}
 2882              		.cfi_def_cfa_offset 8
 2883              		.cfi_offset 7, -8
 2884              		.cfi_offset 14, -4
 2885 0002 8AB0     		sub	sp, sp, #40
 2886              		.cfi_def_cfa_offset 48
 2887 0004 00AF     		add	r7, sp, #0
 2888              		.cfi_def_cfa_register 7
 2889 0006 F860     		str	r0, [r7, #12]
 2890 0008 B960     		str	r1, [r7, #8]
 2891 000a 7A60     		str	r2, [r7, #4]
 2892 000c FB70     		strb	r3, [r7, #3]
1353:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
1354:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t *pChar = txbuf;
 2893              		.loc 1 1354 0
 2894 000e BB68     		ldr	r3, [r7, #8]
 2895 0010 7B61     		str	r3, [r7, #20]
1355:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1356:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	bToSend = buflen;
 2896              		.loc 1 1356 0
 2897 0012 7B68     		ldr	r3, [r7, #4]
 2898 0014 7B62     		str	r3, [r7, #36]
1357:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1358:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// blocking mode
1359:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 2899              		.loc 1 1359 0
 2900 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2901 0018 012B     		cmp	r3, #1
 2902 001a 36D1     		bne	.L227
1360:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bSent = 0;
 2903              		.loc 1 1360 0
 2904 001c 0023     		movs	r3, #0
 2905 001e 3B62     		str	r3, [r7, #32]
1361:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToSend){
 2906              		.loc 1 1361 0
 2907 0020 2FE0     		b	.L228
 2908              	.L237:
1362:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 2909              		.loc 1 1362 0
 2910 0022 4FF0FF33 		mov	r3, #-1
 2911 0026 FB61     		str	r3, [r7, #28]
1363:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Wait for THR empty with timeout
1364:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_THRE)) {
 2912              		.loc 1 1364 0
 2913 0028 05E0     		b	.L229
 2914              	.L232:
1365:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 2915              		.loc 1 1365 0
 2916 002a FB69     		ldr	r3, [r7, #28]
 2917 002c 002B     		cmp	r3, #0
 2918 002e 0AD0     		beq	.L245
1366:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				timeOut--;
 2919              		.loc 1 1366 0
 2920 0030 FB69     		ldr	r3, [r7, #28]
 2921 0032 013B     		subs	r3, r3, #1
 2922 0034 FB61     		str	r3, [r7, #28]
 2923              	.L229:
1364:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 2924              		.loc 1 1364 0
 2925 0036 FB68     		ldr	r3, [r7, #12]
 2926 0038 1B7D     		ldrb	r3, [r3, #20]
 2927 003a DBB2     		uxtb	r3, r3
 2928 003c 03F02003 		and	r3, r3, #32
 2929 0040 002B     		cmp	r3, #0
 2930 0042 F2D0     		beq	.L232
 2931 0044 00E0     		b	.L231
 2932              	.L245:
1365:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 2933              		.loc 1 1365 0
 2934 0046 00BF     		nop
 2935              	.L231:
1367:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1368:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Time out!
1369:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 2936              		.loc 1 1369 0
 2937 0048 FB69     		ldr	r3, [r7, #28]
 2938 004a 002B     		cmp	r3, #0
 2939 004c 45D0     		beq	.L246
1370:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 2940              		.loc 1 1370 0
 2941 004e 1023     		movs	r3, #16
 2942 0050 BB61     		str	r3, [r7, #24]
1371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend){
 2943              		.loc 1 1371 0
 2944 0052 10E0     		b	.L235
 2945              	.L236:
1372:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 2946              		.loc 1 1372 0
 2947 0054 7B69     		ldr	r3, [r7, #20]
 2948 0056 5A1C     		adds	r2, r3, #1
 2949 0058 7A61     		str	r2, [r7, #20]
 2950 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2951 005c 1946     		mov	r1, r3
 2952 005e F868     		ldr	r0, [r7, #12]
 2953 0060 FFF7FEFF 		bl	UART_SendData
1373:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				fifo_cnt--;
 2954              		.loc 1 1373 0
 2955 0064 BB69     		ldr	r3, [r7, #24]
 2956 0066 013B     		subs	r3, r3, #1
 2957 0068 BB61     		str	r3, [r7, #24]
1374:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToSend--;
 2958              		.loc 1 1374 0
 2959 006a 7B6A     		ldr	r3, [r7, #36]
 2960 006c 013B     		subs	r3, r3, #1
 2961 006e 7B62     		str	r3, [r7, #36]
1375:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bSent++;
 2962              		.loc 1 1375 0
 2963 0070 3B6A     		ldr	r3, [r7, #32]
 2964 0072 0133     		adds	r3, r3, #1
 2965 0074 3B62     		str	r3, [r7, #32]
 2966              	.L235:
1371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 2967              		.loc 1 1371 0
 2968 0076 BB69     		ldr	r3, [r7, #24]
 2969 0078 002B     		cmp	r3, #0
 2970 007a 02D0     		beq	.L228
1371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 2971              		.loc 1 1371 0 is_stmt 0 discriminator 1
 2972 007c 7B6A     		ldr	r3, [r7, #36]
 2973 007e 002B     		cmp	r3, #0
 2974 0080 E8D1     		bne	.L236
 2975              	.L228:
1361:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 2976              		.loc 1 1361 0 is_stmt 1
 2977 0082 7B6A     		ldr	r3, [r7, #36]
 2978 0084 002B     		cmp	r3, #0
 2979 0086 CCD1     		bne	.L237
 2980 0088 2AE0     		b	.L238
 2981              	.L227:
1376:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1377:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1378:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1379:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// None blocking mode
1380:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else {
1381:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bSent = 0;
 2982              		.loc 1 1381 0
 2983 008a 0023     		movs	r3, #0
 2984 008c 3B62     		str	r3, [r7, #32]
1382:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToSend) {
 2985              		.loc 1 1382 0
 2986 008e 20E0     		b	.L239
 2987              	.L243:
1383:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 2988              		.loc 1 1383 0
 2989 0090 FB68     		ldr	r3, [r7, #12]
 2990 0092 1B7D     		ldrb	r3, [r3, #20]
 2991 0094 DBB2     		uxtb	r3, r3
 2992 0096 03F02003 		and	r3, r3, #32
 2993 009a 002B     		cmp	r3, #0
 2994 009c 1FD0     		beq	.L247
1384:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				break;
1385:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1386:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 2995              		.loc 1 1386 0
 2996 009e 1023     		movs	r3, #16
 2997 00a0 BB61     		str	r3, [r7, #24]
1387:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend) {
 2998              		.loc 1 1387 0
 2999 00a2 10E0     		b	.L241
 3000              	.L242:
1388:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 3001              		.loc 1 1388 0
 3002 00a4 7B69     		ldr	r3, [r7, #20]
 3003 00a6 5A1C     		adds	r2, r3, #1
 3004 00a8 7A61     		str	r2, [r7, #20]
 3005 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3006 00ac 1946     		mov	r1, r3
 3007 00ae F868     		ldr	r0, [r7, #12]
 3008 00b0 FFF7FEFF 		bl	UART_SendData
1389:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToSend--;
 3009              		.loc 1 1389 0
 3010 00b4 7B6A     		ldr	r3, [r7, #36]
 3011 00b6 013B     		subs	r3, r3, #1
 3012 00b8 7B62     		str	r3, [r7, #36]
1390:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				fifo_cnt--;
 3013              		.loc 1 1390 0
 3014 00ba BB69     		ldr	r3, [r7, #24]
 3015 00bc 013B     		subs	r3, r3, #1
 3016 00be BB61     		str	r3, [r7, #24]
1391:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bSent++;
 3017              		.loc 1 1391 0
 3018 00c0 3B6A     		ldr	r3, [r7, #32]
 3019 00c2 0133     		adds	r3, r3, #1
 3020 00c4 3B62     		str	r3, [r7, #32]
 3021              	.L241:
1387:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 3022              		.loc 1 1387 0
 3023 00c6 BB69     		ldr	r3, [r7, #24]
 3024 00c8 002B     		cmp	r3, #0
 3025 00ca 02D0     		beq	.L239
1387:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 3026              		.loc 1 1387 0 is_stmt 0 discriminator 1
 3027 00cc 7B6A     		ldr	r3, [r7, #36]
 3028 00ce 002B     		cmp	r3, #0
 3029 00d0 E8D1     		bne	.L242
 3030              	.L239:
1382:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 3031              		.loc 1 1382 0 is_stmt 1
 3032 00d2 7B6A     		ldr	r3, [r7, #36]
 3033 00d4 002B     		cmp	r3, #0
 3034 00d6 DBD1     		bne	.L243
 3035 00d8 02E0     		b	.L238
 3036              	.L246:
1369:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 3037              		.loc 1 1369 0
 3038 00da 00BF     		nop
 3039 00dc 00E0     		b	.L238
 3040              	.L247:
1384:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 3041              		.loc 1 1384 0
 3042 00de 00BF     		nop
 3043              	.L238:
1392:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1393:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1394:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1395:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return bSent;
 3044              		.loc 1 1395 0
 3045 00e0 3B6A     		ldr	r3, [r7, #32]
1396:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3046              		.loc 1 1396 0
 3047 00e2 1846     		mov	r0, r3
 3048 00e4 2837     		adds	r7, r7, #40
 3049              		.cfi_def_cfa_offset 8
 3050 00e6 BD46     		mov	sp, r7
 3051              		.cfi_def_cfa_register 13
 3052              		@ sp needed
 3053 00e8 80BD     		pop	{r7, pc}
 3054              		.cfi_endproc
 3055              	.LFE56:
 3057 00ea 00BF     		.section	.text.UART_Receive,"ax",%progbits
 3058              		.align	2
 3059              		.global	UART_Receive
 3060              		.thumb
 3061              		.thumb_func
 3063              	UART_Receive:
 3064              	.LFB57:
1397:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1398:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1399:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Receive a block of data via UART peripheral
1400:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1401:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be UART0, UART1, UART2 or UART3.
1402:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[out]	rxbuf 	Pointer to Received buffer
1403:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Received buffer
1404:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag mode, should be NONE_BLOCKING or BLOCKING
1405:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1406:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Number of bytes received
1407:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
1408:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
1409:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
1410:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1411:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_Receive(LPC_UART_TypeDef *UARTx, uint8_t *rxbuf, \
1412:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
1413:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3065              		.loc 1 1413 0
 3066              		.cfi_startproc
 3067              		@ args = 0, pretend = 0, frame = 32
 3068              		@ frame_needed = 1, uses_anonymous_args = 0
 3069 0000 90B5     		push	{r4, r7, lr}
 3070              		.cfi_def_cfa_offset 12
 3071              		.cfi_offset 4, -12
 3072              		.cfi_offset 7, -8
 3073              		.cfi_offset 14, -4
 3074 0002 89B0     		sub	sp, sp, #36
 3075              		.cfi_def_cfa_offset 48
 3076 0004 00AF     		add	r7, sp, #0
 3077              		.cfi_def_cfa_register 7
 3078 0006 F860     		str	r0, [r7, #12]
 3079 0008 B960     		str	r1, [r7, #8]
 3080 000a 7A60     		str	r2, [r7, #4]
 3081 000c FB70     		strb	r3, [r7, #3]
1414:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t bToRecv, bRecv, timeOut;
1415:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t *pChar = rxbuf;
 3082              		.loc 1 1415 0
 3083 000e BB68     		ldr	r3, [r7, #8]
 3084 0010 3B61     		str	r3, [r7, #16]
1416:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1417:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	bToRecv = buflen;
 3085              		.loc 1 1417 0
 3086 0012 7B68     		ldr	r3, [r7, #4]
 3087 0014 FB61     		str	r3, [r7, #28]
1418:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1419:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Blocking mode
1420:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 3088              		.loc 1 1420 0
 3089 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3090 0018 012B     		cmp	r3, #1
 3091 001a 2AD1     		bne	.L249
1421:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bRecv = 0;
 3092              		.loc 1 1421 0
 3093 001c 0023     		movs	r3, #0
 3094 001e BB61     		str	r3, [r7, #24]
1422:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToRecv){
 3095              		.loc 1 1422 0
 3096 0020 23E0     		b	.L250
 3097              	.L257:
1423:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 3098              		.loc 1 1423 0
 3099 0022 4FF0FF33 		mov	r3, #-1
 3100 0026 7B61     		str	r3, [r7, #20]
1424:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR)){
 3101              		.loc 1 1424 0
 3102 0028 05E0     		b	.L251
 3103              	.L254:
1425:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 3104              		.loc 1 1425 0
 3105 002a 7B69     		ldr	r3, [r7, #20]
 3106 002c 002B     		cmp	r3, #0
 3107 002e 0AD0     		beq	.L263
1426:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				timeOut--;
 3108              		.loc 1 1426 0
 3109 0030 7B69     		ldr	r3, [r7, #20]
 3110 0032 013B     		subs	r3, r3, #1
 3111 0034 7B61     		str	r3, [r7, #20]
 3112              	.L251:
1424:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR)){
 3113              		.loc 1 1424 0
 3114 0036 FB68     		ldr	r3, [r7, #12]
 3115 0038 1B7D     		ldrb	r3, [r3, #20]
 3116 003a DBB2     		uxtb	r3, r3
 3117 003c 03F00103 		and	r3, r3, #1
 3118 0040 002B     		cmp	r3, #0
 3119 0042 F2D0     		beq	.L254
 3120 0044 00E0     		b	.L253
 3121              	.L263:
1425:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 3122              		.loc 1 1425 0
 3123 0046 00BF     		nop
 3124              	.L253:
1427:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1428:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Time out!
1429:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 3125              		.loc 1 1429 0
 3126 0048 7B69     		ldr	r3, [r7, #20]
 3127 004a 002B     		cmp	r3, #0
 3128 004c 2DD0     		beq	.L264
1430:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Get data from the buffer
1431:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			(*pChar++) = UART_ReceiveData(UARTx);
 3129              		.loc 1 1431 0
 3130 004e 3C69     		ldr	r4, [r7, #16]
 3131 0050 631C     		adds	r3, r4, #1
 3132 0052 3B61     		str	r3, [r7, #16]
 3133 0054 F868     		ldr	r0, [r7, #12]
 3134 0056 FFF7FEFF 		bl	UART_ReceiveData
 3135 005a 0346     		mov	r3, r0
 3136 005c 2370     		strb	r3, [r4]
1432:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			bToRecv--;
 3137              		.loc 1 1432 0
 3138 005e FB69     		ldr	r3, [r7, #28]
 3139 0060 013B     		subs	r3, r3, #1
 3140 0062 FB61     		str	r3, [r7, #28]
1433:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			bRecv++;
 3141              		.loc 1 1433 0
 3142 0064 BB69     		ldr	r3, [r7, #24]
 3143 0066 0133     		adds	r3, r3, #1
 3144 0068 BB61     		str	r3, [r7, #24]
 3145              	.L250:
1422:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 3146              		.loc 1 1422 0
 3147 006a FB69     		ldr	r3, [r7, #28]
 3148 006c 002B     		cmp	r3, #0
 3149 006e D8D1     		bne	.L257
 3150 0070 1EE0     		b	.L258
 3151              	.L249:
1434:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1435:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1436:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// None blocking mode
1437:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else {
1438:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bRecv = 0;
 3152              		.loc 1 1438 0
 3153 0072 0023     		movs	r3, #0
 3154 0074 BB61     		str	r3, [r7, #24]
1439:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToRecv) {
 3155              		.loc 1 1439 0
 3156 0076 14E0     		b	.L259
 3157              	.L261:
1440:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_RDR)) {
 3158              		.loc 1 1440 0
 3159 0078 FB68     		ldr	r3, [r7, #12]
 3160 007a 1B7D     		ldrb	r3, [r3, #20]
 3161 007c DBB2     		uxtb	r3, r3
 3162 007e 03F00103 		and	r3, r3, #1
 3163 0082 002B     		cmp	r3, #0
 3164 0084 13D0     		beq	.L265
1441:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				break;
1442:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			} else {
1443:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				(*pChar++) = UART_ReceiveData(UARTx);
 3165              		.loc 1 1443 0
 3166 0086 3C69     		ldr	r4, [r7, #16]
 3167 0088 631C     		adds	r3, r4, #1
 3168 008a 3B61     		str	r3, [r7, #16]
 3169 008c F868     		ldr	r0, [r7, #12]
 3170 008e FFF7FEFF 		bl	UART_ReceiveData
 3171 0092 0346     		mov	r3, r0
 3172 0094 2370     		strb	r3, [r4]
1444:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bRecv++;
 3173              		.loc 1 1444 0
 3174 0096 BB69     		ldr	r3, [r7, #24]
 3175 0098 0133     		adds	r3, r3, #1
 3176 009a BB61     		str	r3, [r7, #24]
1445:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToRecv--;
 3177              		.loc 1 1445 0
 3178 009c FB69     		ldr	r3, [r7, #28]
 3179 009e 013B     		subs	r3, r3, #1
 3180 00a0 FB61     		str	r3, [r7, #28]
 3181              	.L259:
1439:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_RDR)) {
 3182              		.loc 1 1439 0
 3183 00a2 FB69     		ldr	r3, [r7, #28]
 3184 00a4 002B     		cmp	r3, #0
 3185 00a6 E7D1     		bne	.L261
 3186 00a8 02E0     		b	.L258
 3187              	.L264:
1429:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Get data from the buffer
 3188              		.loc 1 1429 0
 3189 00aa 00BF     		nop
 3190 00ac 00E0     		b	.L258
 3191              	.L265:
1441:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			} else {
 3192              		.loc 1 1441 0
 3193 00ae 00BF     		nop
 3194              	.L258:
1446:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1447:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1448:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1449:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return bRecv;
 3195              		.loc 1 1449 0
 3196 00b0 BB69     		ldr	r3, [r7, #24]
1450:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3197              		.loc 1 1450 0
 3198 00b2 1846     		mov	r0, r3
 3199 00b4 2437     		adds	r7, r7, #36
 3200              		.cfi_def_cfa_offset 12
 3201 00b6 BD46     		mov	sp, r7
 3202              		.cfi_def_cfa_register 13
 3203              		@ sp needed
 3204 00b8 90BD     		pop	{r4, r7, pc}
 3205              		.cfi_endproc
 3206              	.LFE57:
 3208 00ba 00BF     		.section	.text.UART_SetupCbs,"ax",%progbits
 3209              		.align	2
 3210              		.global	UART_SetupCbs
 3211              		.thumb
 3212              		.thumb_func
 3214              	UART_SetupCbs:
 3215              	.LFB58:
1451:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1452:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1453:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1454:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Setup call-back function for UART interrupt handler for each
1455:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				UART peripheral
1456:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral, should be UART0..3
1457:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	CbType	Call-back type, should be:
1458:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						0 - Receive Call-back
1459:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						1 - Transmit Call-back
1460:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						2 - Auto Baudrate Callback
1461:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						3 - Error Call-back
1462:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						4 - Modem Status Call-back (UART1 only)
1463:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pfnCbs	Pointer to Call-back function
1464:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1465:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1466:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_SetupCbs(LPC_UART_TypeDef *UARTx, uint8_t CbType, void *pfnCbs)
1467:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3216              		.loc 1 1467 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 24
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 80B5     		push	{r7, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 7, -8
 3223              		.cfi_offset 14, -4
 3224 0002 86B0     		sub	sp, sp, #24
 3225              		.cfi_def_cfa_offset 32
 3226 0004 00AF     		add	r7, sp, #0
 3227              		.cfi_def_cfa_register 7
 3228 0006 F860     		str	r0, [r7, #12]
 3229 0008 0B46     		mov	r3, r1
 3230 000a 7A60     		str	r2, [r7, #4]
 3231 000c FB72     		strb	r3, [r7, #11]
1468:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t pUartNum;
1469:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1470:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	pUartNum = getUartNum(UARTx);
 3232              		.loc 1 1470 0
 3233 000e F868     		ldr	r0, [r7, #12]
 3234 0010 FFF7FEFF 		bl	getUartNum
 3235 0014 0346     		mov	r3, r0
 3236 0016 FB75     		strb	r3, [r7, #23]
1471:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(CbType){
 3237              		.loc 1 1471 0
 3238 0018 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3239 001a 042B     		cmp	r3, #4
 3240 001c 2FD8     		bhi	.L275
 3241 001e 01A2     		adr	r2, .L269
 3242 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3243              		.p2align 2
 3244              	.L269:
 3245 0024 39000000 		.word	.L268+1
 3246 0028 49000000 		.word	.L270+1
 3247 002c 57000000 		.word	.L271+1
 3248 0030 67000000 		.word	.L272+1
 3249 0034 77000000 		.word	.L273+1
 3250              		.p2align 1
 3251              	.L268:
1472:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 0:
1473:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnRxCbs = (fnTxCbs_Type *)pfnCbs;
 3252              		.loc 1 1473 0
 3253 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3254 003a 7A68     		ldr	r2, [r7, #4]
 3255 003c 1249     		ldr	r1, .L276
 3256 003e 1B01     		lsls	r3, r3, #4
 3257 0040 0B44     		add	r3, r3, r1
 3258 0042 0433     		adds	r3, r3, #4
 3259 0044 1A60     		str	r2, [r3]
1474:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3260              		.loc 1 1474 0
 3261 0046 1BE0     		b	.L274
 3262              	.L270:
1475:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 1:
1476:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnTxCbs = (fnRxCbs_Type *)pfnCbs;
 3263              		.loc 1 1476 0
 3264 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3265 004a 7A68     		ldr	r2, [r7, #4]
 3266 004c 0E49     		ldr	r1, .L276
 3267 004e 1B01     		lsls	r3, r3, #4
 3268 0050 0B44     		add	r3, r3, r1
 3269 0052 1A60     		str	r2, [r3]
1477:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3270              		.loc 1 1477 0
 3271 0054 14E0     		b	.L274
 3272              	.L271:
1478:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 2:
1479:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnABCbs = (fnABCbs_Type *)pfnCbs;
 3273              		.loc 1 1479 0
 3274 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3275 0058 7A68     		ldr	r2, [r7, #4]
 3276 005a 0B49     		ldr	r1, .L276
 3277 005c 1B01     		lsls	r3, r3, #4
 3278 005e 0B44     		add	r3, r3, r1
 3279 0060 0833     		adds	r3, r3, #8
 3280 0062 1A60     		str	r2, [r3]
1480:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3281              		.loc 1 1480 0
 3282 0064 0CE0     		b	.L274
 3283              	.L272:
1481:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 3:
1482:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnErrCbs = (fnErrCbs_Type *)pfnCbs;
 3284              		.loc 1 1482 0
 3285 0066 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3286 0068 7A68     		ldr	r2, [r7, #4]
 3287 006a 0749     		ldr	r1, .L276
 3288 006c 1B01     		lsls	r3, r3, #4
 3289 006e 0B44     		add	r3, r3, r1
 3290 0070 0C33     		adds	r3, r3, #12
 3291 0072 1A60     		str	r2, [r3]
1483:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3292              		.loc 1 1483 0
 3293 0074 04E0     		b	.L274
 3294              	.L273:
1484:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 4:
1485:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		pfnModemCbs = (fnModemCbs_Type *)pfnCbs;
 3295              		.loc 1 1485 0
 3296 0076 7B68     		ldr	r3, [r7, #4]
 3297 0078 044A     		ldr	r2, .L276+4
 3298 007a 1360     		str	r3, [r2]
1486:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3299              		.loc 1 1486 0
 3300 007c 00E0     		b	.L274
 3301              	.L275:
1487:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1488:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 3302              		.loc 1 1488 0
 3303 007e 00BF     		nop
 3304              	.L274:
1489:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1490:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3305              		.loc 1 1490 0
 3306 0080 00BF     		nop
 3307 0082 1837     		adds	r7, r7, #24
 3308              		.cfi_def_cfa_offset 8
 3309 0084 BD46     		mov	sp, r7
 3310              		.cfi_def_cfa_register 13
 3311              		@ sp needed
 3312 0086 80BD     		pop	{r7, pc}
 3313              	.L277:
 3314              		.align	2
 3315              	.L276:
 3316 0088 00000000 		.word	uartCbsDat
 3317 008c 00000000 		.word	pfnModemCbs
 3318              		.cfi_endproc
 3319              	.LFE58:
 3321              		.section	.text.UART0_StdIntHandler,"ax",%progbits
 3322              		.align	2
 3323              		.global	UART0_StdIntHandler
 3324              		.thumb
 3325              		.thumb_func
 3327              	UART0_StdIntHandler:
 3328              	.LFB59:
1491:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1492:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1493:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART0 interrupt handler
1494:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1495:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1496:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1497:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART0_StdIntHandler(void)
1498:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3329              		.loc 1 1498 0
 3330              		.cfi_startproc
 3331              		@ args = 0, pretend = 0, frame = 0
 3332              		@ frame_needed = 1, uses_anonymous_args = 0
 3333 0000 80B5     		push	{r7, lr}
 3334              		.cfi_def_cfa_offset 8
 3335              		.cfi_offset 7, -8
 3336              		.cfi_offset 14, -4
 3337 0002 00AF     		add	r7, sp, #0
 3338              		.cfi_def_cfa_register 7
1499:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART0);
 3339              		.loc 1 1499 0
 3340 0004 0248     		ldr	r0, .L279
 3341 0006 FFF7FEFF 		bl	UART_GenIntHandler
1500:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3342              		.loc 1 1500 0
 3343 000a 00BF     		nop
 3344 000c 80BD     		pop	{r7, pc}
 3345              	.L280:
 3346 000e 00BF     		.align	2
 3347              	.L279:
 3348 0010 00C00040 		.word	1073790976
 3349              		.cfi_endproc
 3350              	.LFE59:
 3352              		.section	.text.UART1_StdIntHandler,"ax",%progbits
 3353              		.align	2
 3354              		.global	UART1_StdIntHandler
 3355              		.thumb
 3356              		.thumb_func
 3358              	UART1_StdIntHandler:
 3359              	.LFB60:
1501:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1502:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1503:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART1 interrupt handler
1504:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1505:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1506:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1507:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART1_StdIntHandler(void)
1508:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3360              		.loc 1 1508 0
 3361              		.cfi_startproc
 3362              		@ args = 0, pretend = 0, frame = 0
 3363              		@ frame_needed = 1, uses_anonymous_args = 0
 3364 0000 80B5     		push	{r7, lr}
 3365              		.cfi_def_cfa_offset 8
 3366              		.cfi_offset 7, -8
 3367              		.cfi_offset 14, -4
 3368 0002 00AF     		add	r7, sp, #0
 3369              		.cfi_def_cfa_register 7
1509:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler((LPC_UART_TypeDef *)LPC_UART1);
 3370              		.loc 1 1509 0
 3371 0004 0248     		ldr	r0, .L282
 3372 0006 FFF7FEFF 		bl	UART_GenIntHandler
1510:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3373              		.loc 1 1510 0
 3374 000a 00BF     		nop
 3375 000c 80BD     		pop	{r7, pc}
 3376              	.L283:
 3377 000e 00BF     		.align	2
 3378              	.L282:
 3379 0010 00000140 		.word	1073807360
 3380              		.cfi_endproc
 3381              	.LFE60:
 3383              		.section	.text.UART2_StdIntHandler,"ax",%progbits
 3384              		.align	2
 3385              		.global	UART2_StdIntHandler
 3386              		.thumb
 3387              		.thumb_func
 3389              	UART2_StdIntHandler:
 3390              	.LFB61:
1511:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1512:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1513:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART2 interrupt handler
1514:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1515:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1516:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1517:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART2_StdIntHandler(void)
1518:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3391              		.loc 1 1518 0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 0
 3394              		@ frame_needed = 1, uses_anonymous_args = 0
 3395 0000 80B5     		push	{r7, lr}
 3396              		.cfi_def_cfa_offset 8
 3397              		.cfi_offset 7, -8
 3398              		.cfi_offset 14, -4
 3399 0002 00AF     		add	r7, sp, #0
 3400              		.cfi_def_cfa_register 7
1519:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART2);
 3401              		.loc 1 1519 0
 3402 0004 0248     		ldr	r0, .L285
 3403 0006 FFF7FEFF 		bl	UART_GenIntHandler
1520:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3404              		.loc 1 1520 0
 3405 000a 00BF     		nop
 3406 000c 80BD     		pop	{r7, pc}
 3407              	.L286:
 3408 000e 00BF     		.align	2
 3409              	.L285:
 3410 0010 00800940 		.word	1074364416
 3411              		.cfi_endproc
 3412              	.LFE61:
 3414              		.section	.text.UART3_StdIntHandler,"ax",%progbits
 3415              		.align	2
 3416              		.global	UART3_StdIntHandler
 3417              		.thumb
 3418              		.thumb_func
 3420              	UART3_StdIntHandler:
 3421              	.LFB62:
1521:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1522:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1523:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART3 interrupt handler
1524:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1525:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return
1526:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1527:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART3_StdIntHandler(void)
1528:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 3422              		.loc 1 1528 0
 3423              		.cfi_startproc
 3424              		@ args = 0, pretend = 0, frame = 0
 3425              		@ frame_needed = 1, uses_anonymous_args = 0
 3426 0000 80B5     		push	{r7, lr}
 3427              		.cfi_def_cfa_offset 8
 3428              		.cfi_offset 7, -8
 3429              		.cfi_offset 14, -4
 3430 0002 00AF     		add	r7, sp, #0
 3431              		.cfi_def_cfa_register 7
1529:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART3);
 3432              		.loc 1 1529 0
 3433 0004 0248     		ldr	r0, .L288
 3434 0006 FFF7FEFF 		bl	UART_GenIntHandler
1530:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 3435              		.loc 1 1530 0
 3436 000a 00BF     		nop
 3437 000c 80BD     		pop	{r7, pc}
 3438              	.L289:
 3439 000e 00BF     		.align	2
 3440              	.L288:
 3441 0010 00C00940 		.word	1074380800
 3442              		.cfi_endproc
 3443              	.LFE62:
 3445              		.text
 3446              	.Letext0:
 3447              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\mach
 3448              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
 3449              		.file 4 "./Libraries/NXP/Core/CM3/DeviceSupport/NXP/LPC17xx/LPC17xx.h"
 3450              		.file 5 "./Libraries/NXP/Drivers/include/lpc_types.h"
 3451              		.file 6 "./Libraries/NXP/Drivers/include/lpc17xx_uart.h"
 3452              		.file 7 "./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_uart.c
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:24     .bss.uartCbsDat:00000000 uartCbsDat
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:21     .bss.uartCbsDat:00000000 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:31     .bss.pfnModemCbs:00000000 pfnModemCbs
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:28     .bss.pfnModemCbs:00000000 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:34     .text.getUartNum:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:39     .text.getUartNum:00000000 getUartNum
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:99     .text.getUartNum:00000038 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:106    .text.uart_set_divisors:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:111    .text.uart_set_divisors:00000000 uart_set_divisors
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:436    .text.uart_set_divisors:000001f8 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:445    .text.UART_GenIntHandler:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:450    .text.UART_GenIntHandler:00000000 UART_GenIntHandler
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:676    .text.UART_GenIntHandler:0000015c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:683    .text.UART_DeInit:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:688    .text.UART_DeInit:00000000 UART_DeInit
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2187   .text.UART_TxCmd:00000000 UART_TxCmd
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:758    .text.UART_DeInit:0000005c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:766    .text.UART_Init:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:771    .text.UART_Init:00000000 UART_Init
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1064   .text.UART_Init:000001cc $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1068   .text.UART_Init:000001dc $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1139   .text.UART_Init:00000234 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1147   .text.UART_ConfigStructInit:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1152   .text.UART_ConfigStructInit:00000000 UART_ConfigStructInit
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1198   .text.UART_SendData:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1203   .text.UART_SendData:00000000 UART_SendData
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1251   .text.UART_SendData:0000002c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1256   .text.UART_ReceiveData:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1261   .text.UART_ReceiveData:00000000 UART_ReceiveData
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1306   .text.UART_ReceiveData:00000028 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1311   .text.UART_ForceBreak:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1316   .text.UART_ForceBreak:00000000 UART_ForceBreak
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1370   .text.UART_ForceBreak:0000003c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1375   .text.UART_IrDAInvtInputCmd:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1380   .text.UART_IrDAInvtInputCmd:00000000 UART_IrDAInvtInputCmd
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1440   .text.UART_IrDACmd:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1445   .text.UART_IrDACmd:00000000 UART_IrDACmd
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1501   .text.UART_IrDAPulseDivConfig:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1506   .text.UART_IrDAPulseDivConfig:00000000 UART_IrDAPulseDivConfig
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1562   .text.UART_IntConfig:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1567   .text.UART_IntConfig:00000000 UART_IntConfig
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1594   .text.UART_IntConfig:0000001c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1601   .text.UART_IntConfig:00000038 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1723   .text.UART_IntConfig:000000d4 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1728   .text.UART_GetLineStatus:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1733   .text.UART_GetLineStatus:00000000 UART_GetLineStatus
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1778   .text.UART_GetLineStatus:00000028 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1783   .text.UART_CheckBusy:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1788   .text.UART_CheckBusy:00000000 UART_CheckBusy
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1832   .text.UART_FIFOConfig:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1837   .text.UART_FIFOConfig:00000000 UART_FIFOConfig
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1960   .text.UART_FIFOConfig:000000a4 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1965   .text.UART_FIFOConfigStructInit:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:1970   .text.UART_FIFOConfigStructInit:00000000 UART_FIFOConfigStructInit
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2016   .text.UART_ABCmd:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2021   .text.UART_ABCmd:00000000 UART_ABCmd
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2177   .text.UART_ABCmd:000000e4 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2182   .text.UART_TxCmd:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2270   .text.UART_TxCmd:00000078 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2275   .text.UART_FullModemForcePinState:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2280   .text.UART_FullModemForcePinState:00000000 UART_FullModemForcePinState
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2368   .text.UART_FullModemConfigMode:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2373   .text.UART_FullModemConfigMode:00000000 UART_FullModemConfigMode
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2469   .text.UART_FullModemGetStatus:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2474   .text.UART_FullModemGetStatus:00000000 UART_FullModemGetStatus
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2508   .text.UART_RS485Config:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2513   .text.UART_RS485Config:00000000 UART_RS485Config
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2632   .text.UART_RS485ReceiverCmd:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2637   .text.UART_RS485ReceiverCmd:00000000 UART_RS485ReceiverCmd
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2693   .text.UART_RS485Send:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2698   .text.UART_RS485Send:00000000 UART_RS485Send
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2875   .text.UART_Send:00000000 UART_Send
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2789   .text.UART_RS485SendSlvAddr:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2794   .text.UART_RS485SendSlvAddr:00000000 UART_RS485SendSlvAddr
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2829   .text.UART_RS485SendData:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2834   .text.UART_RS485SendData:00000000 UART_RS485SendData
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:2870   .text.UART_Send:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3058   .text.UART_Receive:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3063   .text.UART_Receive:00000000 UART_Receive
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3209   .text.UART_SetupCbs:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3214   .text.UART_SetupCbs:00000000 UART_SetupCbs
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3245   .text.UART_SetupCbs:00000024 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3250   .text.UART_SetupCbs:00000038 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3316   .text.UART_SetupCbs:00000088 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3322   .text.UART0_StdIntHandler:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3327   .text.UART0_StdIntHandler:00000000 UART0_StdIntHandler
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3348   .text.UART0_StdIntHandler:00000010 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3353   .text.UART1_StdIntHandler:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3358   .text.UART1_StdIntHandler:00000000 UART1_StdIntHandler
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3379   .text.UART1_StdIntHandler:00000010 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3384   .text.UART2_StdIntHandler:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3389   .text.UART2_StdIntHandler:00000000 UART2_StdIntHandler
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3410   .text.UART2_StdIntHandler:00000010 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3415   .text.UART3_StdIntHandler:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3420   .text.UART3_StdIntHandler:00000000 UART3_StdIntHandler
C:\Users\KHUSHA~1\AppData\Local\Temp\cchJ4H9b.s:3441   .text.UART3_StdIntHandler:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CLKPWR_GetPCLK
CLKPWR_ConfigPPWR
