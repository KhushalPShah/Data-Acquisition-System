   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"lpc17xx_clkpwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__WFI,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	__WFI:
  25              	.LFB5:
  26              		.file 1 "./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h"
   1:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
   7:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  10:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  15:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  22:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  24:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  27:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  29:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  34:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  38:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  42:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  46:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  50:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  54:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  58:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  60:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
  61:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  62:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  71:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  72:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
  78:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
  79:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  80:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
  83:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  84:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  88:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  90:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  92:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
  95:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  96:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  97:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 100:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 101:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 102:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 103:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 104:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 105:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 107:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 109:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 110:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else
 113:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 115:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 118:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 119:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 120:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  @{
 125:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** */
 126:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 127:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 128:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 131:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 132:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 134:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];
 136:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];
 138:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];
 140:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];
 142:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];
 144:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];
 146:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;
 148:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 150:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 151:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 154:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 155:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 157:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } SCB_Type;
 177:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 178:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 182:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 185:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 188:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 191:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 195:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 198:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 201:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 204:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 207:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 210:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 213:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 216:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 219:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 222:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 226:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 229:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 233:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 236:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 239:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 242:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 245:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 248:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 251:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 255:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 258:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 261:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 265:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 268:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 271:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 274:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 277:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 280:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 284:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 287:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 290:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 293:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 296:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 299:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 302:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 305:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 308:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 311:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 314:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 317:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 320:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 323:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 327:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 330:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 333:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 337:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 340:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 343:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 347:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 350:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 353:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 356:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 360:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 361:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 364:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 365:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 367:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 373:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 377:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 380:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 383:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 386:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 390:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 394:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 398:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 401:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 405:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 406:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 409:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 410:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 412:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  union
 413:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   {
 414:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];
 419:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];
 421:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];
 423:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];
 425:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];
 429:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];
 432:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } ITM_Type;
 445:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 446:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 450:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 454:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 457:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 460:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 463:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 466:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 469:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 472:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 475:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 479:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 483:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 487:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 491:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 494:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 498:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 499:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 502:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 503:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 505:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else
 510:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 512:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 514:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 518:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 522:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 525:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 529:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 530:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 534:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 535:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 537:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } MPU_Type;
 549:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 550:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 554:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 557:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 560:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 564:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 567:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 570:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 574:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 578:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 581:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 584:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 588:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 591:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 594:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 597:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 600:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 603:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 606:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 609:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 612:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 614:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 615:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 616:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 619:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 620:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 622:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 628:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 632:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 635:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 638:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 641:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 644:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 647:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 650:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 653:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 656:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 659:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 662:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 665:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 669:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 672:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 676:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 679:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 682:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 685:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 688:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 691:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 694:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 697:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 700:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 703:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 706:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 709:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 713:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 714:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 722:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 729:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 733:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 734:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 736:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 737:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 741:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 745:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 749:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 753:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 757:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 758:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 759:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 760:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 762:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 765:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 768:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 784:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 785:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 790:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 791:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 792:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 794:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 796:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 798:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 800:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 801:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 803:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 805:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 808:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 810:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 811:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 813:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 815:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 818:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 820:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 821:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 823:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 825:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 828:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 830:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 831:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 833:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 836:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 838:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 840:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 841:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 843:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 846:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 848:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 850:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 851:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 853:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 854:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 856:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 858:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 860:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 861:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 863:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 865:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 867:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 869:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 870:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 872:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 874:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 876:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 878:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 879:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 881:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 883:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 885:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 887:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 888:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 890:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 892:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 894:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 896:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 897:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 899:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 901:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 903:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 905:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 906:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 908:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 910:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 912:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 914:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 915:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 917:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 919:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 921:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 923:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 924:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 926:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 928:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 930:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 932:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 934:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 935:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 937:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 939:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 941:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 942:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 944:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 946:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 948:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 950:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 953:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 954:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 955:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 957:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 959:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 961:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 963:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 966:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 967:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 968:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 970:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 972:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 974:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 976:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 979:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 980:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 981:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 983:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 985:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 987:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 989:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 992:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 993:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 994:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 996:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 998:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1000:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1002:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1005:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1006:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1007:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1009:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1011:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1013:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1015:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1018:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1019:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1020:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1022:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1024:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1026:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1028:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1031:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1032:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1033:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1035:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1037:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1039:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1041:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1044:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1045:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1047:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1048:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1049:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1052:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1055:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1058:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1064:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1076:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1077:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1078:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1080:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1082:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1084:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1086:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1087:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1089:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1091:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1094:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1096:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1097:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1099:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1101:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1104:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1106:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1107:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1109:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1111:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1114:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1116:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1117:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1119:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1122:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1124:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1126:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1127:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1129:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1132:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1134:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1136:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1137:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1139:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1142:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1144:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1146:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1147:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1149:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1152:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1154:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1156:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1157:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1159:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1162:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1164:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1166:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1167:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1169:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1173:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1175:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1177:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1178:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1180:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1184:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1186:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1188:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1189:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1191:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1195:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1197:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1199:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1200:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1201:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1204:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1207:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1210:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
  27              		.loc 1 1211 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37              		.loc 1 1211 0
  38              		.syntax unified
  39              	@ 1211 "./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h" 1
  40 0004 30BF     		wfi
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44 0006 00BF     		nop
  45 0008 BD46     		mov	sp, r7
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 000a 80BC     		pop	{r7}
  49              		.cfi_restore 7
  50              		.cfi_def_cfa_offset 0
  51 000c 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE5:
  55 000e 00BF     		.section	.text.CLKPWR_SetPCLKDiv,"ax",%progbits
  56              		.align	2
  57              		.global	CLKPWR_SetPCLKDiv
  58              		.thumb
  59              		.thumb_func
  61              	CLKPWR_SetPCLKDiv:
  62              	.LFB29:
  63              		.file 2 "Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c"
   1:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /**
   2:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @file	: lpc17xx_clkpwr.c
   3:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief	: Contains all functions support for Clock and Power Control
   4:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				firmware library on LPC17xx
   5:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @version	: 1.0
   6:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @date	: 18. Mar. 2009
   7:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @author	: HieuNguyen
   8:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **************************************************************************
   9:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * Software that is described herein is for illustrative purposes only
  10:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * which provides customers with programming information regarding the
  11:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * products. This software is supplied "AS IS" without any warranties.
  12:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * NXP Semiconductors assumes no responsibility or liability for the
  13:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * use of the software, conveys no license or title under any patent,
  14:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * copyright, or mask work right to the product. NXP Semiconductors
  15:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * reserves the right to make changes in the software without
  16:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * notification. NXP Semiconductors also make no representation or
  17:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * warranty that such application will be suitable for the specified
  18:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * use without further testing or modification.
  19:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **********************************************************************/
  20:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  21:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /* Peripheral group ----------------------------------------------------------- */
  22:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /** @addtogroup CLKPWR
  23:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @{
  24:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
  25:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  26:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /* Includes ------------------------------------------------------------------- */
  27:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** #include "lpc17xx_clkpwr.h"
  28:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  29:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  30:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /* Public Functions ----------------------------------------------------------- */
  31:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /** @addtogroup CLKPWR_Public_Functions
  32:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @{
  33:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
  34:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  35:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /*********************************************************************//**
  36:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Set value of each Peripheral Clock Selection
  37:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	ClkType	Peripheral Clock Selection of each type,
  38:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				should be one of the following:
  39:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *				- CLKPWR_PCLKSEL_WDT   		: WDT
  40:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER0   	: Timer 0
  41:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER1   	: Timer 1
  42:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART0   	: UART 0
  43:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART1  	: UART 1
  44:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PWM1   	: PWM 1
  45:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C0   	: I2C 0
  46:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SPI   		: SPI
  47:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP1   	: SSP 1
  48:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_DAC   		: DAC
  49:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ADC   		: ADC
  50:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN1  		: CAN 1
  51:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN2  		: CAN 2
  52:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ACF   		: ACF
  53:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_QEI 		: QEI
  54:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PCB   		: PCB
  55:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C1   	: I2C 1
  56:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP0   	: SSP 0
  57:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER2   	: Timer 2
  58:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER3   	: Timer 3
  59:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART2   	: UART 2
  60:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART3   	: UART 3
  61:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C2   	: I2C 2
  62:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2S   		: I2S
  63:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_RIT   		: RIT
  64:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SYSCON   	: SYSCON
  65:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_MC 		: MC
  66:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  67:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	DivVal	Value of divider, should be:
  68:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				- CLKPWR_PCLKSEL_CCLK_DIV_4 : PCLK_peripheral = CCLK/4
  69:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				- CLKPWR_PCLKSEL_CCLK_DIV_1 : PCLK_peripheral = CCLK/1
  70:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *				- CLKPWR_PCLKSEL_CCLK_DIV_2 : PCLK_peripheral = CCLK/2
  71:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *
  72:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return none
  73:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **********************************************************************/
  74:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_SetPCLKDiv (uint32_t ClkType, uint32_t DivVal)
  75:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
  64              		.loc 2 75 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 16
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0002 85B0     		sub	sp, sp, #20
  73              		.cfi_def_cfa_offset 24
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
  77 0008 3960     		str	r1, [r7]
  76:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	uint32_t bitpos;
  77:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  78:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	bitpos = (ClkType < 32) ? (ClkType) : (ClkType - 32);
  78              		.loc 2 78 0
  79 000a 7B68     		ldr	r3, [r7, #4]
  80 000c 1F2B     		cmp	r3, #31
  81 000e 02D9     		bls	.L3
  82              		.loc 2 78 0 is_stmt 0 discriminator 1
  83 0010 7B68     		ldr	r3, [r7, #4]
  84 0012 203B     		subs	r3, r3, #32
  85 0014 00E0     		b	.L4
  86              	.L3:
  87              		.loc 2 78 0 discriminator 2
  88 0016 7B68     		ldr	r3, [r7, #4]
  89              	.L4:
  90              		.loc 2 78 0 discriminator 4
  91 0018 FB60     		str	r3, [r7, #12]
  79:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  80:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* PCLKSEL0 selected */
  81:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	if (ClkType < 32)
  92              		.loc 2 81 0 is_stmt 1 discriminator 4
  93 001a 7B68     		ldr	r3, [r7, #4]
  94 001c 1F2B     		cmp	r3, #31
  95 001e 17D8     		bhi	.L5
  82:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
  83:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		/* Clear two bit at bit position */
  84:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCLKSEL0 &= (~(CLKPWR_PCLKSEL_BITMASK(bitpos)));
  96              		.loc 2 84 0
  97 0020 1949     		ldr	r1, .L8
  98 0022 194B     		ldr	r3, .L8
  99 0024 D3F8A831 		ldr	r3, [r3, #424]
 100 0028 0320     		movs	r0, #3
 101 002a FA68     		ldr	r2, [r7, #12]
 102 002c 00FA02F2 		lsl	r2, r0, r2
 103 0030 D243     		mvns	r2, r2
 104 0032 1340     		ands	r3, r3, r2
 105 0034 C1F8A831 		str	r3, [r1, #424]
  85:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  86:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		/* Set two selected bit */
  87:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCLKSEL0 |= (CLKPWR_PCLKSEL_SET(bitpos, DivVal));
 106              		.loc 2 87 0
 107 0038 1348     		ldr	r0, .L8
 108 003a 134B     		ldr	r3, .L8
 109 003c D3F8A821 		ldr	r2, [r3, #424]
 110 0040 3968     		ldr	r1, [r7]
 111 0042 FB68     		ldr	r3, [r7, #12]
 112 0044 01FA03F3 		lsl	r3, r1, r3
 113 0048 1343     		orrs	r3, r3, r2
 114 004a C0F8A831 		str	r3, [r0, #424]
  88:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
  89:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* PCLKSEL1 selected */
  90:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	else
  91:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
  92:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		/* Clear two bit at bit position */
  93:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCLKSEL1 &= ~(CLKPWR_PCLKSEL_BITMASK(bitpos));
  94:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
  95:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		/* Set two selected bit */
  96:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCLKSEL1 |= (CLKPWR_PCLKSEL_SET(bitpos, DivVal));
  97:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
  98:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 115              		.loc 2 98 0
 116 004e 16E0     		b	.L7
 117              	.L5:
  93:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 118              		.loc 2 93 0
 119 0050 0D49     		ldr	r1, .L8
 120 0052 0D4B     		ldr	r3, .L8
 121 0054 D3F8AC31 		ldr	r3, [r3, #428]
 122 0058 0320     		movs	r0, #3
 123 005a FA68     		ldr	r2, [r7, #12]
 124 005c 00FA02F2 		lsl	r2, r0, r2
 125 0060 D243     		mvns	r2, r2
 126 0062 1340     		ands	r3, r3, r2
 127 0064 C1F8AC31 		str	r3, [r1, #428]
  96:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 128              		.loc 2 96 0
 129 0068 0748     		ldr	r0, .L8
 130 006a 074B     		ldr	r3, .L8
 131 006c D3F8AC21 		ldr	r2, [r3, #428]
 132 0070 3968     		ldr	r1, [r7]
 133 0072 FB68     		ldr	r3, [r7, #12]
 134 0074 01FA03F3 		lsl	r3, r1, r3
 135 0078 1343     		orrs	r3, r3, r2
 136 007a C0F8AC31 		str	r3, [r0, #428]
 137              	.L7:
 138              		.loc 2 98 0
 139 007e 00BF     		nop
 140 0080 1437     		adds	r7, r7, #20
 141              		.cfi_def_cfa_offset 4
 142 0082 BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0084 80BC     		pop	{r7}
 146              		.cfi_restore 7
 147              		.cfi_def_cfa_offset 0
 148 0086 7047     		bx	lr
 149              	.L9:
 150              		.align	2
 151              	.L8:
 152 0088 00C00F40 		.word	1074774016
 153              		.cfi_endproc
 154              	.LFE29:
 156              		.section	.text.CLKPWR_GetPCLKSEL,"ax",%progbits
 157              		.align	2
 158              		.global	CLKPWR_GetPCLKSEL
 159              		.thumb
 160              		.thumb_func
 162              	CLKPWR_GetPCLKSEL:
 163              	.LFB30:
  99:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 100:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 101:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /*********************************************************************//**
 102:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief		Get current value of each Peripheral Clock Selection
 103:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	ClkType	Peripheral Clock Selection of each type,
 104:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				should be one of the following:
 105:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *				- CLKPWR_PCLKSEL_WDT   		: WDT
 106:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER0   	: Timer 0
 107:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER1   	: Timer 1
 108:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART0   	: UART 0
 109:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART1  	: UART 1
 110:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PWM1   	: PWM 1
 111:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C0   	: I2C 0
 112:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SPI   		: SPI
 113:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP1   	: SSP 1
 114:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_DAC   		: DAC
 115:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ADC   		: ADC
 116:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN1  		: CAN 1
 117:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN2  		: CAN 2
 118:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ACF   		: ACF
 119:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_QEI 		: QEI
 120:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PCB   		: PCB
 121:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C1   	: I2C 1
 122:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP0   	: SSP 0
 123:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER2   	: Timer 2
 124:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER3   	: Timer 3
 125:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART2   	: UART 2
 126:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART3   	: UART 3
 127:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C2   	: I2C 2
 128:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2S   		: I2S
 129:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_RIT   		: RIT
 130:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SYSCON   	: SYSCON
 131:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_MC 		: MC
 132:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 133:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		Value of Selected Peripheral Clock Selection
 134:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **********************************************************************/
 135:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** uint32_t CLKPWR_GetPCLKSEL (uint32_t ClkType)
 136:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 164              		.loc 2 136 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 16
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 7, -4
 172 0002 85B0     		sub	sp, sp, #20
 173              		.cfi_def_cfa_offset 24
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 176 0006 7860     		str	r0, [r7, #4]
 137:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	uint32_t bitpos, retval;
 138:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 139:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	if (ClkType < 32)
 177              		.loc 2 139 0
 178 0008 7B68     		ldr	r3, [r7, #4]
 179 000a 1F2B     		cmp	r3, #31
 180 000c 06D8     		bhi	.L11
 140:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 141:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		bitpos = ClkType;
 181              		.loc 2 141 0
 182 000e 7B68     		ldr	r3, [r7, #4]
 183 0010 FB60     		str	r3, [r7, #12]
 142:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		retval = LPC_SC->PCLKSEL0;
 184              		.loc 2 142 0
 185 0012 0C4B     		ldr	r3, .L14
 186 0014 D3F8A831 		ldr	r3, [r3, #424]
 187 0018 BB60     		str	r3, [r7, #8]
 188 001a 06E0     		b	.L12
 189              	.L11:
 143:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 144:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	else
 145:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 146:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		bitpos = ClkType - 32;
 190              		.loc 2 146 0
 191 001c 7B68     		ldr	r3, [r7, #4]
 192 001e 203B     		subs	r3, r3, #32
 193 0020 FB60     		str	r3, [r7, #12]
 147:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		retval = LPC_SC->PCLKSEL1;
 194              		.loc 2 147 0
 195 0022 084B     		ldr	r3, .L14
 196 0024 D3F8AC31 		ldr	r3, [r3, #428]
 197 0028 BB60     		str	r3, [r7, #8]
 198              	.L12:
 148:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 149:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 150:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	retval = CLKPWR_PCLKSEL_GET(bitpos, retval);
 199              		.loc 2 150 0
 200 002a BA68     		ldr	r2, [r7, #8]
 201 002c FB68     		ldr	r3, [r7, #12]
 202 002e 22FA03F3 		lsr	r3, r2, r3
 203 0032 03F00303 		and	r3, r3, #3
 204 0036 BB60     		str	r3, [r7, #8]
 151:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	return retval;
 205              		.loc 2 151 0
 206 0038 BB68     		ldr	r3, [r7, #8]
 152:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 207              		.loc 2 152 0
 208 003a 1846     		mov	r0, r3
 209 003c 1437     		adds	r7, r7, #20
 210              		.cfi_def_cfa_offset 4
 211 003e BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0040 80BC     		pop	{r7}
 215              		.cfi_restore 7
 216              		.cfi_def_cfa_offset 0
 217 0042 7047     		bx	lr
 218              	.L15:
 219              		.align	2
 220              	.L14:
 221 0044 00C00F40 		.word	1074774016
 222              		.cfi_endproc
 223              	.LFE30:
 225              		.section	.text.CLKPWR_GetPCLK,"ax",%progbits
 226              		.align	2
 227              		.global	CLKPWR_GetPCLK
 228              		.thumb
 229              		.thumb_func
 231              	CLKPWR_GetPCLK:
 232              	.LFB31:
 153:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 154:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 155:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 156:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /*********************************************************************//**
 157:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Get current value of each Peripheral Clock
 158:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	ClkType	Peripheral Clock Selection of each type,
 159:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				should be one of the following:
 160:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *				- CLKPWR_PCLKSEL_WDT   		: WDT
 161:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER0   	: Timer 0
 162:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER1   	: Timer 1
 163:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART0   	: UART 0
 164:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART1  	: UART 1
 165:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PWM1   	: PWM 1
 166:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C0   	: I2C 0
 167:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SPI   		: SPI
 168:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP1   	: SSP 1
 169:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_DAC   		: DAC
 170:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ADC   		: ADC
 171:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN1  		: CAN 1
 172:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_CAN2  		: CAN 2
 173:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_ACF   		: ACF
 174:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_QEI 		: QEI
 175:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_PCB   		: PCB
 176:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C1   	: I2C 1
 177:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SSP0   	: SSP 0
 178:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER2   	: Timer 2
 179:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_TIMER3   	: Timer 3
 180:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART2   	: UART 2
 181:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_UART3   	: UART 3
 182:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2C2   	: I2C 2
 183:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_I2S   		: I2S
 184:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_RIT   		: RIT
 185:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_SYSCON   	: SYSCON
 186:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				- CLKPWR_PCLKSEL_MC 		: MC
 187:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 188:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		Value of Selected Peripheral Clock
 189:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **********************************************************************/
 190:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** uint32_t CLKPWR_GetPCLK (uint32_t ClkType)
 191:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 233              		.loc 2 191 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 16
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 84B0     		sub	sp, sp, #16
 242              		.cfi_def_cfa_offset 24
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
 192:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	uint32_t retval, div;
 193:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 194:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	retval = SystemCoreClock;
 246              		.loc 2 194 0
 247 0008 154B     		ldr	r3, .L24
 248 000a 1B68     		ldr	r3, [r3]
 249 000c BB60     		str	r3, [r7, #8]
 195:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	div = CLKPWR_GetPCLKSEL(ClkType);
 250              		.loc 2 195 0
 251 000e 7868     		ldr	r0, [r7, #4]
 252 0010 FFF7FEFF 		bl	CLKPWR_GetPCLKSEL
 253 0014 F860     		str	r0, [r7, #12]
 196:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 197:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	switch (div)
 254              		.loc 2 197 0
 255 0016 FB68     		ldr	r3, [r7, #12]
 256 0018 032B     		cmp	r3, #3
 257 001a 17D8     		bhi	.L17
 258 001c 01A2     		adr	r2, .L19
 259 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 260 0022 00BF     		.p2align 2
 261              	.L19:
 262 0024 35000000 		.word	.L18+1
 263 0028 3B000000 		.word	.L20+1
 264 002c 41000000 		.word	.L21+1
 265 0030 47000000 		.word	.L22+1
 266              		.p2align 1
 267              	.L18:
 198:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 199:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	case 0:
 200:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		div = 4;
 268              		.loc 2 200 0
 269 0034 0423     		movs	r3, #4
 270 0036 FB60     		str	r3, [r7, #12]
 201:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		break;
 271              		.loc 2 201 0
 272 0038 08E0     		b	.L17
 273              	.L20:
 202:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 203:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	case 1:
 204:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		div = 1;
 274              		.loc 2 204 0
 275 003a 0123     		movs	r3, #1
 276 003c FB60     		str	r3, [r7, #12]
 205:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		break;
 277              		.loc 2 205 0
 278 003e 05E0     		b	.L17
 279              	.L21:
 206:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 207:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	case 2:
 208:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		div = 2;
 280              		.loc 2 208 0
 281 0040 0223     		movs	r3, #2
 282 0042 FB60     		str	r3, [r7, #12]
 209:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		break;
 283              		.loc 2 209 0
 284 0044 02E0     		b	.L17
 285              	.L22:
 210:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 211:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	case 3:
 212:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		div = 8;
 286              		.loc 2 212 0
 287 0046 0823     		movs	r3, #8
 288 0048 FB60     		str	r3, [r7, #12]
 213:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		break;
 289              		.loc 2 213 0
 290 004a 00BF     		nop
 291              	.L17:
 214:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 215:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	retval /= div;
 292              		.loc 2 215 0
 293 004c BA68     		ldr	r2, [r7, #8]
 294 004e FB68     		ldr	r3, [r7, #12]
 295 0050 B2FBF3F3 		udiv	r3, r2, r3
 296 0054 BB60     		str	r3, [r7, #8]
 216:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 217:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	return retval;
 297              		.loc 2 217 0
 298 0056 BB68     		ldr	r3, [r7, #8]
 218:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 299              		.loc 2 218 0
 300 0058 1846     		mov	r0, r3
 301 005a 1037     		adds	r7, r7, #16
 302              		.cfi_def_cfa_offset 8
 303 005c BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 005e 80BD     		pop	{r7, pc}
 307              	.L25:
 308              		.align	2
 309              	.L24:
 310 0060 00000000 		.word	SystemCoreClock
 311              		.cfi_endproc
 312              	.LFE31:
 314              		.section	.text.CLKPWR_ConfigPPWR,"ax",%progbits
 315              		.align	2
 316              		.global	CLKPWR_ConfigPPWR
 317              		.thumb
 318              		.thumb_func
 320              	CLKPWR_ConfigPPWR:
 321              	.LFB32:
 219:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 220:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 221:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 222:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /*********************************************************************//**
 223:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Configure power supply for each peripheral according to NewState
 224:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	PPType	Type of peripheral used to enable power,
 225:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *     					should be one of the following:
 226:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *     			-  CLKPWR_PCONP_PCTIM0 		: Timer 0
 227:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCTIM1 		: Timer 1
 228:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCUART0  	: UART 0
 229:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCUART1   	: UART 1
 230:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCPWM1 		: PWM 1
 231:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCI2C0 		: I2C 0
 232:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCSPI   	: SPI
 233:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCRTC   	: RTC
 234:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCSSP1 		: SSP 1
 235:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCAD   		: ADC
 236:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCAN1   	: CAN 1
 237:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCAN2   	: CAN 2
 238:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCGPIO 		: GPIO
 239:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCRIT 		: RIT
 240:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCMC 		: MC
 241:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCQEI 		: QEI
 242:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCI2C1   	: I2C 1
 243:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCSSP0 		: SSP 0
 244:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCTIM2 		: Timer 2
 245:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCTIM3 		: Timer 3
 246:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCUART2  	: UART 2
 247:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCUART3   	: UART 3
 248:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCI2C2 		: I2C 2
 249:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCI2S   	: I2S
 250:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCGPDMA   	: GPDMA
 251:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCENET 		: Ethernet
 252:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 				-  CLKPWR_PCONP_PCUSB   	: USB
 253:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *
 254:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	NewState	New state of Peripheral Power, should be:
 255:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				- ENABLE	: Enable power for this peripheral
 256:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * 				- DISABLE	: Disable power for this peripheral
 257:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  *
 258:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return none
 259:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  **********************************************************************/
 260:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_ConfigPPWR (uint32_t PPType, FunctionalState NewState)
 261:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 322              		.loc 2 261 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327 0000 80B4     		push	{r7}
 328              		.cfi_def_cfa_offset 4
 329              		.cfi_offset 7, -4
 330 0002 83B0     		sub	sp, sp, #12
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 334 0006 7860     		str	r0, [r7, #4]
 335 0008 0B46     		mov	r3, r1
 336 000a FB70     		strb	r3, [r7, #3]
 262:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	if (NewState == ENABLE)
 337              		.loc 2 262 0
 338 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 339 000e 012B     		cmp	r3, #1
 340 0010 0AD1     		bne	.L27
 263:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 264:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCONP |= PPType & CLKPWR_PCONP_BITMASK;
 341              		.loc 2 264 0
 342 0012 0F48     		ldr	r0, .L30
 343 0014 0E4B     		ldr	r3, .L30
 344 0016 D3F8C420 		ldr	r2, [r3, #196]
 345 001a 7968     		ldr	r1, [r7, #4]
 346 001c 0D4B     		ldr	r3, .L30+4
 347 001e 0B40     		ands	r3, r3, r1
 348 0020 1343     		orrs	r3, r3, r2
 349 0022 C0F8C430 		str	r3, [r0, #196]
 265:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 266:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	else if (NewState == DISABLE)
 267:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 268:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 		LPC_SC->PCONP &= (~PPType) & CLKPWR_PCONP_BITMASK;
 269:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 270:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 350              		.loc 2 270 0
 351 0026 0DE0     		b	.L29
 352              	.L27:
 266:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	{
 353              		.loc 2 266 0
 354 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 355 002a 002B     		cmp	r3, #0
 356 002c 0AD1     		bne	.L29
 268:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	}
 357              		.loc 2 268 0
 358 002e 0849     		ldr	r1, .L30
 359 0030 074B     		ldr	r3, .L30
 360 0032 D3F8C420 		ldr	r2, [r3, #196]
 361 0036 7B68     		ldr	r3, [r7, #4]
 362 0038 DB43     		mvns	r3, r3
 363 003a 1A40     		ands	r2, r2, r3
 364 003c 054B     		ldr	r3, .L30+4
 365 003e 1340     		ands	r3, r3, r2
 366 0040 C1F8C430 		str	r3, [r1, #196]
 367              	.L29:
 368              		.loc 2 270 0
 369 0044 00BF     		nop
 370 0046 0C37     		adds	r7, r7, #12
 371              		.cfi_def_cfa_offset 4
 372 0048 BD46     		mov	sp, r7
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 004a 80BC     		pop	{r7}
 376              		.cfi_restore 7
 377              		.cfi_def_cfa_offset 0
 378 004c 7047     		bx	lr
 379              	.L31:
 380 004e 00BF     		.align	2
 381              	.L30:
 382 0050 00C00F40 		.word	1074774016
 383 0054 DEF7EFEF 		.word	-269486114
 384              		.cfi_endproc
 385              	.LFE32:
 387              		.section	.text.CLKPWR_Sleep,"ax",%progbits
 388              		.align	2
 389              		.global	CLKPWR_Sleep
 390              		.thumb
 391              		.thumb_func
 393              	CLKPWR_Sleep:
 394              	.LFB33:
 271:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 272:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 273:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /**
 274:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Enter Sleep mode with co-operated instruction by the Cortex-M3.
 275:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	None
 276:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		None
 277:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
 278:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_Sleep(void)
 279:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 395              		.loc 2 279 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 280:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	LPC_SC->PCON = 0x00;
 405              		.loc 2 280 0
 406 0004 034B     		ldr	r3, .L33
 407 0006 0022     		movs	r2, #0
 408 0008 C3F8C020 		str	r2, [r3, #192]
 281:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* Sleep Mode*/
 282:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	__WFI();
 409              		.loc 2 282 0
 410 000c FFF7FEFF 		bl	__WFI
 283:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 411              		.loc 2 283 0
 412 0010 00BF     		nop
 413 0012 80BD     		pop	{r7, pc}
 414              	.L34:
 415              		.align	2
 416              	.L33:
 417 0014 00C00F40 		.word	1074774016
 418              		.cfi_endproc
 419              	.LFE33:
 421              		.section	.text.CLKPWR_DeepSleep,"ax",%progbits
 422              		.align	2
 423              		.global	CLKPWR_DeepSleep
 424              		.thumb
 425              		.thumb_func
 427              	CLKPWR_DeepSleep:
 428              	.LFB34:
 284:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 285:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 286:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /**
 287:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Enter Deep Sleep mode with co-operated instruction by the Cortex-M3.
 288:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	None
 289:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		None
 290:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
 291:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_DeepSleep(void)
 292:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 429              		.loc 2 292 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 293:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****     /* Deep-Sleep Mode, set SLEEPDEEP bit */
 294:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	SCB->SCR = 0x4;
 439              		.loc 2 294 0
 440 0004 054B     		ldr	r3, .L36
 441 0006 0422     		movs	r2, #4
 442 0008 1A61     		str	r2, [r3, #16]
 295:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	LPC_SC->PCON = 0x00;
 443              		.loc 2 295 0
 444 000a 054B     		ldr	r3, .L36+4
 445 000c 0022     		movs	r2, #0
 446 000e C3F8C020 		str	r2, [r3, #192]
 296:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* Sleep Mode*/
 297:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	__WFI();
 447              		.loc 2 297 0
 448 0012 FFF7FEFF 		bl	__WFI
 298:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 449              		.loc 2 298 0
 450 0016 00BF     		nop
 451 0018 80BD     		pop	{r7, pc}
 452              	.L37:
 453 001a 00BF     		.align	2
 454              	.L36:
 455 001c 00ED00E0 		.word	-536810240
 456 0020 00C00F40 		.word	1074774016
 457              		.cfi_endproc
 458              	.LFE34:
 460              		.section	.text.CLKPWR_PowerDown,"ax",%progbits
 461              		.align	2
 462              		.global	CLKPWR_PowerDown
 463              		.thumb
 464              		.thumb_func
 466              	CLKPWR_PowerDown:
 467              	.LFB35:
 299:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 300:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 301:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /**
 302:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Enter Power Down mode with co-operated instruction by the Cortex-M3.
 303:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	None
 304:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		None
 305:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
 306:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_PowerDown(void)
 307:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 468              		.loc 2 307 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 80B5     		push	{r7, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 308:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****     /* Deep-Sleep Mode, set SLEEPDEEP bit */
 309:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	SCB->SCR = 0x4;
 478              		.loc 2 309 0
 479 0004 054B     		ldr	r3, .L39
 480 0006 0422     		movs	r2, #4
 481 0008 1A61     		str	r2, [r3, #16]
 310:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	LPC_SC->PCON = 0x01;
 482              		.loc 2 310 0
 483 000a 054B     		ldr	r3, .L39+4
 484 000c 0122     		movs	r2, #1
 485 000e C3F8C020 		str	r2, [r3, #192]
 311:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* Sleep Mode*/
 312:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	__WFI();
 486              		.loc 2 312 0
 487 0012 FFF7FEFF 		bl	__WFI
 313:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 488              		.loc 2 313 0
 489 0016 00BF     		nop
 490 0018 80BD     		pop	{r7, pc}
 491              	.L40:
 492 001a 00BF     		.align	2
 493              	.L39:
 494 001c 00ED00E0 		.word	-536810240
 495 0020 00C00F40 		.word	1074774016
 496              		.cfi_endproc
 497              	.LFE35:
 499              		.section	.text.CLKPWR_DeepPowerDown,"ax",%progbits
 500              		.align	2
 501              		.global	CLKPWR_DeepPowerDown
 502              		.thumb
 503              		.thumb_func
 505              	CLKPWR_DeepPowerDown:
 506              	.LFB36:
 314:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 315:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 
 316:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** /**
 317:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @brief 		Enter Deep Power Down mode with co-operated instruction by the Cortex-M3.
 318:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @param[in]	None
 319:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  * @return		None
 320:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****  */
 321:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** void CLKPWR_DeepPowerDown(void)
 322:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** {
 507              		.loc 2 322 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 323:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c ****     /* Deep-Sleep Mode, set SLEEPDEEP bit */
 324:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	SCB->SCR = 0x4;
 517              		.loc 2 324 0
 518 0004 054B     		ldr	r3, .L42
 519 0006 0422     		movs	r2, #4
 520 0008 1A61     		str	r2, [r3, #16]
 325:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	LPC_SC->PCON = 0x03;
 521              		.loc 2 325 0
 522 000a 054B     		ldr	r3, .L42+4
 523 000c 0322     		movs	r2, #3
 524 000e C3F8C020 		str	r2, [r3, #192]
 326:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	/* Sleep Mode*/
 327:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** 	__WFI();
 525              		.loc 2 327 0
 526 0012 FFF7FEFF 		bl	__WFI
 328:Libraries/NXP/Drivers/source/lpc17xx_clkpwr.c **** }
 527              		.loc 2 328 0
 528 0016 00BF     		nop
 529 0018 80BD     		pop	{r7, pc}
 530              	.L43:
 531 001a 00BF     		.align	2
 532              	.L42:
 533 001c 00ED00E0 		.word	-536810240
 534 0020 00C00F40 		.word	1074774016
 535              		.cfi_endproc
 536              	.LFE36:
 538              		.text
 539              	.Letext0:
 540              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\mach
 541              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q2\\arm-none-eabi\\include\\sys\
 542              		.file 5 "./Libraries/NXP/Core/CM3/DeviceSupport/NXP/LPC17xx/lpc17xx.h"
 543              		.file 6 "./Libraries/NXP/Drivers/include/lpc_types.h"
 544              		.file 7 "./Libraries/NXP/Core/CM3/DeviceSupport/NXP/LPC17xx/system_LPC17xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_clkpwr.c
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:20     .text.__WFI:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:24     .text.__WFI:00000000 __WFI
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:56     .text.CLKPWR_SetPCLKDiv:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:61     .text.CLKPWR_SetPCLKDiv:00000000 CLKPWR_SetPCLKDiv
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:152    .text.CLKPWR_SetPCLKDiv:00000088 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:157    .text.CLKPWR_GetPCLKSEL:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:162    .text.CLKPWR_GetPCLKSEL:00000000 CLKPWR_GetPCLKSEL
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:221    .text.CLKPWR_GetPCLKSEL:00000044 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:226    .text.CLKPWR_GetPCLK:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:231    .text.CLKPWR_GetPCLK:00000000 CLKPWR_GetPCLK
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:262    .text.CLKPWR_GetPCLK:00000024 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:266    .text.CLKPWR_GetPCLK:00000034 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:310    .text.CLKPWR_GetPCLK:00000060 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:315    .text.CLKPWR_ConfigPPWR:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:320    .text.CLKPWR_ConfigPPWR:00000000 CLKPWR_ConfigPPWR
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:382    .text.CLKPWR_ConfigPPWR:00000050 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:388    .text.CLKPWR_Sleep:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:393    .text.CLKPWR_Sleep:00000000 CLKPWR_Sleep
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:417    .text.CLKPWR_Sleep:00000014 $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:422    .text.CLKPWR_DeepSleep:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:427    .text.CLKPWR_DeepSleep:00000000 CLKPWR_DeepSleep
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:455    .text.CLKPWR_DeepSleep:0000001c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:461    .text.CLKPWR_PowerDown:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:466    .text.CLKPWR_PowerDown:00000000 CLKPWR_PowerDown
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:494    .text.CLKPWR_PowerDown:0000001c $d
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:500    .text.CLKPWR_DeepPowerDown:00000000 $t
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:505    .text.CLKPWR_DeepPowerDown:00000000 CLKPWR_DeepPowerDown
C:\Users\KHUSHA~1\AppData\Local\Temp\ccpK1FW5.s:533    .text.CLKPWR_DeepPowerDown:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
